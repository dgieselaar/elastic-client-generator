{"info": {"description": "", "version": "7.10.0", "title": "Elasticsearch", "license": {"name": "Apache 2.0", "url": "https://github.com/elastic/elasticsearch/blob/master/LICENSE.txt"}}, "externalDocs": {"description": "Documentation", "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html"}, "tags": [{"name": "async_search"}, {"name": "cat"}, {"name": "ccr"}, {"name": "cluster"}, {"name": "enrich"}, {"name": "graph"}, {"name": "ilm"}, {"name": "indices"}, {"name": "ingest"}, {"name": "license"}, {"name": "migration"}, {"name": "ml"}, {"name": "nodes"}, {"name": "rollup"}, {"name": "security"}, {"name": "slm"}, {"name": "snapshot"}, {"name": "sql"}, {"name": "ssl"}, {"name": "tasks"}, {"name": "transform"}, {"name": "watcher"}, {"name": "xpack"}], "definitions": {"CatAliasesRequest": {"_kind": "request", "name": {"namespace": "cat.cat_aliases", "name": "CatAliasesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of alias names to return"}], "query": [{"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatAliasesResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_aliases", "name": "CatAliasesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_aliases", "name": "CatAliasesRecord"}}}, "required": false}]}, "CatAllocationRequest": {"_kind": "request", "name": {"namespace": "cat.cat_allocation", "name": "CatAllocationRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information"}], "query": [{"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatAllocationResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_allocation", "name": "CatAllocationResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_allocation", "name": "CatAllocationRecord"}}}, "required": false}]}, "CatCountRequest": {"_kind": "request", "name": {"namespace": "cat.cat_count", "name": "CatCountRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to limit the returned information"}], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatCountResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_count", "name": "CatCountResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_count", "name": "CatCountRecord"}}}, "required": false}]}, "CatDataFrameAnalyticsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_data_frame_analytics", "name": "CatDataFrameAnalyticsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the data frame analytics to fetch"}], "query": [{"name": "allow_no_match", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no configs. (This includes `_all` string or when no configs have been specified)"}, {"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatDataFrameAnalyticsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_data_frame_analytics", "name": "CatDataFrameAnalyticsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_data_frame_analytics", "name": "CatDataFrameAnalyticsRecord"}}}, "required": false}]}, "CatDatafeedsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_datafeeds", "name": "CatDatafeedsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the datafeeds stats to fetch"}], "query": [{"name": "allow_no_datafeeds", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatDatafeedsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_datafeeds", "name": "CatDatafeedsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_datafeeds", "name": "CatDatafeedsRecord"}}}, "required": false}]}, "CatFielddataRequest": {"_kind": "request", "name": {"namespace": "cat.cat_fielddata", "name": "CatFielddataRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "fields", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Fields"}}, "required": false, "description": "A comma-separated list of fields to return the fielddata size"}], "query": [{"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatFielddataResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_fielddata", "name": "CatFielddataResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_fielddata", "name": "CatFielddataRecord"}}}, "required": false}]}, "CatHealthRequest": {"_kind": "request", "name": {"namespace": "cat.cat_health", "name": "CatHealthRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "include_timestamp", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatHealthResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_health", "name": "CatHealthResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_health", "name": "CatHealthRecord"}}}, "required": false}]}, "CatHelpRequest": {"_kind": "request", "name": {"namespace": "cat.cat_help", "name": "CatHelpRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "CatHelpResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_help", "name": "CatHelpResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_help", "name": "CatHelpRecord"}}}, "required": false}]}, "CatIndicesRequest": {"_kind": "request", "name": {"namespace": "cat.cat_indices", "name": "CatIndicesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to limit the returned information"}], "query": [{"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "health", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Health"}}, "required": false, "description": "A health status (\"green\", \"yellow\", or \"red\" to filter only indices matching the specified health status"}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "include_unloaded_segments", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If set to true segment stats will include stats for segments that are not currently loaded into memory"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "pri", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Set to true to return stats only for primary shards"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatIndicesResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_indices", "name": "CatIndicesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_indices", "name": "CatIndicesRecord"}}}, "required": false}]}, "CatJobsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_jobs", "name": "CatJobsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the jobs stats to fetch"}], "query": [{"name": "allow_no_jobs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"}, {"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatJobsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_jobs", "name": "CatJobsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_jobs", "name": "CatJobsRecord"}}}, "required": false}]}, "CatMasterRequest": {"_kind": "request", "name": {"namespace": "cat.cat_master", "name": "CatMasterRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatMasterResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_master", "name": "CatMasterResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_master", "name": "CatMasterRecord"}}}, "required": false}]}, "CatNodeAttributesRequest": {"_kind": "request", "name": {"namespace": "cat.cat_node_attributes", "name": "CatNodeAttributesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatNodeAttributesResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_node_attributes", "name": "CatNodeAttributesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_node_attributes", "name": "CatNodeAttributesRecord"}}}, "required": false}]}, "CatNodesRequest": {"_kind": "request", "name": {"namespace": "cat.cat_nodes", "name": "CatNodesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "full_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return the full node ID instead of the shortened version (default: false)"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Calculate the selected nodes using the local cluster state rather than the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatNodesResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_nodes", "name": "CatNodesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_nodes", "name": "CatNodesRecord"}}}, "required": false}]}, "CatPendingTasksRequest": {"_kind": "request", "name": {"namespace": "cat.cat_pending_tasks", "name": "CatPendingTasksRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatPendingTasksResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_pending_tasks", "name": "CatPendingTasksResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_pending_tasks", "name": "CatPendingTasksRecord"}}}, "required": false}]}, "CatPluginsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_plugins", "name": "CatPluginsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatPluginsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_plugins", "name": "CatPluginsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_plugins", "name": "CatPluginsRecord"}}}, "required": false}]}, "CatRecoveryRequest": {"_kind": "request", "name": {"namespace": "cat.cat_recovery", "name": "CatRecoveryRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "Comma-separated list or wildcard expression of index names to limit the returned information"}], "query": [{"name": "active_only", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If `true`, the response only includes ongoing shard recoveries"}, {"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "detailed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If `true`, the response includes detailed information about shard recoveries"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatRecoveryResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_recovery", "name": "CatRecoveryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_recovery", "name": "CatRecoveryRecord"}}}, "required": false}]}, "CatRepositoriesRequest": {"_kind": "request", "name": {"namespace": "cat.cat_repositories", "name": "CatRepositoriesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatRepositoriesResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_repositories", "name": "CatRepositoriesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_repositories", "name": "CatRepositoriesRecord"}}}, "required": false}]}, "CatSegmentsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_segments", "name": "CatSegmentsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to limit the returned information"}], "query": [{"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatSegmentsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_segments", "name": "CatSegmentsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_segments", "name": "CatSegmentsRecord"}}}, "required": false}]}, "CatShardsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_shards", "name": "CatShardsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to limit the returned information"}], "query": [{"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatShardsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_shards", "name": "CatShardsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_shards", "name": "CatShardsRecord"}}}, "required": false}]}, "CatSnapshotsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_snapshots", "name": "CatSnapshotsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "Name of repository from which to fetch the snapshot information"}], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Set to true to ignore unavailable snapshots"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatSnapshotsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_snapshots", "name": "CatSnapshotsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_snapshots", "name": "CatSnapshotsRecord"}}}, "required": false}]}, "CatTasksRequest": {"_kind": "request", "name": {"namespace": "cat.cat_tasks", "name": "CatTasksRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "actions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of actions that should be returned. Leave empty to return all."}, {"name": "detailed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return detailed task information (default: false)"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "node_id", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}, {"name": "parent_task", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Return tasks with specified parent task id. Set to -1 to return all."}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatTasksResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_tasks", "name": "CatTasksResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_tasks", "name": "CatTasksRecord"}}}, "required": false}]}, "CatTemplatesRequest": {"_kind": "request", "name": {"namespace": "cat.cat_templates", "name": "CatTemplatesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "A pattern that returned template names must match"}], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatTemplatesResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_templates", "name": "CatTemplatesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_templates", "name": "CatTemplatesRecord"}}}, "required": false}]}, "CatThreadPoolRequest": {"_kind": "request", "name": {"namespace": "cat.cat_thread_pool", "name": "CatThreadPoolRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "thread_pool_patterns", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of regular-expressions to filter the thread pools in the output"}], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Size"}}, "required": false, "description": "The multiplier in which to display values"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatThreadPoolResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_thread_pool", "name": "CatThreadPoolResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_thread_pool", "name": "CatThreadPoolRecord"}}}, "required": false}]}, "CatTrainedModelsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_trained_models", "name": "CatTrainedModelsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "model_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the trained models stats to fetch"}], "query": [{"name": "allow_no_match", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no trained models. (This includes `_all` string or when no trained models have been specified)"}, {"name": "bytes", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Bytes"}}, "required": false, "description": "The unit in which to display byte values"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "skips a number of trained models"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "specifies a max number of trained models to get"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatTrainedModelsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_trained_models", "name": "CatTrainedModelsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_trained_models", "name": "CatTrainedModelsRecord"}}}, "required": false}]}, "CatTransformsRequest": {"_kind": "request", "name": {"namespace": "cat.cat_transforms", "name": "CatTransformsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The id of the transform for which to get stats. '_all' or '*' implies all transforms"}], "query": [{"name": "allow_no_match", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"}, {"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "skips a number of transform configs, defaults to 0"}, {"name": "headers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "help", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return help information"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "specifies a max number of transforms to get, defaults to 100"}, {"name": "sort_by_columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CatTransformsResponse": {"_kind": "interface", "name": {"namespace": "cat.cat_transforms", "name": "CatTransformsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cat.cat_transforms", "name": "CatTransformsRecord"}}}, "required": false}]}, "ClusterAllocationExplainRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_allocation_explain", "name": "ClusterAllocationExplainRequest"}, "description": "The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "include_disk_info", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return information about disk usage and shard sizes (default: false)"}, {"name": "include_yes_decisions", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return 'YES' decisions in explanation (default: false)"}], "body": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false}, {"name": "primary", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "shard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "ClusterAllocationExplainResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_allocation_explain", "name": "ClusterAllocationExplainResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "allocate_explanation", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "allocation_delay", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "allocation_delay_in_millis", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "can_allocate", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "Decision"}}, "required": false}, {"name": "can_move_to_other_node", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "Decision"}}, "required": false}, {"name": "can_rebalance_cluster", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "Decision"}}, "required": false}, {"name": "can_rebalance_cluster_decisions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "AllocationDecision"}}}, "required": false}, {"name": "can_rebalance_to_other_node", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "Decision"}}, "required": false}, {"name": "can_remain_decisions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "AllocationDecision"}}}, "required": false}, {"name": "can_remain_on_current_node", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "Decision"}}, "required": false}, {"name": "configured_delay", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "configured_delay_in_mills", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "current_node", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "CurrentNode"}}, "required": false}, {"name": "current_state", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "move_explanation", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "node_allocation_decisions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "NodeAllocationExplanation"}}}, "required": false}, {"name": "primary", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "rebalance_explanation", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "remaining_delay", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "remaining_delay_in_millis", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "shard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "unassigned_info", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_allocation_explain", "name": "UnassignedInformation"}}, "required": false}]}, "ClusterHealthRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_health", "name": "ClusterHealthRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "Limit the information returned to a specific index"}], "query": [{"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "level", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Level"}}, "required": false, "description": "Specify the level of detail for returned information"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Wait until the specified number of shards is active"}, {"name": "wait_for_events", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "WaitForEvents"}}, "required": false, "description": "Wait until all currently queued events with the given priority are processed"}, {"name": "wait_for_nodes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Wait until the specified number of nodes is available"}, {"name": "wait_for_no_initializing_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to wait until there are no initializing shards in the cluster"}, {"name": "wait_for_no_relocating_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to wait until there are no relocating shards in the cluster"}, {"name": "wait_for_status", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "WaitForStatus"}}, "required": false, "description": "Wait until cluster is in a specific state"}]}, "ClusterHealthResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_health", "name": "ClusterHealthResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "active_primary_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "active_shards_percent_as_number", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "delayed_unassigned_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "indices", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_health", "name": "IndexHealthStats"}}}, "required": false, "annotations": {"prop_serializer": "ResolvableReadOnlyDictionaryFormatter`2"}}, {"name": "initializing_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "number_of_data_nodes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "number_of_in_flight_fetch", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "number_of_nodes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "number_of_pending_tasks", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "relocating_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "status", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Health"}}, "required": false}, {"name": "task_max_waiting_in_queue_millis", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "unassigned_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "ClusterPendingTasksRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_pending_tasks", "name": "ClusterPendingTasksRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}]}, "ClusterPendingTasksResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_pending_tasks", "name": "ClusterPendingTasksResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "tasks", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_pending_tasks", "name": "PendingTask"}}}, "required": false}]}, "ClusterRerouteRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_reroute", "name": "ClusterRerouteRequest"}, "description": "The definition of `commands` to perform (`move`, `cancel`, `allocate`)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "dry_run", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Simulate the operation only and return the resulting state"}, {"name": "explain", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return an explanation of why the commands can or cannot be executed"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "metric", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "Limit the information returned to the specified metrics. Defaults to all but metadata"}, {"name": "retry_failed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Retries allocation of shards that are blocked due to too many subsequent allocation failures"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "commands", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_reroute.commands", "name": "ClusterRerouteCommand"}}}, "required": false}]}, "ClusterRerouteResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_reroute", "name": "ClusterRerouteResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "explanations", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.cluster_reroute", "name": "ClusterRerouteExplanation"}}}, "required": false}, {"name": "state", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "ClusterGetSettingsRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_settings.cluster_get_settings", "name": "ClusterGetSettingsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "include_defaults", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to return all default clusters setting."}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "ClusterGetSettingsResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_settings.cluster_get_settings", "name": "ClusterGetSettingsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "persistent", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "transient", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "ClusterPutSettingsRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_settings.cluster_put_settings", "name": "ClusterPutSettingsRequest"}, "description": "The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "persistent", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "transient", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "ClusterPutSettingsResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_settings.cluster_put_settings", "name": "ClusterPutSettingsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "persistent", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "transient", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "ClusterStateRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_state", "name": "ClusterStateRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Metrics"}}, "required": false, "description": "Limit the information returned to the specified metrics"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "wait_for_metadata_version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Wait for the metadata version to be equal or greater than the specified metadata version"}, {"name": "wait_for_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "The maximum time to wait for wait_for_metadata_version before timing out"}]}, "ClusterStateResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_state", "name": "ClusterStateResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "cluster_uuid", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "master_node", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "state", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "state_uuid", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "ClusterStatsRequest": {"_kind": "request", "name": {"namespace": "cluster.cluster_stats", "name": "ClusterStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}], "query": [{"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "ClusterStatsResponse": {"_kind": "interface", "name": {"namespace": "cluster.cluster_stats", "name": "ClusterStatsResponse"}, "inherits": [{"type": {"namespace": "cluster", "name": "NodesResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "cluster_uuid", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_stats", "name": "ClusterIndicesStats"}}, "required": false}, {"name": "nodes", "type": {"_kind": "instance", "type": {"namespace": "cluster.cluster_stats", "name": "ClusterNodesStats"}}, "required": false}, {"name": "status", "type": {"_kind": "instance", "type": {"namespace": "cluster", "name": "ClusterStatus"}}, "required": false}, {"name": "timestamp", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "NodesHotThreadsRequest": {"_kind": "request", "name": {"namespace": "cluster.nodes_hot_threads", "name": "NodesHotThreadsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}], "query": [{"name": "ignore_idle_threads", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)"}, {"name": "interval", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "The interval for the second sampling of threads"}, {"name": "snapshots", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Number of samples of thread stacktrace (default: 10)"}, {"name": "threads", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Specify the number of threads to provide information for (default: 3)"}, {"name": "thread_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ThreadType"}}, "required": false}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "NodesHotThreadsResponse": {"_kind": "interface", "name": {"namespace": "cluster.nodes_hot_threads", "name": "NodesHotThreadsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "hot_threads", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "cluster.nodes_hot_threads", "name": "HotThreadInformation"}}}, "required": false}]}, "NodesInfoRequest": {"_kind": "request", "name": {"namespace": "cluster.nodes_info", "name": "NodesInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}, {"name": "metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Metrics"}}, "required": false, "description": "A comma-separated list of metrics you wish returned. Leave empty to return all."}], "query": [{"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "NodesInfoResponse": {"_kind": "interface", "name": {"namespace": "cluster.nodes_info", "name": "NodesInfoResponse"}, "inherits": [{"type": {"namespace": "cluster", "name": "NodesResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.nodes_info", "name": "NodeInfo"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}]}, "NodesStatsRequest": {"_kind": "request", "name": {"namespace": "cluster.nodes_stats", "name": "NodesStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}, {"name": "metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Metrics"}}, "required": false, "description": "Limit the information returned to the specified metrics"}, {"name": "index_metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexMetrics"}}, "required": false, "description": "Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."}], "query": [{"name": "completion_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)"}, {"name": "fielddata_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields for `fielddata` index metric (supports wildcards)"}, {"name": "fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)"}, {"name": "groups", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "A comma-separated list of search groups for `search` index metric"}, {"name": "include_segment_file_sizes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)"}, {"name": "level", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Level"}}, "required": false, "description": "Return indices stats aggregated at index, node or shard level"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "types", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of document types for the `indexing` index metric"}]}, "NodesStatsResponse": {"_kind": "interface", "name": {"namespace": "cluster.nodes_stats", "name": "NodesStatsResponse"}, "inherits": [{"type": {"namespace": "cluster", "name": "NodesResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.nodes_stats", "name": "NodeStats"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}]}, "NodesUsageRequest": {"_kind": "request", "name": {"namespace": "cluster.nodes_usage", "name": "NodesUsageRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}, {"name": "metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Metrics"}}, "required": false, "description": "Limit the information returned to the specified metrics"}], "query": [{"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "NodesUsageResponse": {"_kind": "interface", "name": {"namespace": "cluster.nodes_usage", "name": "NodesUsageResponse"}, "inherits": [{"type": {"namespace": "cluster", "name": "NodesResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.nodes_usage", "name": "NodeUsageInformation"}}}, "required": false}]}, "PingRequest": {"_kind": "request", "name": {"namespace": "cluster.ping", "name": "PingRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "PingResponse": {"_kind": "interface", "name": {"namespace": "cluster.ping", "name": "PingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "ReloadSecureSettingsRequest": {"_kind": "request", "name": {"namespace": "cluster.reload_secure_settings", "name": "ReloadSecureSettingsRequest"}, "description": "An object containing the password for the elasticsearch keystore", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "node_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "NodeIds"}}, "required": false, "description": "A comma-separated list of node IDs to span the reload/reinit call. Should stay empty because reloading usually involves all cluster nodes."}], "query": [{"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "ReloadSecureSettingsResponse": {"_kind": "interface", "name": {"namespace": "cluster.reload_secure_settings", "name": "ReloadSecureSettingsResponse"}, "inherits": [{"type": {"namespace": "cluster", "name": "NodesResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.nodes_stats", "name": "NodeStats"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}]}, "RemoteInfoRequest": {"_kind": "request", "name": {"namespace": "cluster.remote_info", "name": "RemoteInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "RemoteInfoResponse": {"_kind": "interface", "name": {"namespace": "cluster.remote_info", "name": "RemoteInfoResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "cluster.remote_info", "name": "RemoteInfo"}}]}], "properties": []}, "RootNodeInfoRequest": {"_kind": "request", "name": {"namespace": "cluster.root_node_info", "name": "RootNodeInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "RootNodeInfoResponse": {"_kind": "interface", "name": {"namespace": "cluster.root_node_info", "name": "RootNodeInfoResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "cluster_uuid", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "tagline", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "common_abstractions.response", "name": "ElasticsearchVersionInfo"}}, "required": false}]}, "CancelTasksRequest": {"_kind": "request", "name": {"namespace": "cluster.task_management.cancel_tasks", "name": "CancelTasksRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": false, "description": "Cancel the task with specified task id (node_id:task_number)"}], "query": [{"name": "actions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of actions that should be cancelled. Leave empty to cancel all."}, {"name": "nodes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}, {"name": "parent_task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all."}]}, "CancelTasksResponse": {"_kind": "interface", "name": {"namespace": "cluster.task_management.cancel_tasks", "name": "CancelTasksResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "node_failures", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "ErrorCause"}}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.task_management.list_tasks", "name": "TaskExecutingNode"}}}, "required": false}]}, "GetTaskRequest": {"_kind": "request", "name": {"namespace": "cluster.task_management.get_task", "name": "GetTaskRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": true, "description": "Return the task with specified id (node_id:task_number)"}], "query": [{"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Wait for the matching tasks to complete (default: false)"}]}, "GetTaskResponse": {"_kind": "interface", "name": {"namespace": "cluster.task_management.get_task", "name": "GetTaskResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "completed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "task", "type": {"_kind": "instance", "type": {"namespace": "cluster.task_management.get_task", "name": "TaskInfo"}}, "required": false}]}, "ListTasksRequest": {"_kind": "request", "name": {"namespace": "cluster.task_management.list_tasks", "name": "ListTasksRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "actions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of actions that should be returned. Leave empty to return all."}, {"name": "detailed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return detailed task information (default: false)"}, {"name": "group_by", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "GroupBy"}}, "required": false, "description": "Group tasks by nodes or parent/child relationships"}, {"name": "nodes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"}, {"name": "parent_task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all."}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Wait for the matching tasks to complete (default: false)"}]}, "ListTasksResponse": {"_kind": "interface", "name": {"namespace": "cluster.task_management.list_tasks", "name": "ListTasksResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "node_failures", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "ErrorCause"}}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "cluster.task_management.list_tasks", "name": "TaskExecutingNode"}}}, "required": false}]}, "BulkRequest": {"_kind": "request", "name": {"namespace": "document.multiple.bulk", "name": "BulkRequest"}, "description": "The operation definition and data (action-data pairs), separated by newlines", "generics": ["TSource"], "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false, "description": "Default index for items which don't provide one"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "Default document type for items which don't provide one"}], "query": [{"name": "pipeline", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The pipeline id to preprocess incoming documents with"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "type_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}], "body": {"_kind": "instance", "type": {"namespace": "internal", "name": "Array"}, "generics": [{"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "document.multiple.bulk.bulk_operation", "name": "BulkOperationContainer"}}, {"_kind": "instance", "type": {"namespace": "generic", "name": "TSource"}}]}]}}, "BulkResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.bulk", "name": "BulkResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "errors", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "items", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple.bulk.bulk_response_item", "name": "BulkResponseItemContainer"}}}, "required": false}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "DeleteByQueryRequest": {"_kind": "request", "name": {"namespace": "document.multiple.delete_by_query", "name": "DeleteByQueryRequest"}, "description": "The search definition using the Query DSL", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The analyzer to use for the query string"}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"}, {"name": "conflicts", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Conflicts"}}, "required": false, "description": "What to do when the delete by query hits version conflicts?"}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false, "description": "The default operator for query string query (AND or OR)"}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The field to use as default where no field prefix is given in the query string"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Starting offset (default: 0)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the effected indexes be refreshed?"}, {"name": "request_cache", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify if request cache should be used for this request or not, defaults to index level setting"}, {"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The throttle for this request in sub-requests per second. -1 means no throttle."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "A comma-separated list of specific routing values"}, {"name": "scroll", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify how long a consistent view of the index should be maintained for scrolled search"}, {"name": "scroll_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Size on the scroll request powering the delete by query"}, {"name": "search_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit timeout for each search request. Defaults to no timeout."}, {"name": "search_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SearchType"}}, "required": false, "description": "Search operation type"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Deprecated, please use `max_docs` instead"}, {"name": "slices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of slices this task should be divided into. Defaults to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."}, {"name": "sort", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of <field>:<direction> pairs"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "stats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "Specific 'tag' of the request for logging and statistical purposes"}, {"name": "terminate_after", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early."}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Time each individual bulk request should wait for shards that are unavailable."}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to return document version as part of a hit"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the request should block until the delete by query is complete."}], "body": [{"name": "max_docs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "slice", "type": {"_kind": "instance", "type": {"namespace": "search.scroll.scroll", "name": "SlicedScroll"}}, "required": false}]}, "DeleteByQueryResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.delete_by_query", "name": "DeleteByQueryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "batches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "deleted", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "failures", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple", "name": "BulkIndexByScrollFailure"}}}, "required": false}, {"name": "noops", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "float"}}, "required": false}, {"name": "retries", "type": {"_kind": "instance", "type": {"namespace": "document.multiple", "name": "Retries"}}, "required": false}, {"name": "slice_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "task", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": false}, {"name": "throttled_millis", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "throttled_until_millis", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "version_conflicts", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "DeleteByQueryRethrottleRequest": {"_kind": "request", "name": {"namespace": "document.multiple.delete_by_query_rethrottle", "name": "DeleteByQueryRethrottleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": true, "description": "The task id to rethrottle"}], "query": [{"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The throttle to set on this request in floating sub-requests per second. -1 means set no throttle."}]}, "DeleteByQueryRethrottleResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.delete_by_query_rethrottle", "name": "DeleteByQueryRethrottleResponse"}, "inherits": [{"type": {"namespace": "cluster.task_management.list_tasks", "name": "ListTasksResponse"}}], "properties": []}, "MultiGetRequest": {"_kind": "request", "name": {"namespace": "document.multiple.multi_get.request", "name": "MultiGetRequest"}, "description": "Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document"}], "query": [{"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to perform the operation in realtime or search mode"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Refresh the shard containing the document before performing the operation"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "stored_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of stored fields to return in the response"}], "body": [{"name": "docs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple.multi_get.request", "name": "MultiGetOperation"}}}, "required": false}]}, "MultiGetResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.multi_get.response", "name": "MultiGetResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "hits", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple.multi_get.response", "name": "MultiGetHit"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}]}}, "required": false}]}, "MultiTermVectorsRequest": {"_kind": "request", "name": {"namespace": "document.multiple.multi_term_vectors", "name": "MultiTermVectorsRequest"}, "description": "Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false, "description": "The index in which the document resides."}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document."}], "query": [{"name": "fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "field_statistics", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "offsets", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "payloads", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "positions", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if requests are real-time as opposed to near-real-time (default: true)."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "term_statistics", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}], "body": [{"name": "docs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple.multi_term_vectors", "name": "MultiTermVectorOperation"}}}, "required": false}, {"name": "ids", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}}, "required": false}]}, "MultiTermVectorsResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.multi_term_vectors", "name": "MultiTermVectorsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "docs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.single.term_vectors", "name": "TermVectorsResult"}}}, "required": false}]}, "ReindexOnServerRequest": {"_kind": "request", "name": {"namespace": "document.multiple.reindex_on_server", "name": "ReindexOnServerRequest"}, "description": "The search definition using the Query DSL and the prototype for the index request.", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the affected indexes be refreshed?"}, {"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The throttle to set on this request in sub-requests per second. -1 means no throttle."}, {"name": "scroll", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Control how long to keep the search context alive"}, {"name": "slices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of slices this task should be divided into. Defaults to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Time each individual bulk request should wait for shards that are unavailable."}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the request should block until the reindex is complete."}], "body": [{"name": "conflicts", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Conflicts"}}, "required": false}, {"name": "dest", "type": {"_kind": "instance", "type": {"namespace": "document.multiple.reindex_on_server", "name": "ReindexDestination"}}, "required": false}, {"name": "max_docs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "script", "type": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "Script"}}, "required": false}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "source", "type": {"_kind": "instance", "type": {"namespace": "document.multiple.reindex_on_server", "name": "ReindexSource"}}, "required": false}]}, "ReindexOnServerResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.reindex_on_server", "name": "ReindexOnServerResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "batches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "created", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "failures", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple", "name": "BulkIndexByScrollFailure"}}}, "required": false}, {"name": "noops", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "retries", "type": {"_kind": "instance", "type": {"namespace": "document.multiple", "name": "Retries"}}, "required": false}, {"name": "slice_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "task", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": false}, {"name": "timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "total", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "updated", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "version_conflicts", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "ReindexRethrottleRequest": {"_kind": "request", "name": {"namespace": "document.multiple.reindex_rethrottle", "name": "ReindexRethrottleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": true, "description": "The task id to rethrottle"}], "query": [{"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The throttle to set on this request in floating sub-requests per second. -1 means set no throttle."}]}, "ReindexRethrottleResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.reindex_rethrottle", "name": "ReindexRethrottleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "document.multiple.reindex_rethrottle", "name": "ReindexNode"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}]}, "UpdateByQueryRequest": {"_kind": "request", "name": {"namespace": "document.multiple.update_by_query", "name": "UpdateByQueryRequest"}, "description": "The search definition using the Query DSL", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The analyzer to use for the query string"}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"}, {"name": "conflicts", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Conflicts"}}, "required": false, "description": "What to do when the update by query hits version conflicts?"}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false, "description": "The default operator for query string query (AND or OR)"}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The field to use as default where no field prefix is given in the query string"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Starting offset (default: 0)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"}, {"name": "pipeline", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Ingest pipeline to set on index requests made by this action. (default: none)"}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the affected indexes be refreshed?"}, {"name": "request_cache", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify if request cache should be used for this request or not, defaults to index level setting"}, {"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The throttle to set on this request in sub-requests per second. -1 means no throttle."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "A comma-separated list of specific routing values"}, {"name": "scroll", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify how long a consistent view of the index should be maintained for scrolled search"}, {"name": "scroll_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Size on the scroll request powering the update by query"}, {"name": "search_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit timeout for each search request. Defaults to no timeout."}, {"name": "search_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SearchType"}}, "required": false, "description": "Search operation type"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Deprecated, please use `max_docs` instead"}, {"name": "slices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of slices this task should be divided into. Defaults to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."}, {"name": "sort", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of <field>:<direction> pairs"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "stats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "Specific 'tag' of the request for logging and statistical purposes"}, {"name": "terminate_after", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early."}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Time each individual bulk request should wait for shards that are unavailable."}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to return document version as part of a hit"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the document increment the version number (internal) on hit or not (reindex)"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the request should block until the update by query operation is complete."}], "body": [{"name": "max_docs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "script", "type": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "Script"}}, "required": false}, {"name": "slice", "type": {"_kind": "instance", "type": {"namespace": "search.scroll.scroll", "name": "SlicedScroll"}}, "required": false}]}, "UpdateByQueryResponse": {"_kind": "interface", "name": {"namespace": "document.multiple.update_by_query", "name": "UpdateByQueryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "batches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "failures", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "document.multiple", "name": "BulkIndexByScrollFailure"}}}, "required": false}, {"name": "noops", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "requests_per_second", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "float"}}, "required": false}, {"name": "retries", "type": {"_kind": "instance", "type": {"namespace": "document.multiple", "name": "Retries"}}, "required": false}, {"name": "task", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": false}, {"name": "timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "updated", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "version_conflicts", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "CreateRequest": {"_kind": "request", "name": {"namespace": "document.single.create", "name": "CreateRequest"}, "description": "The document", "annotations": {"type_stability": "stable"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document"}], "query": [{"name": "pipeline", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The pipeline id to preprocess incoming documents with"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}], "body": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}}, "CreateResponse": {"_kind": "interface", "name": {"namespace": "document.single.create", "name": "CreateResponse"}, "inherits": [{"type": {"namespace": "document.single", "name": "WriteResponseBase"}}], "properties": []}, "DeleteRequest": {"_kind": "request", "name": {"namespace": "document.single.delete", "name": "DeleteRequest"}, "annotations": {"type_stability": "stable"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document"}], "query": [{"name": "if_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only perform the delete operation if the last operation that has changed the document has the specified primary term"}, {"name": "if_seq_no", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only perform the delete operation if the last operation that has changed the document has the specified sequence number"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}]}, "DeleteResponse": {"_kind": "interface", "name": {"namespace": "document.single.delete", "name": "DeleteResponse"}, "inherits": [{"type": {"namespace": "document.single", "name": "WriteResponseBase"}}], "properties": []}, "DocumentExistsRequest": {"_kind": "request", "name": {"namespace": "document.single.exists", "name": "DocumentExistsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document (use `_all` to fetch the first document matching the ID across all types)"}], "query": [{"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to perform the operation in realtime or search mode"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Refresh the shard containing the document before performing the operation"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "stored_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of stored fields to return in the response"}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}]}, "GetRequest": {"_kind": "request", "name": {"namespace": "document.single.get", "name": "GetRequest"}, "annotations": {"type_stability": "stable"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document (use `_all` to fetch the first document matching the ID across all types)"}], "query": [{"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to perform the operation in realtime or search mode"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Refresh the shard containing the document before performing the operation"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A list of fields to exclude from the returned _source field"}, {"name": "_source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A list of fields to extract and return from the _source field"}, {"name": "stored_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of stored fields to return in the response"}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}, {"name": "_source", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}]}]}, "required": false, "description": "True or false to return the _source field or not, or a list of fields to return"}]}, "GetResponse": {"_kind": "interface", "name": {"namespace": "document.single.get", "name": "GetResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_abstractions.lazy_document", "name": "LazyDocument"}}}, "required": false}, {"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "_routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_seq_no", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "_source", "type": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}, "required": false, "annotations": {"prop_serializer": "SourceFormatter`1"}}, {"name": "_type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "IndexRequest": {"_kind": "request", "name": {"namespace": "document.single.index", "name": "IndexRequest"}, "description": "The document", "annotations": {"type_stability": "stable"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "Document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document"}], "query": [{"name": "if_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only perform the index operation if the last operation that has changed the document has the specified primary term"}, {"name": "if_seq_no", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only perform the index operation if the last operation that has changed the document has the specified sequence number"}, {"name": "op_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "OpType"}}, "required": false, "description": "Explicit operation type. Defaults to `index` for requests with an explicit document ID, and to `create`for requests without an explicit document ID"}, {"name": "pipeline", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The pipeline id to preprocess incoming documents with"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}], "body": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}}, "IndexResponse": {"_kind": "interface", "name": {"namespace": "document.single.index", "name": "IndexResponse"}, "inherits": [{"type": {"namespace": "document.single", "name": "WriteResponseBase"}}], "properties": []}, "SourceRequest": {"_kind": "request", "name": {"namespace": "document.single.source", "name": "SourceRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document; deprecated and optional starting with 7.0"}], "query": [{"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to perform the operation in realtime or search mode"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Refresh the shard containing the document before performing the operation"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}]}, "SourceResponse": {"_kind": "interface", "name": {"namespace": "document.single.source", "name": "SourceResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "body", "type": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}, "required": false}]}, "SourceExistsRequest": {"_kind": "request", "name": {"namespace": "document.single.source_exists", "name": "SourceExistsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document; deprecated and optional starting with 7.0"}], "query": [{"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to perform the operation in realtime or search mode"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Refresh the shard containing the document before performing the operation"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}]}, "TermVectorsRequest": {"_kind": "request", "name": {"namespace": "document.single.term_vectors", "name": "TermVectorsRequest"}, "description": "Define parameters and or supply a document to get termvectors for. See documentation.", "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The index in which the document resides."}, {"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The id of the document, when not specified a doc param should be supplied."}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document."}], "query": [{"name": "fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields to return."}, {"name": "field_statistics", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned."}, {"name": "offsets", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if term offsets should be returned."}, {"name": "payloads", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if term payloads should be returned."}, {"name": "positions", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if term positions should be returned."}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)."}, {"name": "realtime", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if request is real-time as opposed to near-real-time (default: true)."}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value."}, {"name": "term_statistics", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specifies if total term frequency and document frequency should be returned."}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}, {"name": "version_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "VersionType"}}, "required": false, "description": "Specific version type"}], "body": [{"name": "doc", "type": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}, "required": false, "annotations": {"prop_serializer": "SourceFormatter`1"}}, {"name": "filter", "type": {"_kind": "instance", "type": {"namespace": "document.single.term_vectors", "name": "TermVectorFilter"}}, "required": false}, {"name": "per_field_analyzer", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "TermVectorsResponse": {"_kind": "interface", "name": {"namespace": "document.single.term_vectors", "name": "TermVectorsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "term_vectors", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "value": {"_kind": "instance", "type": {"namespace": "document.single.term_vectors", "name": "TermVector"}}}, "required": false, "annotations": {"prop_serializer": "ResolvableReadOnlyDictionaryFormatter`2"}}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "_type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "UpdateRequest": {"_kind": "request", "name": {"namespace": "document.single.update", "name": "UpdateRequest"}, "description": "The request definition requires either `script` or partial `doc`", "annotations": {"type_stability": "stable"}, "generics": ["TDocument", "TPartialDocument"], "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document"}], "query": [{"name": "if_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only perform the update operation if the last operation that has changed the document has the specified primary term"}, {"name": "if_seq_no", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only perform the update operation if the last operation that has changed the document has the specified sequence number"}, {"name": "lang", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The script language (default: painless)"}, {"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."}, {"name": "retry_on_conflict", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Specify how many times should the operation be retried when a conflict occurs (default: 0)"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}, {"name": "_source", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}]}]}, "required": false, "description": "True or false to return the _source field or not, or a list of fields to return"}], "body": [{"name": "detect_noop", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "doc", "type": {"_kind": "instance", "type": {"namespace": "generic", "name": "TPartialDocument"}}, "required": false, "annotations": {"prop_serializer": "SourceFormatter`1"}}, {"name": "doc_as_upsert", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "script", "type": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "Script"}}, "required": false}, {"name": "scripted_upsert", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_source", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "instance", "type": {"namespace": "search.search.source_filtering", "name": "SourceFilter"}}]}, "required": false}, {"name": "upsert", "type": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}, "required": false, "annotations": {"prop_serializer": "SourceFormatter`1"}}]}, "UpdateResponse": {"_kind": "interface", "name": {"namespace": "document.single.update", "name": "UpdateResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "document.single", "name": "WriteResponseBase"}}], "properties": [{"name": "get", "type": {"_kind": "instance", "type": {"namespace": "search.explain", "name": "InlineGet"}, "generics": [{"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}]}, "required": false}]}, "BulkAliasRequest": {"_kind": "request", "name": {"namespace": "indices.alias_management.alias", "name": "BulkAliasRequest"}, "description": "The definition of `actions` to perform", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Request timeout"}], "body": [{"name": "actions", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management.alias.actions", "name": "AliasAction"}}}, "required": false}]}, "BulkAliasResponse": {"_kind": "interface", "name": {"namespace": "indices.alias_management.alias", "name": "BulkAliasResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "AliasExistsRequest": {"_kind": "request", "name": {"namespace": "indices.alias_management.alias_exists", "name": "AliasExistsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "A comma-separated list of alias names to return"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to filter aliases"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}]}, "DeleteAliasRequest": {"_kind": "request", "name": {"namespace": "indices.alias_management.delete_alias", "name": "DeleteAliasRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names (supports wildcards); use `_all` for all indices"}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices."}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit timestamp for the document"}]}, "DeleteAliasResponse": {"_kind": "interface", "name": {"namespace": "indices.alias_management.delete_alias", "name": "DeleteAliasResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "GetAliasRequest": {"_kind": "request", "name": {"namespace": "indices.alias_management.get_alias", "name": "GetAliasRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of alias names to return"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to filter aliases"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}]}, "GetAliasResponse": {"_kind": "interface", "name": {"namespace": "indices.alias_management.get_alias", "name": "GetAliasResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "indices.alias_management.get_alias", "name": "IndexAliases"}}]}], "properties": []}, "PutAliasRequest": {"_kind": "request", "name": {"namespace": "indices.alias_management.put_alias", "name": "PutAliasRequest"}, "description": "The settings for the alias, such as `routing` or `filter`", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices."}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the alias to be created or updated"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit timestamp for the document"}], "body": [{"name": "filter", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "index_routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false}, {"name": "is_write_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false}, {"name": "search_routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false}]}, "PutAliasResponse": {"_kind": "interface", "name": {"namespace": "indices.alias_management.put_alias", "name": "PutAliasResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "AnalyzeRequest": {"_kind": "request", "name": {"namespace": "indices.analyze", "name": "AnalyzeRequest"}, "description": "Define analyzer/tokenizer parameters and the text on which the analysis should be performed", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false, "description": "The name of the index to scope the operation"}], "query": [], "body": [{"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "attributes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "char_filter", "type": {"_kind": "array", "value": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "analysis.char_filters", "name": "ICharFilter"}}]}}, "required": false}, {"name": "explain", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "field", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false}, {"name": "filter", "type": {"_kind": "array", "value": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "analysis.token_filters", "name": "ITokenFilter"}}]}}, "required": false}, {"name": "normalizer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "text", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "tokenizer", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "analysis.tokenizers", "name": "ITokenizer"}}]}, "required": false}]}, "AnalyzeResponse": {"_kind": "interface", "name": {"namespace": "indices.analyze", "name": "AnalyzeResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "detail", "type": {"_kind": "instance", "type": {"namespace": "indices.analyze", "name": "AnalyzeDetail"}}, "required": false}, {"name": "tokens", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "indices.analyze", "name": "AnalyzeToken"}}}, "required": false}]}, "CloneIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.clone_index", "name": "CloneIndexRequest"}, "description": "The configuration for the target index (`settings` and `aliases`)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the source index to clone"}, {"name": "target", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the target index to clone into"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Set the number of active shards to wait for on the cloned index before the operation returns."}], "body": [{"name": "aliases", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management", "name": "Alias"}}}, "required": false}, {"name": "settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "CloneIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.clone_index", "name": "CloneIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CreateIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.create_index", "name": "CreateIndexRequest"}, "description": "The configuration for the index (`settings` and `mappings`)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}], "query": [{"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a type should be expected in the body of the mappings."}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Set the number of active shards to wait for before the operation returns."}], "body": [{"name": "aliases", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management", "name": "Alias"}}}, "required": false}, {"name": "mappings", "type": {"_kind": "instance", "type": {"namespace": "mapping", "name": "TypeMapping"}}, "required": false}, {"name": "settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "CreateIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.create_index", "name": "CreateIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "DeleteIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.delete_index", "name": "DeleteIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore if a wildcard expression resolves to no concrete indices (default: false)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore unavailable indexes (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "DeleteIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.delete_index", "name": "DeleteIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "IndicesResponseBase"}}], "properties": []}, "FreezeIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.freeze_index", "name": "FreezeIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index to freeze"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of active shards to wait for before the operation returns."}]}, "FreezeIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.freeze_index", "name": "FreezeIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "GetIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.get_index", "name": "GetIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore if a wildcard expression resolves to no concrete indices (default: false)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)"}, {"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore unavailable indexes (default: false)"}, {"name": "include_defaults", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to return all default setting for each of the indices."}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to add the type name to the response (default: false)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}]}, "GetIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.get_index", "name": "GetIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "index_modules.index_settings", "name": "IndexState"}}]}], "properties": []}, "ExistsResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.indices_exists", "name": "ExistsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "exists", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "IndexExistsRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.indices_exists", "name": "IndexExistsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore if a wildcard expression resolves to no concrete indices (default: false)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)"}, {"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore unavailable indexes (default: false)"}, {"name": "include_defaults", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to return all default setting for each of the indices."}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}]}, "CloseIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.open_close_index.close_index", "name": "CloseIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma separated list of indices to close"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of active shards to wait for before the operation returns."}]}, "CloseIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.open_close_index.close_index", "name": "CloseIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "indices", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.index_management.open_close_index.close_index", "name": "CloseIndexResult"}}}, "required": false}, {"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "OpenIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.open_close_index.open_index", "name": "OpenIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma separated list of indices to open"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of active shards to wait for before the operation returns."}]}, "OpenIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.open_close_index.open_index", "name": "OpenIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "RolloverIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.rollover_index", "name": "RolloverIndexRequest"}, "description": "The conditions that needs to be met for executing rollover", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "alias", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the alias to rollover"}, {"name": "new_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false, "description": "The name of the rollover index"}], "query": [{"name": "dry_run", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false"}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a type should be included in the body of the mappings."}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Set the number of active shards to wait for on the newly created rollover index before the operation returns."}], "body": [{"name": "aliases", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management", "name": "Alias"}}}, "required": false}, {"name": "conditions", "type": {"_kind": "instance", "type": {"namespace": "indices.index_management.rollover_index", "name": "RolloverConditions"}}, "required": false}, {"name": "mappings", "type": {"_kind": "instance", "type": {"namespace": "mapping", "name": "TypeMapping"}}, "required": false}, {"name": "settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "RolloverIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.rollover_index", "name": "RolloverIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "conditions", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}}, "required": false}, {"name": "dry_run", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "new_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "old_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "rolled_over", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "ShrinkIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.shrink_index", "name": "ShrinkIndexRequest"}, "description": "The configuration for the target index (`settings` and `aliases`)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the source index to shrink"}, {"name": "target", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the target index to shrink into"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Set the number of active shards to wait for on the shrunken index before the operation returns."}], "body": [{"name": "aliases", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management", "name": "Alias"}}}, "required": false}, {"name": "settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "ShrinkIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.shrink_index", "name": "ShrinkIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "SplitIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.split_index", "name": "SplitIndexRequest"}, "description": "The configuration for the target index (`settings` and `aliases`)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the source index to split"}, {"name": "target", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the target index to split into"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Set the number of active shards to wait for on the shrunken index before the operation returns."}], "body": [{"name": "aliases", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management", "name": "Alias"}}}, "required": false}, {"name": "settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "SplitIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.split_index", "name": "SplitIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "TypeExistsRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.types_exists", "name": "TypeExistsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names; use `_all` to check the types across all indices"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": true, "description": "A comma-separated list of document types to check"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}]}, "UnfreezeIndexRequest": {"_kind": "request", "name": {"namespace": "indices.index_management.unfreeze_index", "name": "UnfreezeIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index to unfreeze"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of active shards to wait for before the operation returns."}]}, "UnfreezeIndexResponse": {"_kind": "interface", "name": {"namespace": "indices.index_management.unfreeze_index", "name": "UnfreezeIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "shards_acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "GetIndexSettingsRequest": {"_kind": "request", "name": {"namespace": "indices.index_settings.get_index_settings", "name": "GetIndexSettingsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "The name of the settings that should be included"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "include_defaults", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to return all default setting for each of the indices."}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}]}, "GetIndexSettingsResponse": {"_kind": "interface", "name": {"namespace": "indices.index_settings.get_index_settings", "name": "GetIndexSettingsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "index_modules.index_settings", "name": "IndexState"}}]}], "properties": []}, "DeleteIndexTemplateRequest": {"_kind": "request", "name": {"namespace": "indices.index_settings.index_templates.delete_index_template", "name": "DeleteIndexTemplateRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the template"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "DeleteIndexTemplateResponse": {"_kind": "interface", "name": {"namespace": "indices.index_settings.index_templates.delete_index_template", "name": "DeleteIndexTemplateResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetIndexTemplateRequest": {"_kind": "request", "name": {"namespace": "indices.index_settings.index_templates.get_index_template", "name": "GetIndexTemplateRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "The comma separated names of the index templates"}], "query": [{"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a type should be returned in the body of the mappings."}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}]}, "GetIndexTemplateResponse": {"_kind": "interface", "name": {"namespace": "indices.index_settings.index_templates.get_index_template", "name": "GetIndexTemplateResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "indices.index_settings.index_templates.get_index_template", "name": "TemplateMapping"}}]}], "properties": []}, "IndexTemplateExistsRequest": {"_kind": "request", "name": {"namespace": "indices.index_settings.index_templates.index_template_exists", "name": "IndexTemplateExistsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "The comma separated names of the index templates"}], "query": [{"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}]}, "PutIndexTemplateRequest": {"_kind": "request", "name": {"namespace": "indices.index_settings.index_templates.put_index_template", "name": "PutIndexTemplateRequest"}, "description": "The template definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the template"}], "query": [{"name": "create", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether the index template should only be added if new or can also replace an existing one"}, {"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a type should be returned in the body of the mappings."}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}], "body": [{"name": "aliases", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.alias_management", "name": "Alias"}}}, "required": false}, {"name": "index_patterns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "mappings", "type": {"_kind": "instance", "type": {"namespace": "mapping", "name": "TypeMapping"}}, "required": false}, {"name": "order", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "PutIndexTemplateResponse": {"_kind": "interface", "name": {"namespace": "indices.index_settings.index_templates.put_index_template", "name": "PutIndexTemplateResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "UpdateIndexSettingsRequest": {"_kind": "request", "name": {"namespace": "indices.index_settings.update_index_settings", "name": "UpdateIndexSettingsRequest"}, "description": "The index settings to be updated", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "flat_settings", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return settings in flat format (default: false)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "preserve_existing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "index_settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "UpdateIndexSettingsResponse": {"_kind": "interface", "name": {"namespace": "indices.index_settings.update_index_settings", "name": "UpdateIndexSettingsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetFieldMappingRequest": {"_kind": "request", "name": {"namespace": "indices.mapping_management.get_field_mapping", "name": "GetFieldMappingRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "fields", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Fields"}}, "required": true, "description": "A comma-separated list of fields"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "include_defaults", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether the default mapping values should be returned as well"}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a type should be returned in the body of the mappings."}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}]}, "GetFieldMappingResponse": {"_kind": "interface", "name": {"namespace": "indices.mapping_management.get_field_mapping", "name": "GetFieldMappingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "indices.mapping_management.get_field_mapping", "name": "TypeFieldMappings"}}]}], "properties": []}, "GetMappingRequest": {"_kind": "request", "name": {"namespace": "indices.mapping_management.get_mapping", "name": "GetMappingRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to add the type name to the response (default: false)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}]}, "GetMappingResponse": {"_kind": "interface", "name": {"namespace": "indices.mapping_management.get_mapping", "name": "GetMappingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "indices.mapping_management.get_mapping", "name": "IndexMappings"}}]}], "properties": []}, "PutMappingRequest": {"_kind": "request", "name": {"namespace": "indices.mapping_management.put_mapping", "name": "PutMappingRequest"}, "description": "The mapping definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The name of the document type"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "include_type_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a type should be expected in the body of the mappings."}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "all_field", "type": {"_kind": "instance", "type": {"namespace": "mapping.meta_fields.all", "name": "AllField"}}, "required": false}, {"name": "date_detection", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "dynamic", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "instance", "type": {"namespace": "mapping", "name": "DynamicMapping"}}]}, "required": false}, {"name": "dynamic_date_formats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "dynamic_templates", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "mapping.dynamic_template", "name": "DynamicTemplate"}}}, "required": false}, {"name": "field_names_field", "type": {"_kind": "instance", "type": {"namespace": "mapping.meta_fields.field_names", "name": "FieldNamesField"}}, "required": false}, {"name": "index_field", "type": {"_kind": "instance", "type": {"namespace": "mapping.meta_fields.index", "name": "IndexField"}}, "required": false}, {"name": "meta", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "numeric_detection", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "properties", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "PropertyName"}}, "value": {"_kind": "instance", "type": {"namespace": "mapping.types", "name": "IProperty"}}}, "required": false}, {"name": "routing_field", "type": {"_kind": "instance", "type": {"namespace": "mapping.meta_fields.routing", "name": "RoutingField"}}, "required": false}, {"name": "size_field", "type": {"_kind": "instance", "type": {"namespace": "mapping.meta_fields.size", "name": "SizeField"}}, "required": false}, {"name": "source_field", "type": {"_kind": "instance", "type": {"namespace": "mapping.meta_fields.source", "name": "SourceField"}}, "required": false}]}, "PutMappingResponse": {"_kind": "interface", "name": {"namespace": "indices.mapping_management.put_mapping", "name": "PutMappingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "IndicesResponseBase"}}], "properties": []}, "RecoveryStatusRequest": {"_kind": "request", "name": {"namespace": "indices.monitoring.indices_recovery", "name": "RecoveryStatusRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "active_only", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Display only those recoveries that are currently on-going"}, {"name": "detailed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to display detailed information about shard recovery"}]}, "RecoveryStatusResponse": {"_kind": "interface", "name": {"namespace": "indices.monitoring.indices_recovery", "name": "RecoveryStatusResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "indices.monitoring.indices_recovery", "name": "RecoveryStatus"}}]}], "properties": []}, "SegmentsRequest": {"_kind": "request", "name": {"namespace": "indices.monitoring.indices_segments", "name": "SegmentsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Includes detailed memory usage by Lucene."}]}, "SegmentsResponse": {"_kind": "interface", "name": {"namespace": "indices.monitoring.indices_segments", "name": "SegmentsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "indices", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.monitoring.indices_segments", "name": "IndexSegment"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}, {"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}]}, "IndicesShardStoresRequest": {"_kind": "request", "name": {"namespace": "indices.monitoring.indices_shard_stores", "name": "IndicesShardStoresRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "status", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of statuses used to filter on shards to get store information for"}]}, "IndicesShardStoresResponse": {"_kind": "interface", "name": {"namespace": "indices.monitoring.indices_shard_stores", "name": "IndicesShardStoresResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "indices", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.monitoring.indices_shard_stores", "name": "IndicesShardStores"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}]}, "IndicesStatsRequest": {"_kind": "request", "name": {"namespace": "indices.monitoring.indices_stats", "name": "IndicesStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Metrics"}}, "required": false, "description": "Limit the information returned the specific metrics."}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "completion_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "fielddata_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields for `fielddata` index metric (supports wildcards)"}, {"name": "fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)"}, {"name": "forbid_closed_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices"}, {"name": "groups", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "A comma-separated list of search groups for `search` index metric"}, {"name": "include_segment_file_sizes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)"}, {"name": "include_unloaded_segments", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If set to true segment stats will include stats for segments that are not currently loaded into memory"}, {"name": "level", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Level"}}, "required": false, "description": "Return stats aggregated at cluster, index or shard level"}]}, "IndicesStatsResponse": {"_kind": "interface", "name": {"namespace": "indices.monitoring.indices_stats", "name": "IndicesStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "indices", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "indices.monitoring.indices_stats", "name": "IndicesStats"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}, {"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}, {"name": "_all", "type": {"_kind": "instance", "type": {"namespace": "indices.monitoring.indices_stats", "name": "IndicesStats"}}, "required": false}]}, "ReloadSearchAnalyzersRequest": {"_kind": "request", "name": {"namespace": "indices.reload_search_analyzers", "name": "ReloadSearchAnalyzersRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names to reload analyzers for"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}]}, "ReloadSearchAnalyzersResponse": {"_kind": "interface", "name": {"namespace": "indices.reload_search_analyzers", "name": "ReloadSearchAnalyzersResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "reload_details", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "indices.reload_search_analyzers", "name": "ReloadDetails"}}}, "required": false}, {"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}]}, "ClearCacheRequest": {"_kind": "request", "name": {"namespace": "indices.status_management.clear_cache", "name": "ClearCacheRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index name to limit the operation"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "fielddata", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Clear field data"}, {"name": "fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Clear query caches"}, {"name": "request", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Clear request cache"}]}, "ClearCacheResponse": {"_kind": "interface", "name": {"namespace": "indices.status_management.clear_cache", "name": "ClearCacheResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ShardsOperationResponseBase"}}], "properties": []}, "FlushRequest": {"_kind": "request", "name": {"namespace": "indices.status_management.flush", "name": "FlushRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string for all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "wait_if_ongoing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running."}]}, "FlushResponse": {"_kind": "interface", "name": {"namespace": "indices.status_management.flush", "name": "FlushResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ShardsOperationResponseBase"}}], "properties": []}, "ForceMergeRequest": {"_kind": "request", "name": {"namespace": "indices.status_management.force_merge", "name": "ForceMergeRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "flush", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether the index should be flushed after performing the operation (default: true)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "max_num_segments", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of segments the index should be merged into (default: dynamic)"}, {"name": "only_expunge_deletes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether the operation should only expunge deleted documents"}]}, "ForceMergeResponse": {"_kind": "interface", "name": {"namespace": "indices.status_management.force_merge", "name": "ForceMergeResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ShardsOperationResponseBase"}}], "properties": []}, "RefreshRequest": {"_kind": "request", "name": {"namespace": "indices.status_management.refresh", "name": "RefreshRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}]}, "RefreshResponse": {"_kind": "interface", "name": {"namespace": "indices.status_management.refresh", "name": "RefreshResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ShardsOperationResponseBase"}}], "properties": []}, "SyncedFlushRequest": {"_kind": "request", "name": {"namespace": "indices.status_management.synced_flush", "name": "SyncedFlushRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string for all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}]}, "SyncedFlushResponse": {"_kind": "interface", "name": {"namespace": "indices.status_management.synced_flush", "name": "SyncedFlushResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ShardsOperationResponseBase"}}], "properties": []}, "DeletePipelineRequest": {"_kind": "request", "name": {"namespace": "ingest.delete_pipeline", "name": "DeletePipelineRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Pipeline ID"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "DeletePipelineResponse": {"_kind": "interface", "name": {"namespace": "ingest.delete_pipeline", "name": "DeletePipelineResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetPipelineRequest": {"_kind": "request", "name": {"namespace": "ingest.get_pipeline", "name": "GetPipelineRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "Comma separated list of pipeline ids. Wildcards supported"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}]}, "GetPipelineResponse": {"_kind": "interface", "name": {"namespace": "ingest.get_pipeline", "name": "GetPipelineResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "ingest", "name": "Pipeline"}}]}], "properties": []}, "GrokProcessorPatternsRequest": {"_kind": "request", "name": {"namespace": "ingest.processor", "name": "GrokProcessorPatternsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GrokProcessorPatternsResponse": {"_kind": "interface", "name": {"namespace": "ingest.processor", "name": "GrokProcessorPatternsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "patterns", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutPipelineRequest": {"_kind": "request", "name": {"namespace": "ingest.put_pipeline", "name": "PutPipelineRequest"}, "description": "The ingest definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Pipeline ID"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "on_failure", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "ingest", "name": "ProcessorContainer"}}}, "required": false}, {"name": "processors", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "ingest", "name": "ProcessorContainer"}}}, "required": false}]}, "PutPipelineResponse": {"_kind": "interface", "name": {"namespace": "ingest.put_pipeline", "name": "PutPipelineResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "SimulatePipelineRequest": {"_kind": "request", "name": {"namespace": "ingest.simulate_pipeline", "name": "SimulatePipelineRequest"}, "description": "The simulate definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "Pipeline ID"}], "query": [{"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Verbose mode. Display data output for each processor in executed pipeline"}], "body": [{"name": "docs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "ingest.simulate_pipeline", "name": "SimulatePipelineDocument"}}}, "required": false}, {"name": "pipeline", "type": {"_kind": "instance", "type": {"namespace": "ingest", "name": "Pipeline"}}, "required": false}]}, "SimulatePipelineResponse": {"_kind": "interface", "name": {"namespace": "ingest.simulate_pipeline", "name": "SimulatePipelineResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "docs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "ingest.simulate_pipeline", "name": "PipelineSimulation"}}}, "required": false}]}, "DeleteScriptRequest": {"_kind": "request", "name": {"namespace": "modules.scripting.delete_script", "name": "DeleteScriptRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Script ID"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "DeleteScriptResponse": {"_kind": "interface", "name": {"namespace": "modules.scripting.delete_script", "name": "DeleteScriptResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ExecutePainlessScriptRequest": {"_kind": "request", "name": {"namespace": "modules.scripting.execute_painless_script", "name": "ExecutePainlessScriptRequest"}, "description": "The script to execute", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "context", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "context_setup", "type": {"_kind": "instance", "type": {"namespace": "modules.scripting.execute_painless_script", "name": "PainlessContextSetup"}}, "required": false}, {"name": "script", "type": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "InlineScript"}}, "required": false}]}, "ExecutePainlessScriptResponse": {"_kind": "interface", "name": {"namespace": "modules.scripting.execute_painless_script", "name": "ExecutePainlessScriptResponse"}, "generics": ["TResult"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "result", "type": {"_kind": "instance", "type": {"namespace": "generic", "name": "TResult"}}, "required": false}]}, "GetScriptRequest": {"_kind": "request", "name": {"namespace": "modules.scripting.get_script", "name": "GetScriptRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Script ID"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}]}, "GetScriptResponse": {"_kind": "interface", "name": {"namespace": "modules.scripting.get_script", "name": "GetScriptResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "script", "type": {"_kind": "instance", "type": {"namespace": "modules.scripting", "name": "StoredScript"}}, "required": false}]}, "PutScriptRequest": {"_kind": "request", "name": {"namespace": "modules.scripting.put_script", "name": "PutScriptRequest"}, "description": "The document", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Script ID"}, {"name": "context", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "Script context"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for connection to master"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "script", "type": {"_kind": "instance", "type": {"namespace": "modules.scripting", "name": "StoredScript"}}, "required": false}]}, "PutScriptResponse": {"_kind": "interface", "name": {"namespace": "modules.scripting.put_script", "name": "PutScriptResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "CleanupRepositoryRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.repositories.cleanup_repository", "name": "CleanupRepositoryRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "CleanupRepositoryResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.repositories.cleanup_repository", "name": "CleanupRepositoryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "results", "type": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.repositories.cleanup_repository", "name": "CleanupRepositoryResults"}}, "required": false}]}, "CreateRepositoryRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.repositories.create_repository", "name": "CreateRepositoryRequest"}, "description": "The repository definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}, {"name": "verify", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to verify the repository after creation"}], "body": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.repositories", "name": "SnapshotRepository"}}, "required": false}]}, "CreateRepositoryResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.repositories.create_repository", "name": "CreateRepositoryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteRepositoryRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.repositories.delete_repository", "name": "DeleteRepositoryRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "Name of the snapshot repository to unregister. Wildcard (`*`) patterns are supported."}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "DeleteRepositoryResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.repositories.delete_repository", "name": "DeleteRepositoryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetRepositoryRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.repositories.get_repository", "name": "GetRepositoryRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of repository names"}], "query": [{"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}]}, "GetRepositoryResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.repositories.get_repository", "name": "GetRepositoryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "repositories", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.repositories", "name": "SnapshotRepository"}}}, "required": false}]}, "VerifyRepositoryRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.repositories.verify_repository", "name": "VerifyRepositoryRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}]}, "VerifyRepositoryResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.repositories.verify_repository", "name": "VerifyRepositoryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.repositories.verify_repository", "name": "CompactNodeInfo"}}}, "required": false, "annotations": {"prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"}}]}, "RestoreRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.restore", "name": "RestoreRequest"}, "description": "Details of what to restore", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}, {"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A snapshot name"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should this request wait until the operation has completed before returning"}], "body": [{"name": "ignore_index_settings", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "include_aliases", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "include_global_state", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "index_settings", "type": {"_kind": "instance", "type": {"namespace": "indices.index_settings.update_index_settings", "name": "UpdateIndexSettingsRequest"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false}, {"name": "partial", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "rename_pattern", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "rename_replacement", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "RestoreResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.restore", "name": "RestoreResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.restore", "name": "SnapshotRestore"}}, "required": false}]}, "DeleteSnapshotRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.snapshot.delete_snapshot", "name": "DeleteSnapshotRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}, {"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A snapshot name"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}]}, "DeleteSnapshotResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.snapshot.delete_snapshot", "name": "DeleteSnapshotResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetSnapshotRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.snapshot.get_snapshot", "name": "GetSnapshotRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}, {"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "A comma-separated list of snapshot names"}], "query": [{"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "verbose", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to show verbose snapshot info or only show the basic info found in the repository index blob"}]}, "GetSnapshotResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.snapshot.get_snapshot", "name": "GetSnapshotResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "snapshots", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.snapshot", "name": "SnapshotInfo"}}}, "required": false}]}, "SnapshotRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.snapshot.snapshot", "name": "SnapshotRequest"}, "description": "The snapshot definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A repository name"}, {"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "A snapshot name"}], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should this request wait until the operation has completed before returning"}], "body": [{"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "include_global_state", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "annotations": {"prop_serializer": "IndicesMultiSyntaxFormatter"}}, {"name": "metadata", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "partial", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "SnapshotResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.snapshot.snapshot", "name": "SnapshotResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "accepted", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.snapshot", "name": "SnapshotInfo"}}, "required": false}]}, "SnapshotStatusRequest": {"_kind": "request", "name": {"namespace": "modules.snapshot_and_restore.snapshot.snapshot_status", "name": "SnapshotStatusRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "A repository name"}, {"name": "snapshot", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of snapshot names"}], "query": [{"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown"}, {"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout for connection to master node"}]}, "SnapshotStatusResponse": {"_kind": "interface", "name": {"namespace": "modules.snapshot_and_restore.snapshot.snapshot_status", "name": "SnapshotStatusResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "snapshots", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "modules.snapshot_and_restore.snapshot.snapshot_status", "name": "SnapshotStatus"}}}, "required": false}]}, "CountRequest": {"_kind": "request", "name": {"namespace": "search.count", "name": "CountRequest"}, "description": "A query to restrict the results specified with the Query DSL (optional)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of indices to restrict the results"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of types to restrict the results"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The analyzer to use for the query string"}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false, "description": "The default operator for query string query (AND or OR)"}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The field to use as default where no field prefix is given in the query string"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_throttled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete, expanded or aliased indices should be ignored when throttled"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"}, {"name": "min_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false, "description": "Include only documents with a specific `_score` value in the result"}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "A comma-separated list of specific routing values"}, {"name": "terminate_after", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The maximum count for each shard, upon reaching which the query execution will terminate early"}], "body": [{"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}]}, "CountResponse": {"_kind": "interface", "name": {"namespace": "search.count", "name": "CountResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}]}, "ExplainRequest": {"_kind": "request", "name": {"namespace": "search.explain", "name": "ExplainRequest"}, "description": "The query definition using the Query DSL", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The document ID"}, {"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The type of the document"}], "query": [{"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The analyzer for the query string query"}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)"}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false, "description": "The default operator for query string query (AND or OR)"}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The default field for query string query (default: _all)"}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "source_enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "source_excludes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "source_includes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "stored_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of stored fields to return in the response"}], "body": [{"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}]}, "ExplainResponse": {"_kind": "interface", "name": {"namespace": "search.explain", "name": "ExplainResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "explanation", "type": {"_kind": "instance", "type": {"namespace": "search.explain", "name": "ExplanationDetail"}}, "required": false}, {"name": "get", "type": {"_kind": "instance", "type": {"namespace": "search.explain", "name": "InlineGet"}, "generics": [{"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}]}, "required": false}, {"name": "matched", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "FieldCapabilitiesRequest": {"_kind": "request", "name": {"namespace": "search.field_capabilities", "name": "FieldCapabilitiesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of field names"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "include_unmapped", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Indicates whether unmapped fields should be included in the response."}]}, "FieldCapabilitiesResponse": {"_kind": "interface", "name": {"namespace": "search.field_capabilities", "name": "FieldCapabilitiesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "value": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "search.field_capabilities", "name": "FieldCapabilities"}}}}, "required": false}]}, "MultiSearchRequest": {"_kind": "request", "name": {"namespace": "search.multi_search", "name": "MultiSearchRequest"}, "description": "The request definitions (metadata-search request definition pairs), separated by newlines", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to use as default"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types to use as default"}], "query": [{"name": "ccs_minimize_roundtrips", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution"}, {"name": "max_concurrent_searches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Controls the maximum number of concurrent searches the multi search api will execute"}, {"name": "max_concurrent_shard_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests"}, {"name": "pre_filter_shard_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\u00a0number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."}, {"name": "search_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SearchType"}}, "required": false, "description": "Search operation type"}, {"name": "total_hits_as_integer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "typed_keys", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"}], "body": [{"name": "operations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "search.search", "name": "SearchRequest"}}}, "required": false}]}, "MultiSearchResponse": {"_kind": "interface", "name": {"namespace": "search.multi_search", "name": "MultiSearchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "responses", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "search.search", "name": "SearchResponse"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}]}}, "required": false}]}, "ClearScrollRequest": {"_kind": "request", "name": {"namespace": "search.scroll.clear_scroll", "name": "ClearScrollRequest"}, "description": "A comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "scroll_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "ScrollIds"}}, "required": false, "description": "A comma-separated list of scroll IDs to clear"}], "query": [], "body": [{"name": "scroll_id", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "ClearScrollResponse": {"_kind": "interface", "name": {"namespace": "search.scroll.clear_scroll", "name": "ClearScrollResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "SearchRequest": {"_kind": "request", "name": {"namespace": "search.search", "name": "SearchRequest"}, "description": "The search definition using the Query DSL", "annotations": {"type_stability": "stable"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "allow_partial_search_results", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Indicate if an error should be returned if there is a partial search failure or timeout"}, {"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The analyzer to use for the query string"}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"}, {"name": "batched_reduce_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large."}, {"name": "ccs_minimize_roundtrips", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution"}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false, "description": "The default operator for query string query (AND or OR)"}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The field to use as default where no field prefix is given in the query string"}, {"name": "docvalue_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of fields to return as the docvalue representation of a field for each hit"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_throttled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete, expanded or aliased indices should be ignored when throttled"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"}, {"name": "max_concurrent_shard_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests"}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "pre_filter_shard_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\u00a0number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "request_cache", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify if request cache should be used for this request or not, defaults to index level setting"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "A comma-separated list of specific routing values"}, {"name": "scroll", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify how long a consistent view of the index should be maintained for scrolled search"}, {"name": "search_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SearchType"}}, "required": false, "description": "Search operation type"}, {"name": "sequence_number_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "stats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "Specific 'tag' of the request for logging and statistical purposes"}, {"name": "stored_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false, "description": "A comma-separated list of stored fields to return as part of a hit"}, {"name": "suggest_field", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false, "description": "Specify which field to use for suggestions"}, {"name": "suggest_mode", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SuggestMode"}}, "required": false, "description": "Specify suggest mode"}, {"name": "suggest_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "How many suggestions to return in response"}, {"name": "suggest_text", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The source text for which the suggestions should be returned"}, {"name": "total_hits_as_integer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "track_total_hits", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}]}, "required": false, "description": "Indicate if the number of documents that match the query should be tracked"}, {"name": "typed_keys", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"}, {"name": "rest_total_hits_as_int", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Indicates whether hits.total should be rendered as an integer or an object in the rest search response"}, {"name": "_source_excludes", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}]}, "required": false, "description": "A list of fields to exclude from the returned _source field"}, {"name": "_source_includes", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}]}, "required": false, "description": "A list of fields to extract and return from the _source field"}, {"name": "seq_no_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether to return sequence number and primary term of the last modification of each hit"}, {"name": "q", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Query in the Lucene query string syntax"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "Number of hits to return (default: 10)"}], "body": [{"name": "aggs", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "aggregations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "collapse", "type": {"_kind": "instance", "type": {"namespace": "search.search.collapsing", "name": "FieldCollapse"}}, "required": false}, {"name": "explain", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "highlight", "type": {"_kind": "instance", "type": {"namespace": "search.search.highlighting", "name": "Highlight"}}, "required": false}, {"name": "track_total_hits", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}]}, "required": false}, {"name": "indices_boost", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Array"}, "generics": [{"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}}]}, "required": false, "annotations": {"prop_serializer": "IndicesBoostFormatter"}}, {"name": "docvalue_fields", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Array"}, "generics": [{"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, {"_kind": "instance", "type": {"namespace": "search.search.source_filtering", "name": "DocValueField"}}]}]}, "required": false}, {"name": "min_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "post_filter", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "profile", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "rescore", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "search.search.rescoring", "name": "Rescore"}}, {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "search.search.rescoring", "name": "Rescore"}}}]}, "required": false}, {"name": "script_fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "ScriptField"}}}, "required": false}, {"name": "search_after", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Array"}, "generics": [{"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}]}]}, "required": false}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "slice", "type": {"_kind": "instance", "type": {"namespace": "search.scroll.scroll", "name": "SlicedScroll"}}, "required": false}, {"name": "sort", "type": {"_kind": "array", "value": {"_kind": "named_value", "value": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "search.search.sort", "name": "Sort"}}, {"_kind": "instance", "type": {"namespace": "search.search.sort", "name": "SortOrder"}}]}}}, "required": false}, {"name": "_source", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "instance", "type": {"namespace": "internal", "name": "Fields"}}, {"_kind": "instance", "type": {"namespace": "search.search.source_filtering", "name": "SourceFilter"}}]}, "required": false}, {"name": "suggest", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "search.suggesters", "name": "SuggestBucket"}}}, "required": false}, {"name": "terminate_after", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "track_scores", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "seq_no_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "stored_fields", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}]}, "required": false}]}, "SearchResponse": {"_kind": "interface", "name": {"namespace": "search.search", "name": "SearchResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "aggregations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "Aggregate"}}}, "required": false}, {"name": "_clusters", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ClusterStatistics"}}, "required": false}, {"name": "documents", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}}, "required": false}, {"name": "fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_abstractions.lazy_document", "name": "LazyDocument"}}}, "required": false}, {"name": "hits", "type": {"_kind": "instance", "type": {"namespace": "search.search.hits", "name": "HitsMetadata"}, "generics": [{"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}]}, "required": false}, {"name": "max_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "num_reduce_phases", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "profile", "type": {"_kind": "instance", "type": {"namespace": "search.search.profile", "name": "Profile"}}, "required": false}, {"name": "_scroll_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}, {"name": "suggest", "type": {"_kind": "instance", "type": {"namespace": "search.suggesters", "name": "SuggestDictionary"}, "generics": [{"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}]}, "required": false}, {"name": "terminated_early", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "SearchShardsRequest": {"_kind": "request", "name": {"namespace": "search.search_shards", "name": "SearchShardsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Specify the node or shard the operation should be performed on (default: random)"}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}]}, "SearchShardsResponse": {"_kind": "interface", "name": {"namespace": "search.search_shards", "name": "SearchShardsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "search.search_shards", "name": "SearchNode"}}}, "required": false}, {"name": "shards", "type": {"_kind": "array", "value": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "search.search_shards", "name": "SearchShard"}}}}, "required": false}]}, "RenderSearchTemplateRequest": {"_kind": "request", "name": {"namespace": "search.search_template.render_search_template", "name": "RenderSearchTemplateRequest"}, "description": "The search definition template and its params", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The id of the stored search template"}], "query": [], "body": [{"name": "file", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "params", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "source", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "RenderSearchTemplateResponse": {"_kind": "interface", "name": {"namespace": "search.search_template.render_search_template", "name": "RenderSearchTemplateResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "template_output", "type": {"_kind": "instance", "type": {"namespace": "common_abstractions.lazy_document", "name": "LazyDocument"}}, "required": false}]}, "ValidateQueryRequest": {"_kind": "request", "name": {"namespace": "search.validate", "name": "ValidateQueryRequest"}, "description": "The query definition specified with the Query DSL", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"}, {"name": "all_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Execute validation on all shards instead of one random shard per index"}, {"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The analyzer to use for the query string"}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false, "description": "The default operator for query string query (AND or OR)"}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "The field to use as default where no field prefix is given in the query string"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."}, {"name": "explain", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return detailed information about the error"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "rewrite", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Provide a more detailed explanation showing the actual Lucene query that will be executed."}], "body": [{"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}]}, "ValidateQueryResponse": {"_kind": "interface", "name": {"namespace": "search.validate", "name": "ValidateQueryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "explanations", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "search.validate", "name": "ValidationExplanation"}}}, "required": false}, {"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}, {"name": "valid", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "AsyncSearchDeleteRequest": {"_kind": "request", "name": {"namespace": "x_pack.async_search.delete", "name": "AsyncSearchDeleteRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The async search ID"}], "query": []}, "AsyncSearchDeleteResponse": {"_kind": "interface", "name": {"namespace": "x_pack.async_search.delete", "name": "AsyncSearchDeleteResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "AsyncSearchGetRequest": {"_kind": "request", "name": {"namespace": "x_pack.async_search.get", "name": "AsyncSearchGetRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The async search ID"}], "query": [], "body": [{"name": "keep_alive", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "typed_keys", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "wait_for_completion_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "AsyncSearchGetResponse": {"_kind": "interface", "name": {"namespace": "x_pack.async_search.get", "name": "AsyncSearchGetResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "AsyncSearchSubmitRequest": {"_kind": "request", "name": {"namespace": "x_pack.async_search.submit", "name": "AsyncSearchSubmitRequest"}, "description": "The search definition using the Query DSL", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"}], "query": [], "body": [{"name": "aggs", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "allow_partial_search_results", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "analyzer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "analyze_wildcard", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "batched_reduce_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "collapse", "type": {"_kind": "instance", "type": {"namespace": "search.search.collapsing", "name": "FieldCollapse"}}, "required": false}, {"name": "default_operator", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "DefaultOperator"}}, "required": false}, {"name": "df", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "docvalue_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false}, {"name": "explain", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "highlight", "type": {"_kind": "instance", "type": {"namespace": "search.search.highlighting", "name": "Highlight"}}, "required": false}, {"name": "ignore_throttled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "indices_boost", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}}, "required": false, "annotations": {"prop_serializer": "IndicesBoostFormatter"}}, {"name": "keep_alive", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "keep_on_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "lenient", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "max_concurrent_shard_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "min_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "post_filter", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "preference", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "profile", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query_on_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "request_cache", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "rescore", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "search.search.rescoring", "name": "Rescore"}}}, "required": false}, {"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false}, {"name": "script_fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "ScriptField"}}}, "required": false}, {"name": "search_after", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "search_type", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SearchType"}}, "required": false}, {"name": "sequence_number_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "sort", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "search.search.sort", "name": "Sort"}}}, "required": false}, {"name": "_source", "type": {"_kind": "union", "items": [{"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, {"_kind": "instance", "type": {"namespace": "search.search.source_filtering", "name": "SourceFilter"}}]}, "required": false}, {"name": "stats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "stored_fields", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}}, "required": false}, {"name": "suggest", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "search.suggesters", "name": "SuggestBucket"}}}, "required": false}, {"name": "suggest_field", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false}, {"name": "suggest_mode", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "SuggestMode"}}, "required": false}, {"name": "suggest_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "suggest_text", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "terminate_after", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "track_scores", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "track_total_hits", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "typed_keys", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "wait_for_completion_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "AsyncSearchSubmitResponse": {"_kind": "interface", "name": {"namespace": "x_pack.async_search.submit", "name": "AsyncSearchSubmitResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "CreateAutoFollowPatternRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.create_auto_follow_pattern", "name": "CreateAutoFollowPatternRequest"}, "description": "The specification of the auto follow pattern", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the auto follow pattern."}], "query": [], "body": [{"name": "follow_index_pattern", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "leader_index_patterns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "max_outstanding_read_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_outstanding_write_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "max_poll_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "max_read_request_operation_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "max_read_request_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_retry_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "max_write_buffer_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "max_write_buffer_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_write_request_operation_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "max_write_request_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "remote_cluster", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "CreateAutoFollowPatternResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.create_auto_follow_pattern", "name": "CreateAutoFollowPatternResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteAutoFollowPatternRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.delete_auto_follow_pattern", "name": "DeleteAutoFollowPatternRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the auto follow pattern."}], "query": []}, "DeleteAutoFollowPatternResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.delete_auto_follow_pattern", "name": "DeleteAutoFollowPatternResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetAutoFollowPatternRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern", "name": "GetAutoFollowPatternRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "The name of the auto follow pattern."}], "query": []}, "GetAutoFollowPatternResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern", "name": "GetAutoFollowPatternResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "patterns", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern", "name": "AutoFollowPattern"}}}, "required": false, "annotations": {"prop_serializer": "AutoFollowPatternFormatter"}}]}, "PauseAutoFollowPatternRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.pause_auto_follow_pattern", "name": "PauseAutoFollowPatternRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the auto follow pattern that should pause discovering new indices to follow."}], "query": []}, "PauseAutoFollowPatternResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.pause_auto_follow_pattern", "name": "PauseAutoFollowPatternResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ResumeAutoFollowPatternRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.resume_auto_follow_pattern", "name": "ResumeAutoFollowPatternRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the auto follow pattern to resume discovering new indices to follow."}], "query": []}, "ResumeAutoFollowPatternResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.auto_follow.resume_auto_follow_pattern", "name": "ResumeAutoFollowPatternResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "CreateFollowIndexRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.create_follow_index", "name": "CreateFollowIndexRequest"}, "description": "The name of the leader index and other optional ccr related parameters", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the follower index"}], "query": [{"name": "wait_for_active_shards", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Sets the number of shard copies that must be active before returning. Defaults to 0. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"}], "body": [{"name": "leader_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false}, {"name": "max_outstanding_read_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_outstanding_write_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_read_request_operation_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_read_request_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_retry_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "max_write_buffer_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_write_buffer_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_write_request_operation_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_write_request_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "read_poll_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "remote_cluster", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "CreateFollowIndexResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.create_follow_index", "name": "CreateFollowIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "follow_index_created", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "follow_index_shards_acked", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "index_following_started", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "FollowIndexStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats", "name": "FollowIndexStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index patterns; use `_all` to perform the operation on all indices"}], "query": []}, "FollowIndexStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats", "name": "FollowIndexStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "indices", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats", "name": "FollowIndexStats"}}}, "required": false}]}, "FollowInfoRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.follow_info", "name": "FollowInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index patterns; use `_all` to perform the operation on all indices"}], "query": []}, "FollowInfoResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.follow_info", "name": "FollowInfoResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "follower_indices", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.cross_cluster_replication.follow.follow_info", "name": "FollowerInfo"}}}, "required": false}]}, "ForgetFollowerIndexRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.forget_follower_index", "name": "ForgetFollowerIndexRequest"}, "description": "the name and UUID of the follower index, the name of the cluster containing the follower index, and the alias from the perspective of that cluster for the remote cluster containing the leader index", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "the name of the leader index for which specified follower retention leases should be removed"}], "query": [], "body": [{"name": "follower_cluster", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "follower_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false}, {"name": "follower_index_uuid", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "leader_remote_cluster", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "ForgetFollowerIndexResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.forget_follower_index", "name": "ForgetFollowerIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "_shards", "type": {"_kind": "instance", "type": {"namespace": "common_options.hit", "name": "ShardStatistics"}}, "required": false}]}, "PauseFollowIndexRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.pause_follow_index", "name": "PauseFollowIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the follower index that should pause following its leader index."}], "query": []}, "PauseFollowIndexResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.pause_follow_index", "name": "PauseFollowIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ResumeFollowIndexRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.resume_follow_index", "name": "ResumeFollowIndexRequest"}, "description": "The name of the leader index and other optional ccr related parameters", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the follow index to resume following."}], "query": [], "body": [{"name": "max_outstanding_read_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_outstanding_write_requests", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_read_request_operation_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_read_request_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_retry_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "max_write_buffer_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_write_buffer_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_write_request_operation_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "max_write_request_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "read_poll_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "ResumeFollowIndexResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.resume_follow_index", "name": "ResumeFollowIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "UnfollowIndexRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.follow.unfollow_index", "name": "UnfollowIndexRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the follower index that should be turned into a regular index."}], "query": []}, "UnfollowIndexResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.follow.unfollow_index", "name": "UnfollowIndexResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "CcrStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.cross_cluster_replication.stats", "name": "CcrStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "CcrStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.cross_cluster_replication.stats", "name": "CcrStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "auto_follow_stats", "type": {"_kind": "instance", "type": {"namespace": "x_pack.cross_cluster_replication.stats", "name": "CcrAutoFollowStats"}}, "required": false}, {"name": "follow_stats", "type": {"_kind": "instance", "type": {"namespace": "x_pack.cross_cluster_replication.stats", "name": "CcrFollowStats"}}, "required": false}]}, "DeleteEnrichPolicyRequest": {"_kind": "request", "name": {"namespace": "x_pack.enrich.delete_policy", "name": "DeleteEnrichPolicyRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the enrich policy"}], "query": []}, "DeleteEnrichPolicyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.enrich.delete_policy", "name": "DeleteEnrichPolicyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ExecuteEnrichPolicyRequest": {"_kind": "request", "name": {"namespace": "x_pack.enrich.execute_policy", "name": "ExecuteEnrichPolicyRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the enrich policy"}], "query": [{"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should the request should block until the execution is complete."}]}, "ExecuteEnrichPolicyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.enrich.execute_policy", "name": "ExecuteEnrichPolicyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "status", "type": {"_kind": "instance", "type": {"namespace": "x_pack.enrich.execute_policy", "name": "ExecuteEnrichPolicyStatus"}}, "required": false}, {"name": "task_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TaskId"}}, "required": false}]}, "GetEnrichPolicyRequest": {"_kind": "request", "name": {"namespace": "x_pack.enrich.get_policy", "name": "GetEnrichPolicyRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of enrich policy names"}], "query": []}, "GetEnrichPolicyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.enrich.get_policy", "name": "GetEnrichPolicyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "policies", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.enrich", "name": "NamedPolicyMetadata"}}}, "required": false}]}, "PutEnrichPolicyRequest": {"_kind": "request", "name": {"namespace": "x_pack.enrich.put_policy", "name": "PutEnrichPolicyRequest"}, "description": "The enrich policy to register", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The name of the enrich policy"}], "query": [], "body": [{"name": "geo_match", "type": {"_kind": "instance", "type": {"namespace": "x_pack.enrich", "name": "EnrichPolicy"}}, "required": false}, {"name": "match", "type": {"_kind": "instance", "type": {"namespace": "x_pack.enrich", "name": "EnrichPolicy"}}, "required": false}]}, "PutEnrichPolicyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.enrich.put_policy", "name": "PutEnrichPolicyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "EnrichStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.enrich.stats", "name": "EnrichStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "EnrichStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.enrich.stats", "name": "EnrichStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "coordinator_stats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.enrich.stats", "name": "CoordinatorStats"}}}, "required": false}, {"name": "executing_policies", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.enrich.stats", "name": "ExecutingPolicy"}}}, "required": false}]}, "GraphExploreRequest": {"_kind": "request", "name": {"namespace": "x_pack.graph.explore", "name": "GraphExploreRequest"}, "description": "Graph Query DSL", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Types"}}, "required": false, "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"}], "query": [{"name": "routing", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Routing"}}, "required": false, "description": "Specific routing value"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Explicit operation timeout"}], "body": [{"name": "connections", "type": {"_kind": "instance", "type": {"namespace": "x_pack.graph.explore.request", "name": "Hop"}}, "required": false}, {"name": "controls", "type": {"_kind": "instance", "type": {"namespace": "x_pack.graph.explore.request", "name": "GraphExploreControls"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "vertices", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.graph.explore.request", "name": "GraphVertexDefinition"}}}, "required": false}]}, "GraphExploreResponse": {"_kind": "interface", "name": {"namespace": "x_pack.graph.explore", "name": "GraphExploreResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "connections", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.graph.explore.response", "name": "GraphConnection"}}}, "required": false}, {"name": "failures", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "common", "name": "ShardFailure"}}}, "required": false}, {"name": "timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "took", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "vertices", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.graph.explore.response", "name": "GraphVertex"}}}, "required": false}]}, "DeleteLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.delete_lifecycle", "name": "DeleteLifecycleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The name of the index lifecycle policy"}], "query": []}, "DeleteLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.delete_lifecycle", "name": "DeleteLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ExplainLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.explain_lifecycle", "name": "ExplainLifecycleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index to explain"}], "query": [{"name": "only_errors", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "filters the indices included in the response to ones in an ILM error state, implies only_managed"}, {"name": "only_managed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "filters the indices included in the response to ones managed by ILM"}]}, "ExplainLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.explain_lifecycle", "name": "ExplainLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "indices", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.ilm.explain_lifecycle", "name": "LifecycleExplain"}}}, "required": false}]}, "GetLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.get_lifecycle", "name": "GetLifecycleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The name of the index lifecycle policy"}], "query": []}, "GetLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.get_lifecycle", "name": "GetLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "x_pack.ilm.get_lifecycle", "name": "LifecyclePolicy"}}]}], "properties": []}, "GetIlmStatusRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.get_status", "name": "GetIlmStatusRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetIlmStatusResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.get_status", "name": "GetIlmStatusResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "operation_mode", "type": {"_kind": "instance", "type": {"namespace": "x_pack.ilm.get_status", "name": "LifecycleOperationMode"}}, "required": false}]}, "MoveToStepRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.move_to_step", "name": "MoveToStepRequest"}, "description": "The new lifecycle step to move to", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index whose lifecycle step is to change"}], "query": [], "body": [{"name": "current_step", "type": {"_kind": "instance", "type": {"namespace": "x_pack.ilm.move_to_step", "name": "StepKey"}}, "required": false}, {"name": "next_step", "type": {"_kind": "instance", "type": {"namespace": "x_pack.ilm.move_to_step", "name": "StepKey"}}, "required": false}]}, "MoveToStepResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.move_to_step", "name": "MoveToStepResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "PutLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.put_lifecycle", "name": "PutLifecycleRequest"}, "description": "The lifecycle policy definition to register", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The name of the index lifecycle policy"}], "query": [], "body": [{"name": "policy", "type": {"_kind": "instance", "type": {"namespace": "x_pack.ilm", "name": "Policy"}}, "required": false}]}, "PutLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.put_lifecycle", "name": "PutLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "RemovePolicyRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.remove_policy", "name": "RemovePolicyRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the index to remove policy on"}], "query": []}, "RemovePolicyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.remove_policy", "name": "RemovePolicyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "failed_indexes", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "has_failures", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "RetryIlmRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.retry", "name": "RetryIlmRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The name of the indices (comma-separated) whose failed lifecycle step is to be retry"}], "query": []}, "RetryIlmResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.retry", "name": "RetryIlmResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StartIlmRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.start", "name": "StartIlmRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "StartIlmResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.start", "name": "StartIlmResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StopIlmRequest": {"_kind": "request", "name": {"namespace": "x_pack.ilm.stop", "name": "StopIlmRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "StopIlmResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ilm.stop", "name": "StopIlmResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "XPackInfoRequest": {"_kind": "request", "name": {"namespace": "x_pack.info.x_pack_info", "name": "XPackInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "categories", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "Comma-separated list of info categories. Can be any of: build, license, features"}]}, "XPackInfoResponse": {"_kind": "interface", "name": {"namespace": "x_pack.info.x_pack_info", "name": "XPackInfoResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "build", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_info", "name": "XPackBuildInformation"}}, "required": false}, {"name": "features", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_info", "name": "XPackFeatures"}}, "required": false}, {"name": "license", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_info", "name": "MinimalLicenseInformation"}}, "required": false}, {"name": "tagline", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "XPackUsageRequest": {"_kind": "request", "name": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsageRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "master_timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Specify timeout for watch write operation"}]}, "XPackUsageResponse": {"_kind": "interface", "name": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsageResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "watcher", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "AlertingUsage"}}, "required": false}, {"name": "ccr", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "CcrUsage"}}, "required": false}, {"name": "data_frame", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "data_science", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "enrich", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "flattened", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "FlattenedUsage"}}, "required": false}, {"name": "graph", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "ilm", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "IlmUsage"}}, "required": false}, {"name": "logstash", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "ml", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "MachineLearningUsage"}}, "required": false}, {"name": "monitoring", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "MonitoringUsage"}}, "required": false}, {"name": "rollup", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "security", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "SecurityUsage"}}, "required": false}, {"name": "slm", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "SlmUsage"}}, "required": false}, {"name": "sql", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "SqlUsage"}}, "required": false}, {"name": "transform", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}, {"name": "vectors", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "VectorUsage"}}, "required": false}, {"name": "voting_only", "type": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "XPackUsage"}}, "required": false}]}, "DeleteLicenseRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.delete_license", "name": "DeleteLicenseRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "DeleteLicenseResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.delete_license", "name": "DeleteLicenseResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "GetBasicLicenseStatusRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.get_basic_license_status", "name": "GetBasicLicenseStatusRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetBasicLicenseStatusResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.get_basic_license_status", "name": "GetBasicLicenseStatusResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "eligible_to_start_basic", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "GetLicenseRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.get_license", "name": "GetLicenseRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "accept_enterprise", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If the active license is an enterprise license, return type as 'enterprise' (default: false)"}, {"name": "local", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Return local information, do not retrieve the state from master node (default: false)"}]}, "GetLicenseResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.get_license", "name": "GetLicenseResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "license", "type": {"_kind": "instance", "type": {"namespace": "x_pack.license.get_license", "name": "LicenseInformation"}}, "required": false}]}, "GetTrialLicenseStatusRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.get_trial_license_status", "name": "GetTrialLicenseStatusRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetTrialLicenseStatusResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.get_trial_license_status", "name": "GetTrialLicenseStatusResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "eligible_to_start_trial", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "PostLicenseRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.post_license", "name": "PostLicenseRequest"}, "description": "licenses to be installed", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "acknowledge", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "whether the user has acknowledged acknowledge messages (default: false)"}], "body": [{"name": "license", "type": {"_kind": "instance", "type": {"namespace": "x_pack.license.get_license", "name": "License"}}, "required": false}]}, "PostLicenseResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.post_license", "name": "PostLicenseResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "acknowledge", "type": {"_kind": "instance", "type": {"namespace": "x_pack.license.post_license", "name": "LicenseAcknowledgement"}}, "required": false}, {"name": "acknowledged", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "license_status", "type": {"_kind": "instance", "type": {"namespace": "x_pack.license.get_license", "name": "LicenseStatus"}}, "required": false}]}, "StartBasicLicenseRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.start_basic_license", "name": "StartBasicLicenseRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "acknowledge", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "whether the user has acknowledged acknowledge messages (default: false)"}]}, "StartBasicLicenseResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.start_basic_license", "name": "StartBasicLicenseResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "acknowledge", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}}, "required": false}, {"name": "basic_was_started", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "error_message", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "StartTrialLicenseRequest": {"_kind": "request", "name": {"namespace": "x_pack.license.start_trial_license", "name": "StartTrialLicenseRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "acknowledge", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "whether the user has acknowledged acknowledge messages (default: false)"}, {"name": "type_query_string", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "StartTrialLicenseResponse": {"_kind": "interface", "name": {"namespace": "x_pack.license.start_trial_license", "name": "StartTrialLicenseResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "error_message", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "trial_was_started", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CloseJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.close_job", "name": "CloseJobRequest"}, "description": "The URL params optionally sent in the body", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The name of the job to close"}], "query": [{"name": "allow_no_jobs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"}, {"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "True if the job should be forcefully closed"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Controls the time to wait until a job has closed. Default to 30 minutes"}]}, "CloseJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.close_job", "name": "CloseJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "closed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "DeleteCalendarRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_calendar", "name": "DeleteCalendarRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar to delete"}], "query": []}, "DeleteCalendarResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_calendar", "name": "DeleteCalendarResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteCalendarEventRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_calendar_event", "name": "DeleteCalendarEventRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar to modify"}, {"name": "event_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the event to remove from the calendar"}], "query": []}, "DeleteCalendarEventResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_calendar_event", "name": "DeleteCalendarEventResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteCalendarJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_calendar_job", "name": "DeleteCalendarJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar to modify"}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to remove from the calendar"}], "query": []}, "DeleteCalendarJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_calendar_job", "name": "DeleteCalendarJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "job_ids", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}}, "required": false}]}, "DeleteDatafeedRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_datafeed", "name": "DeleteDatafeedRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the datafeed to delete"}], "query": [{"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "True if the datafeed should be forcefully deleted"}]}, "DeleteDatafeedResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_datafeed", "name": "DeleteDatafeedResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteExpiredDataRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_expired_data", "name": "DeleteExpiredDataRequest"}, "description": "deleting expired data parameters", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "DeleteExpiredDataResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_expired_data", "name": "DeleteExpiredDataResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "deleted", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "DeleteFilterRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_filter", "name": "DeleteFilterRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "filter_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the filter to delete"}], "query": []}, "DeleteFilterResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_filter", "name": "DeleteFilterResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteForecastRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_forecast", "name": "DeleteForecastRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job from which to delete forecasts"}, {"name": "forecast_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the forecast to delete, can be comma delimited list. Leaving blank implies `_all`"}], "query": [{"name": "allow_no_forecasts", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if `_all` matches no forecasts"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Controls the time to wait until the forecast(s) are deleted. Default to 30 seconds"}]}, "DeleteForecastResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_forecast", "name": "DeleteForecastResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_job", "name": "DeleteJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to delete"}], "query": [{"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "True if the job should be forcefully deleted"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Should this request wait until the operation has completed before returning"}]}, "DeleteJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_job", "name": "DeleteJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteModelSnapshotRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.delete_model_snapshot", "name": "DeleteModelSnapshotRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to fetch"}, {"name": "snapshot_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the snapshot to delete"}], "query": []}, "DeleteModelSnapshotResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.delete_model_snapshot", "name": "DeleteModelSnapshotResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "EstimateModelMemoryRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.estimate_model_memory", "name": "EstimateModelMemoryRequest"}, "description": "The analysis config, plus cardinality estimates for fields it references", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "analysis_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisConfig"}}, "required": false}, {"name": "max_bucket_cardinality", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}}, "required": false}, {"name": "overall_cardinality", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}}, "required": false}]}, "EstimateModelMemoryResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.estimate_model_memory", "name": "EstimateModelMemoryResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "model_memory_estimate", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "FlushJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.flush_job", "name": "FlushJobRequest"}, "description": "Flush parameters", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The name of the job to flush"}], "query": [{"name": "skip_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Skips time to the given value without generating results or updating the model for the skipped interval"}], "body": [{"name": "advance_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}, {"name": "calc_interim", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}]}, "FlushJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.flush_job", "name": "FlushJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "flushed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "ForecastJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.forecast_job", "name": "ForecastJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to forecast for"}], "query": [], "body": [{"name": "duration", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "expires_in", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "ForecastJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.forecast_job", "name": "ForecastJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "forecast_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "GetAnomalyRecordsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_anomaly_records", "name": "GetAnomalyRecordsRequest"}, "description": "Record selection criteria", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job"}], "query": [], "body": [{"name": "desc", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "exclude_interim", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "page", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job", "name": "Page"}}, "required": false}, {"name": "record_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "sort", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}]}, "GetAnomalyRecordsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_anomaly_records", "name": "GetAnomalyRecordsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "records", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.results", "name": "AnomalyRecord"}}}, "required": false}]}, "GetBucketsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_buckets", "name": "GetBucketsRequest"}, "description": "Bucket selection details if not provided in URI", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "ID of the job to get bucket results from"}, {"name": "timestamp", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Timestamp"}}, "required": false, "description": "The timestamp of the desired single bucket result"}], "query": [], "body": [{"name": "anomaly_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "desc", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}, {"name": "exclude_interim", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "expand", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "page", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job", "name": "Page"}}, "required": false}, {"name": "sort", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}]}, "GetBucketsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_buckets", "name": "GetBucketsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "buckets", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.results", "name": "Bucket"}}}, "required": false}, {"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "GetCalendarEventsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_calendar_events", "name": "GetCalendarEventsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar containing the events"}], "query": [{"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "description": "Get events before this time"}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Get events for the job. When this option is used calendar_id must be '_all'"}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "Get events after this time"}], "body": [{"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "GetCalendarEventsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_calendar_events", "name": "GetCalendarEventsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "events", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.post_calendar_events", "name": "ScheduledEvent"}}}, "required": false}]}, "GetCalendarsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_calendars", "name": "GetCalendarsRequest"}, "description": "The from and size parameters optionally sent in the body", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the calendar to fetch"}], "query": [], "body": [{"name": "page", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job", "name": "Page"}}, "required": false}]}, "GetCalendarsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_calendars", "name": "GetCalendarsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "calendars", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.get_calendars", "name": "Calendar"}}}, "required": false}, {"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "GetCategoriesRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_categories", "name": "GetCategoriesRequest"}, "description": "Category selection details if not provided in URI", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The name of the job"}, {"name": "category_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "CategoryId"}}, "required": false, "description": "The identifier of the category definition of interest"}], "query": [], "body": [{"name": "page", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job", "name": "Page"}}, "required": false}]}, "GetCategoriesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_categories", "name": "GetCategoriesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "categories", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.results", "name": "CategoryDefinition"}}}, "required": false}, {"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "GetDatafeedStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_datafeed_stats", "name": "GetDatafeedStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the datafeeds stats to fetch"}], "query": [{"name": "allow_no_datafeeds", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"}]}, "GetDatafeedStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_datafeed_stats", "name": "GetDatafeedStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "datafeeds", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.datafeed", "name": "DatafeedStats"}}}, "required": false}]}, "GetDatafeedsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_datafeeds", "name": "GetDatafeedsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the datafeeds to fetch"}], "query": [{"name": "allow_no_datafeeds", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"}]}, "GetDatafeedsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_datafeeds", "name": "GetDatafeedsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "datafeeds", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.datafeed", "name": "DatafeedConfig"}}}, "required": false}]}, "GetFiltersRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_filters", "name": "GetFiltersRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "filter_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the filter to fetch"}], "query": [{"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "skips a number of filters"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "specifies a max number of filters to get"}]}, "GetFiltersResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_filters", "name": "GetFiltersResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "filters", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.get_filters", "name": "Filter"}}}, "required": false}]}, "GetInfluencersRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_influencers", "name": "GetInfluencersRequest"}, "description": "Influencer selection criteria", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Identifier for the anomaly detection job"}], "query": [], "body": [{"name": "descending", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "exclude_interim", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "influencer_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "page", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job", "name": "Page"}}, "required": false}, {"name": "sort", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}]}, "GetInfluencersResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_influencers", "name": "GetInfluencersResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "influencers", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.results", "name": "BucketInfluencer"}}}, "required": false}]}, "GetJobStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_job_stats", "name": "GetJobStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the jobs stats to fetch"}], "query": [{"name": "allow_no_jobs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"}]}, "GetJobStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_job_stats", "name": "GetJobStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "jobs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "JobStats"}}}, "required": false}]}, "GetJobsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_jobs", "name": "GetJobsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the jobs to fetch"}], "query": [{"name": "allow_no_jobs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"}]}, "GetJobsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_jobs", "name": "GetJobsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "jobs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.info.x_pack_usage", "name": "Job"}}}, "required": false}]}, "GetModelSnapshotsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_model_snapshots", "name": "GetModelSnapshotsRequest"}, "description": "Model snapshot selection criteria", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to fetch"}, {"name": "snapshot_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the snapshot to fetch"}], "query": [], "body": [{"name": "desc", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "page", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job", "name": "Page"}}, "required": false}, {"name": "sort", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Field"}}, "required": false}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}]}, "GetModelSnapshotsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_model_snapshots", "name": "GetModelSnapshotsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "model_snapshots", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.process", "name": "ModelSnapshot"}}}, "required": false}]}, "GetOverallBucketsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.get_overall_buckets", "name": "GetOverallBucketsRequest"}, "description": "Overall bucket selection details if not provided in URI", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The job IDs for which to calculate overall bucket results"}], "query": [], "body": [{"name": "allow_no_jobs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "bucket_span", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}, {"name": "exclude_interim", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "overall_score", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "double"}}, "required": false}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}, {"name": "top_n", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "GetOverallBucketsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.get_overall_buckets", "name": "GetOverallBucketsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "overall_buckets", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.results", "name": "OverallBucket"}}}, "required": false}]}, "MachineLearningInfoRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.machine_learning_info", "name": "MachineLearningInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "MachineLearningInfoResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.machine_learning_info", "name": "MachineLearningInfoResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "defaults", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.machine_learning_info", "name": "Defaults"}}, "required": false}, {"name": "limits", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.machine_learning_info", "name": "Limits"}}, "required": false}, {"name": "upgrade_mode", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "OpenJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.open_job", "name": "OpenJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to open"}], "query": [], "body": [{"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "OpenJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.open_job", "name": "OpenJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "opened", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "PostCalendarEventsRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.post_calendar_events", "name": "PostCalendarEventsRequest"}, "description": "A list of events", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar to modify"}], "query": [], "body": [{"name": "events", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.post_calendar_events", "name": "ScheduledEvent"}}}, "required": false}]}, "PostCalendarEventsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.post_calendar_events", "name": "PostCalendarEventsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "events", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.post_calendar_events", "name": "ScheduledEvent"}}}, "required": false}]}, "PostJobDataRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.post_job_data", "name": "PostJobDataRequest"}, "description": "The data to process", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The name of the job receiving the data"}], "query": [{"name": "reset_end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "description": "Optional parameter to specify the end of the bucket resetting range"}, {"name": "reset_start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "description": "Optional parameter to specify the start of the bucket resetting range"}], "body": [{"name": "data", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}]}, "PostJobDataResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.post_job_data", "name": "PostJobDataResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "bucket_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "earliest_record_timestamp", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "empty_bucket_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "input_bytes", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "input_field_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "input_record_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "invalid_date_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "last_data_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "latest_record_timestamp", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "missing_field_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "out_of_order_timestamp_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "processed_field_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "processed_record_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "sparse_bucket_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "PreviewDatafeedRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.preview_datafeed", "name": "PreviewDatafeedRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the datafeed to preview"}], "query": []}, "PreviewDatafeedResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.preview_datafeed", "name": "PreviewDatafeedResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "data", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "generic", "name": "TDocument"}}}, "required": false}]}, "PutCalendarRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.put_calendar", "name": "PutCalendarRequest"}, "description": "The calendar details", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar to create"}], "query": [], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "PutCalendarResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.put_calendar", "name": "PutCalendarResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "job_ids", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutCalendarJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.put_calendar_job", "name": "PutCalendarJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the calendar to modify"}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to add to the calendar"}], "query": []}, "PutCalendarJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.put_calendar_job", "name": "PutCalendarJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "calendar_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "job_ids", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutDatafeedRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.put_datafeed", "name": "PutDatafeedRequest"}, "description": "The datafeed config", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the datafeed to create"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore if the source indices expressions resolves to no concrete indices (default: true)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether source index expressions should get expanded to open or closed indices (default: open)"}, {"name": "ignore_throttled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore indices that are marked as throttled (default: true)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore unavailable indexes (default: false)"}], "body": [{"name": "aggregations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "chunking_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.datafeed", "name": "ChunkingConfig"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "annotations": {"prop_serializer": "IndicesFormatter"}}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false}, {"name": "max_empty_searches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "script_fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "ScriptField"}}}, "required": false}, {"name": "scroll_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "PutDatafeedResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.put_datafeed", "name": "PutDatafeedResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "aggregations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "chunking_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.datafeed", "name": "ChunkingConfig"}}, "required": false}, {"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "annotations": {"prop_serializer": "IndicesFormatter"}}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_empty_searches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "script_fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "ScriptField"}}}, "required": false}, {"name": "scroll_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "PutFilterRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.put_filter", "name": "PutFilterRequest"}, "description": "The filter details", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "filter_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the filter to create"}], "query": [], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "items", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutFilterResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.put_filter", "name": "PutFilterResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "filter_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "items", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.put_job", "name": "PutJobRequest"}, "description": "The job", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to create"}], "query": [], "body": [{"name": "allow_lazy_open", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "analysis_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisConfig"}}, "required": false}, {"name": "analysis_limits", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisLimits"}}, "required": false}, {"name": "data_description", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "DataDescription"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "model_plot", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "ModelPlotConfig"}}, "required": false}, {"name": "model_snapshot_retention_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "results_index_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false}]}, "PutJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.put_job", "name": "PutJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "allow_lazy_open", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "analysis_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisConfig"}}, "required": false}, {"name": "analysis_limits", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisLimits"}}, "required": false}, {"name": "background_persist_interval", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "create_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "data_description", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "DataDescription"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "job_type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "model_plot", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "ModelPlotConfig"}}, "required": false}, {"name": "model_snapshot_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "model_snapshot_retention_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "renormalization_window_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "results_index_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "results_retention_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "RevertModelSnapshotRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.revert_model_snapshot", "name": "RevertModelSnapshotRequest"}, "description": "Reversion options", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to fetch"}, {"name": "snapshot_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the snapshot to revert to"}], "query": [], "body": [{"name": "delete_intervening_results", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "RevertModelSnapshotResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.revert_model_snapshot", "name": "RevertModelSnapshotResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "model", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.process", "name": "ModelSnapshot"}}, "required": false}]}, "SetUpgradeModeRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.set_upgrade_mode", "name": "SetUpgradeModeRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to enable upgrade_mode ML setting or not. Defaults to false."}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Controls the time to wait before action times out. Defaults to 30 seconds"}]}, "SetUpgradeModeResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.set_upgrade_mode", "name": "SetUpgradeModeResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StartDatafeedRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.start_datafeed", "name": "StartDatafeedRequest"}, "description": "The start datafeed parameters", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the datafeed to start"}], "query": [], "body": [{"name": "end", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "start", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "StartDatafeedResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.start_datafeed", "name": "StartDatafeedResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "started", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "StopDatafeedRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.stop_datafeed", "name": "StopDatafeedRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the datafeed to stop"}], "query": [{"name": "allow_no_datafeeds", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"}], "body": [{"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}]}, "StopDatafeedResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.stop_datafeed", "name": "StopDatafeedResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "stopped", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "UpdateDatafeedRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.update_data_feed", "name": "UpdateDatafeedRequest"}, "description": "The datafeed update settings", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the datafeed to update"}], "query": [{"name": "allow_no_indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore if the source indices expressions resolves to no concrete indices (default: true)"}, {"name": "expand_wildcards", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "ExpandWildcards"}}, "required": false, "description": "Whether source index expressions should get expanded to open or closed indices (default: open)"}, {"name": "ignore_throttled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore indices that are marked as throttled (default: true)"}, {"name": "ignore_unavailable", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Ignore unavailable indexes (default: false)"}], "body": [{"name": "aggregations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "chunking_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.datafeed", "name": "ChunkingConfig"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "annotations": {"prop_serializer": "IndicesFormatter"}}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false}, {"name": "max_empty_searches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "script_fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "ScriptField"}}}, "required": false}, {"name": "scroll_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "UpdateDatafeedResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.update_data_feed", "name": "UpdateDatafeedResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "aggregations", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "chunking_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.datafeed", "name": "ChunkingConfig"}}, "required": false}, {"name": "datafeed_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "indices", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": false, "annotations": {"prop_serializer": "IndicesFormatter"}}, {"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "max_empty_searches", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query_delay", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "script_fields", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "common_options.scripting", "name": "ScriptField"}}}, "required": false}, {"name": "scroll_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "UpdateFilterRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.update_filter", "name": "UpdateFilterRequest"}, "description": "The filter update", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "filter_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the filter to update"}], "query": [], "body": [{"name": "add_items", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "remove_items", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "UpdateFilterResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.update_filter", "name": "UpdateFilterResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "filter_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "items", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "UpdateJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.update_job", "name": "UpdateJobRequest"}, "description": "The job update settings", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to create"}], "query": [], "body": [{"name": "allow_lazy_open", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "analysis_limits", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisMemoryLimit"}}, "required": false}, {"name": "background_persist_interval", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "custom_settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "model_plot_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "ModelPlotConfigEnabled"}}, "required": false}, {"name": "model_snapshot_retention_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "renormalization_window_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "results_retention_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "UpdateJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.update_job", "name": "UpdateJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "UpdateModelSnapshotRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.update_model_snapshot", "name": "UpdateModelSnapshotRequest"}, "description": "The model snapshot properties to update", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "job_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to fetch"}, {"name": "snapshot_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the snapshot to update"}], "query": [], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "retain", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "UpdateModelSnapshotResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.update_model_snapshot", "name": "UpdateModelSnapshotResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": [{"name": "model", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.process", "name": "ModelSnapshot"}}, "required": false}]}, "ValidateDetectorRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.validate_detector", "name": "ValidateDetectorRequest"}, "description": "The detector", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "detector", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.detectors", "name": "Detector"}}, "required": false}]}, "ValidateDetectorResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.validate_detector", "name": "ValidateDetectorResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ValidateJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.machine_learning.validate_job", "name": "ValidateJobRequest"}, "description": "The job config", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "analysis_config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisConfig"}}, "required": false}, {"name": "analysis_limits", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "AnalysisLimits"}}, "required": false}, {"name": "data_description", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "DataDescription"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "model_plot", "type": {"_kind": "instance", "type": {"namespace": "x_pack.machine_learning.job.config", "name": "ModelPlotConfig"}}, "required": false}, {"name": "model_snapshot_retention_days", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "results_index_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false}]}, "ValidateJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.machine_learning.validate_job", "name": "ValidateJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeprecationInfoRequest": {"_kind": "request", "name": {"namespace": "x_pack.migration.deprecation_info", "name": "DeprecationInfoRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false, "description": "Index pattern"}], "query": []}, "DeprecationInfoResponse": {"_kind": "interface", "name": {"namespace": "x_pack.migration.deprecation_info", "name": "DeprecationInfoResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster_settings", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.migration.deprecation_info", "name": "DeprecationInfo"}}}, "required": false}, {"name": "index_settings", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.migration.deprecation_info", "name": "DeprecationInfo"}}}}, "required": false}, {"name": "node_settings", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.migration.deprecation_info", "name": "DeprecationInfo"}}}, "required": false}]}, "CreateRollupJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.create_rollup_job", "name": "CreateRollupJobRequest"}, "description": "The job configuration", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to create"}], "query": [], "body": [{"name": "cron", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "groups", "type": {"_kind": "instance", "type": {"namespace": "x_pack.roll_up.rollup_configuration", "name": "RollupGroupings"}}, "required": false}, {"name": "index_pattern", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "metrics", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.roll_up.rollup_configuration", "name": "RollupFieldMetric"}}}, "required": false}, {"name": "page_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "rollup_index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": false}]}, "CreateRollupJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.create_rollup_job", "name": "CreateRollupJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "DeleteRollupJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.delete_rollup_job", "name": "DeleteRollupJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to delete"}], "query": []}, "DeleteRollupJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.delete_rollup_job", "name": "DeleteRollupJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetRollupCapabilitiesRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.get_rollup_capabilities", "name": "GetRollupCapabilitiesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the index to check rollup capabilities on, or left blank for all jobs"}], "query": []}, "GetRollupCapabilitiesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.get_rollup_capabilities", "name": "GetRollupCapabilitiesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "x_pack.roll_up.get_rollup_capabilities", "name": "RollupCapabilities"}}]}], "properties": []}, "GetRollupIndexCapabilitiesRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.get_rollup_index_capabilities", "name": "GetRollupIndexCapabilitiesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, "required": true, "description": "The rollup index or index pattern to obtain rollup capabilities from."}], "query": []}, "GetRollupIndexCapabilitiesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.get_rollup_index_capabilities", "name": "GetRollupIndexCapabilitiesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "IndexName"}}, {"_kind": "instance", "type": {"namespace": "x_pack.roll_up.get_rollup_index_capabilities", "name": "RollupIndexCapabilities"}}]}], "properties": []}, "GetRollupJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.get_rollup_job", "name": "GetRollupJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The ID of the job(s) to fetch. Accepts glob patterns, or left blank for all jobs"}], "query": []}, "GetRollupJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.get_rollup_job", "name": "GetRollupJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "jobs", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.roll_up.get_rollup_job", "name": "RollupJobInformation"}}}, "required": false}]}, "RollupSearchRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.rollup_search", "name": "RollupSearchRequest"}, "description": "The search request body", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "index", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Indices"}}, "required": true, "description": "The indices or index-pattern(s) (containing rollup or regular data) that should be searched"}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "TypeName"}}, "required": false, "description": "The doc type inside the index"}], "query": [{"name": "total_hits_as_integer", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "typed_keys", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"}], "body": [{"name": "aggs", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "aggregations", "name": "AggregationContainer"}}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "RollupSearchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.rollup_search", "name": "RollupSearchResponse"}, "generics": ["TDocument"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "StartRollupJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.start_rollup_job", "name": "StartRollupJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to start"}], "query": []}, "StartRollupJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.start_rollup_job", "name": "StartRollupJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "started", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "StopRollupJobRequest": {"_kind": "request", "name": {"namespace": "x_pack.roll_up.stop_rollup_job", "name": "StopRollupJobRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The ID of the job to stop"}], "query": [{"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Block for (at maximum) the specified duration while waiting for the job to stop.  Defaults to 30s."}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "True if the API should block until the job has fully stopped, false if should be executed async. Defaults to false."}]}, "StopRollupJobResponse": {"_kind": "interface", "name": {"namespace": "x_pack.roll_up.stop_rollup_job", "name": "StopRollupJobResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "stopped", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "CreateApiKeyRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.api_key.create_api_key", "name": "CreateApiKeyRequest"}, "description": "The api key request to create an API key", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}], "body": [{"name": "expiration", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "role_descriptors", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.api_key.create_api_key", "name": "ApiKeyRole"}}}, "required": false}]}, "CreateApiKeyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.api_key.create_api_key", "name": "CreateApiKeyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "api_key", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "expiration", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false, "annotations": {"prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"}}, {"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "GetApiKeyRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.api_key.get_api_key", "name": "GetApiKeyRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "API key id of the API key to be retrieved"}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "API key name of the API key to be retrieved"}, {"name": "owner", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "flag to query API keys owned by the currently authenticated user"}, {"name": "realm_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "realm name of the user who created this API key to be retrieved"}, {"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "user name of the user who created this API key to be retrieved"}]}, "GetApiKeyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.api_key.get_api_key", "name": "GetApiKeyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "api_keys", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.api_key.get_api_key", "name": "ApiKeys"}}}, "required": false}]}, "InvalidateApiKeyRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.api_key.invalidate_api_key", "name": "InvalidateApiKeyRequest"}, "description": "The api key request to invalidate API key(s)", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "owner", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "realm_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "InvalidateApiKeyResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.api_key.invalidate_api_key", "name": "InvalidateApiKeyResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "error_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "error_details", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "ErrorCause"}}}, "required": false}, {"name": "invalidated_api_keys", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "previously_invalidated_api_keys", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "AuthenticateRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.authenticate", "name": "AuthenticateRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "AuthenticateResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.authenticate", "name": "AuthenticateResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "authentication_realm", "type": {"_kind": "instance", "type": {"namespace": "x_pack.security.authenticate", "name": "RealmInfo"}}, "required": false}, {"name": "email", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "full_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "lookup_realm", "type": {"_kind": "instance", "type": {"namespace": "x_pack.security.authenticate", "name": "RealmInfo"}}, "required": false}, {"name": "metadata", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "roles", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "ClearCachedRealmsRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.clear_cached_realms", "name": "ClearCachedRealmsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "realms", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "Comma-separated list of realms to clear"}], "query": [{"name": "usernames", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false, "description": "Comma-separated list of usernames to clear from the cache"}]}, "ClearCachedRealmsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.clear_cached_realms", "name": "ClearCachedRealmsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security", "name": "SecurityNode"}}}, "required": false}]}, "DeletePrivilegesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.privileges.delete_privileges", "name": "DeletePrivilegesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "application", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "Application name"}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "Privilege name"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}]}, "DeletePrivilegesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.privileges.delete_privileges", "name": "DeletePrivilegesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.delete_privileges", "name": "FoundUserPrivilege"}}}]}], "properties": []}, "GetBuiltinPrivilegesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.privileges.get_builtin_privileges", "name": "GetBuiltinPrivilegesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetBuiltinPrivilegesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.privileges.get_builtin_privileges", "name": "GetBuiltinPrivilegesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "index", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "GetPrivilegesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.privileges.get_privileges", "name": "GetPrivilegesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "application", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "Application name"}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "Privilege name"}], "query": []}, "GetPrivilegesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.privileges.get_privileges", "name": "GetPrivilegesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.put_privileges", "name": "PrivilegesActions"}}}]}], "properties": []}, "GetUserPrivilegesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.privileges.get_user_privileges", "name": "GetUserPrivilegesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetUserPrivilegesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.privileges.get_user_privileges", "name": "GetUserPrivilegesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "applications", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.get_user_privileges", "name": "ApplicationResourcePrivileges"}}}, "required": false}, {"name": "cluster", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "global", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.get_user_privileges", "name": "GlobalPrivileges"}}}, "required": false}, {"name": "indices", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.get_user_privileges", "name": "UserIndicesPrivileges"}}}, "required": false}, {"name": "run_as", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "HasPrivilegesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.privileges.has_privileges", "name": "HasPrivilegesRequest"}, "description": "The privileges to test", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "user", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "Username"}], "query": [], "body": [{"name": "application", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.has_privileges", "name": "ApplicationPrivilegesCheck"}}}, "required": false}, {"name": "cluster", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "index", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.has_privileges", "name": "IndexPrivilegesCheck"}}}, "required": false}]}, "HasPrivilegesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.privileges.has_privileges", "name": "HasPrivilegesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "application", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.has_privileges", "name": "ResourcePrivileges"}}}}, "required": false, "annotations": {"prop_serializer": "ApplicationsPrivilegesFormatter"}}, {"name": "cluster", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}}, "required": false}, {"name": "has_all_requested", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "index", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.has_privileges", "name": "ResourcePrivileges"}}}, "required": false, "annotations": {"prop_serializer": "IndicesPrivilegesFormatter"}}, {"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "PutPrivilegesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.privileges.put_privileges", "name": "PutPrivilegesRequest"}, "description": "The privilege(s) to add", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}], "body": [{"name": "applications", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.put_privileges", "name": "PrivilegesActions"}}}}, "required": false}]}, "PutPrivilegesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.privileges.put_privileges", "name": "PutPrivilegesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.privileges.put_privileges", "name": "PutPrivilegesStatus"}}}]}], "properties": []}, "DeleteRoleMappingRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role_mapping.delete_role_mapping", "name": "DeleteRoleMappingRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "Role-mapping name"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}]}, "DeleteRoleMappingResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role_mapping.delete_role_mapping", "name": "DeleteRoleMappingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "GetRoleMappingRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role_mapping.get_role_mapping", "name": "GetRoleMappingRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "Role-Mapping name"}], "query": []}, "GetRoleMappingResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role_mapping.get_role_mapping", "name": "GetRoleMappingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "x_pack.security.role_mapping.get_role_mapping", "name": "XPackRoleMapping"}}]}], "properties": []}, "PutRoleMappingRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role_mapping.put_role_mapping", "name": "PutRoleMappingRequest"}, "description": "The role mapping to add", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "Role-mapping name"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}], "body": [{"name": "enabled", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "metadata", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "roles", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "rules", "type": {"_kind": "instance", "type": {"namespace": "x_pack.security.role_mapping.rules.role", "name": "RoleMappingRuleBase"}}, "required": false}, {"name": "run_as", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutRoleMappingResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role_mapping.put_role_mapping", "name": "PutRoleMappingResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "created", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "role_mapping", "type": {"_kind": "instance", "type": {"namespace": "x_pack.security.role_mapping.put_role_mapping", "name": "PutRoleMappingStatus"}}, "required": false}]}, "ClearCachedRolesRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role.clear_cached_roles", "name": "ClearCachedRolesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": true, "description": "Role name"}], "query": []}, "ClearCachedRolesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role.clear_cached_roles", "name": "ClearCachedRolesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "nodes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.security", "name": "SecurityNode"}}}, "required": false}]}, "DeleteRoleRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role.delete_role", "name": "DeleteRoleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "Role name"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}]}, "DeleteRoleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role.delete_role", "name": "DeleteRoleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "GetRoleRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role.get_role", "name": "GetRoleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "Role name"}], "query": []}, "GetRoleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role.get_role", "name": "GetRoleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "x_pack.security.role.get_role", "name": "XPackRole"}}]}], "properties": []}, "PutRoleRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.role.put_role", "name": "PutRoleRequest"}, "description": "The role to add", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "Role name"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}], "body": [{"name": "applications", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.role.put_role", "name": "ApplicationPrivileges"}}}, "required": false}, {"name": "cluster", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}, {"name": "global", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "indices", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.security.role.put_role", "name": "IndicesPrivileges"}}}, "required": false}, {"name": "metadata", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "run_as", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutRoleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.role.put_role", "name": "PutRoleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "role", "type": {"_kind": "instance", "type": {"namespace": "x_pack.security.role.put_role", "name": "PutRoleStatus"}}, "required": false}]}, "ChangePasswordRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.change_password", "name": "ChangePasswordRequest"}, "description": "the new password for the user", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": false, "description": "The username of the user to change the password for"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}], "body": [{"name": "password", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "ChangePasswordResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.change_password", "name": "ChangePasswordResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "DeleteUserRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.delete_user", "name": "DeleteUserRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "username"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}]}, "DeleteUserResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.delete_user", "name": "DeleteUserResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "DisableUserRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.disable_user", "name": "DisableUserRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The username of the user to disable"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}]}, "DisableUserResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.disable_user", "name": "DisableUserResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "EnableUserRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.enable_user", "name": "EnableUserRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The username of the user to enable"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}]}, "EnableUserResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.enable_user", "name": "EnableUserResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": []}, "GetUserRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.get_user", "name": "GetUserRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Names"}}, "required": false, "description": "A comma-separated list of usernames"}], "query": []}, "GetUserResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.get_user", "name": "GetUserResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "x_pack.security.user.get_user", "name": "XPackUser"}}]}], "properties": []}, "GetUserAccessTokenRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.get_user_access_token", "name": "GetUserAccessTokenRequest"}, "description": "The token request to get", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "grant_type", "type": {"_kind": "instance", "type": {"namespace": "x_pack.security.user.get_user_access_token", "name": "AccessTokenGrantType"}}, "required": false}, {"name": "scope", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "GetUserAccessTokenResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.get_user_access_token", "name": "GetUserAccessTokenResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "access_token", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "expires_in", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "scope", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "type", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "InvalidateUserAccessTokenRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.invalidate_user_access_token", "name": "InvalidateUserAccessTokenRequest"}, "description": "The token to invalidate", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "InvalidateUserAccessTokenResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.invalidate_user_access_token", "name": "InvalidateUserAccessTokenResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "error_count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "error_details", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "ErrorCause"}}}, "required": false}, {"name": "invalidated_tokens", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "previously_invalidated_tokens", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "PutUserRequest": {"_kind": "request", "name": {"namespace": "x_pack.security.user.put_user", "name": "PutUserRequest"}, "description": "The user to add", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "username", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Name"}}, "required": true, "description": "The username of the User"}], "query": [{"name": "refresh", "type": {"_kind": "instance", "type": {"namespace": "common", "name": "Refresh"}}, "required": false, "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."}], "body": [{"name": "email", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "full_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "metadata", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "password", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "password_hash", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "roles", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}}, "required": false}]}, "PutUserResponse": {"_kind": "interface", "name": {"namespace": "x_pack.security.user.put_user", "name": "PutUserResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "created", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "DeleteSnapshotLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.delete_lifecycle", "name": "DeleteSnapshotLifecycleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the snapshot lifecycle policy to remove"}], "query": []}, "DeleteSnapshotLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.delete_lifecycle", "name": "DeleteSnapshotLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ExecuteSnapshotLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.execute_lifecycle", "name": "ExecuteSnapshotLifecycleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the snapshot lifecycle policy to be executed"}], "query": []}, "ExecuteSnapshotLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.execute_lifecycle", "name": "ExecuteSnapshotLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "snapshot_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "ExecuteRetentionRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.execute_retention", "name": "ExecuteRetentionRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "ExecuteRetentionResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.execute_retention", "name": "ExecuteRetentionResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetSnapshotLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.get_lifecycle", "name": "GetSnapshotLifecycleRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Ids"}}, "required": false, "description": "Comma-separated list of snapshot lifecycle policies to retrieve"}], "query": []}, "GetSnapshotLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.get_lifecycle", "name": "GetSnapshotLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "DictionaryResponseBase"}, "generics": [{"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, {"_kind": "instance", "type": {"namespace": "x_pack.slm", "name": "SnapshotLifecyclePolicyMetadata"}}]}], "properties": []}, "GetSnapshotLifecycleStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.get_stats", "name": "GetSnapshotLifecycleStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetSnapshotLifecycleStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.get_stats", "name": "GetSnapshotLifecycleStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "retention_deletion_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "retention_deletion_time_millis", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "retention_failed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "retention_runs", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "retention_timed_out", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total_snapshots_deleted", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total_snapshot_deletion_failures", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total_snapshots_failed", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "total_snapshots_taken", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}]}, "GetSnapshotLifecycleManagementStatusRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.get_status", "name": "GetSnapshotLifecycleManagementStatusRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetSnapshotLifecycleManagementStatusResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.get_status", "name": "GetSnapshotLifecycleManagementStatusResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "operation_mode", "type": {"_kind": "instance", "type": {"namespace": "x_pack.ilm.get_status", "name": "LifecycleOperationMode"}}, "required": false}]}, "PutSnapshotLifecycleRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.put_lifecycle", "name": "PutSnapshotLifecycleRequest"}, "description": "The snapshot lifecycle policy definition to register", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "policy_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the snapshot lifecycle policy"}], "query": [], "body": [{"name": "config", "type": {"_kind": "instance", "type": {"namespace": "x_pack.slm", "name": "SnapshotLifecycleConfig"}}, "required": false}, {"name": "name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "repository", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "retention", "type": {"_kind": "instance", "type": {"namespace": "x_pack.slm", "name": "SnapshotRetentionConfiguration"}}, "required": false}, {"name": "schedule", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.schedule", "name": "CronExpression"}}, "required": false}]}, "PutSnapshotLifecycleResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.put_lifecycle", "name": "PutSnapshotLifecycleResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StartSnapshotLifecycleManagementRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.start", "name": "StartSnapshotLifecycleManagementRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "StartSnapshotLifecycleManagementResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.start", "name": "StartSnapshotLifecycleManagementResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StopSnapshotLifecycleManagementRequest": {"_kind": "request", "name": {"namespace": "x_pack.slm.stop", "name": "StopSnapshotLifecycleManagementRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "StopSnapshotLifecycleManagementResponse": {"_kind": "interface", "name": {"namespace": "x_pack.slm.stop", "name": "StopSnapshotLifecycleManagementResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "ClearSqlCursorRequest": {"_kind": "request", "name": {"namespace": "x_pack.sql.clear_sql_cursor", "name": "ClearSqlCursorRequest"}, "description": "Specify the cursor value in the `cursor` element to clean the cursor.", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "cursor", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "ClearSqlCursorResponse": {"_kind": "interface", "name": {"namespace": "x_pack.sql.clear_sql_cursor", "name": "ClearSqlCursorResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "succeeded", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}]}, "QuerySqlRequest": {"_kind": "request", "name": {"namespace": "x_pack.sql.query_sql", "name": "QuerySqlRequest"}, "description": "Use the `query` element to start a query. Use the `cursor` element to continue a query.", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [{"name": "format", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false, "description": "a short version of the Accept header, e.g. json, yaml"}], "body": [{"name": "columnar", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "cursor", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "fetch_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "filter", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "time_zone", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "QuerySqlResponse": {"_kind": "interface", "name": {"namespace": "x_pack.sql.query_sql", "name": "QuerySqlResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "columns", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.sql.query_sql", "name": "SqlColumn"}}}, "required": false}, {"name": "cursor", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "rows", "type": {"_kind": "array", "value": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.sql.query_sql", "name": "SqlValue"}}}}, "required": false}, {"name": "values", "type": {"_kind": "array", "value": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.sql.query_sql", "name": "SqlValue"}}}}, "required": false}]}, "TranslateSqlRequest": {"_kind": "request", "name": {"namespace": "x_pack.sql.translate_sql", "name": "TranslateSqlRequest"}, "description": "Specify the query in the `query` element.", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "fetch_size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}, {"name": "filter", "type": {"_kind": "instance", "type": {"namespace": "query_dsl.abstractions.container", "name": "QueryContainer"}}, "required": false}, {"name": "query", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "time_zone", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "TranslateSqlResponse": {"_kind": "interface", "name": {"namespace": "x_pack.sql.translate_sql", "name": "TranslateSqlResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "result", "type": {"_kind": "instance", "type": {"namespace": "search.search", "name": "SearchRequest"}}, "required": false}]}, "GetCertificatesRequest": {"_kind": "request", "name": {"namespace": "x_pack.ssl.get_certificates", "name": "GetCertificatesRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "GetCertificatesResponse": {"_kind": "interface", "name": {"namespace": "x_pack.ssl.get_certificates", "name": "GetCertificatesResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "certificates", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.ssl.get_certificates", "name": "ClusterCertificateInformation"}}}, "required": false}]}, "DeleteTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.delete_transform", "name": "DeleteTransformRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the transform to delete"}], "query": [{"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "When `true`, the transform is deleted regardless of its current state. The default value is `false`, meaning that the transform must be `stopped` before it can be deleted."}]}, "DeleteTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.delete_transform", "name": "DeleteTransformResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "GetTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.get_transform", "name": "GetTransformRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "The id or comma delimited list of id expressions of the transforms to get, '_all' or '*' implies get all transforms"}], "query": [{"name": "allow_no_match", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "skips a number of transform configs, defaults to 0"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false, "description": "specifies a max number of transforms to get, defaults to 100"}]}, "GetTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.get_transform", "name": "GetTransformResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "transforms", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.transform", "name": "Transform"}}}, "required": false}]}, "GetTransformStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.get_transform_stats", "name": "GetTransformStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the transform for which to get stats. '_all' or '*' implies all transforms"}], "query": [{"name": "allow_no_match", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"}, {"name": "from", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "skips a number of transform stats, defaults to 0"}, {"name": "size", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "specifies a max number of transform stats to get, defaults to 100"}]}, "GetTransformStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.get_transform_stats", "name": "GetTransformStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "count", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "transforms", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.transform.get_transform_stats", "name": "TransformStats"}}}, "required": false}]}, "PreviewTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.preview_transform", "name": "PreviewTransformRequest"}, "description": "The definition for the transform to preview", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": [], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "dest", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformDestination"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "pivot", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform.pivot", "name": "TransformPivot"}}, "required": false}, {"name": "source", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSource"}}, "required": false}, {"name": "sync", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSyncContainer"}}, "required": false}]}, "PreviewTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.preview_transform", "name": "PreviewTransformResponse"}, "generics": ["TTransform"], "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "generated_dest_index", "type": {"_kind": "instance", "type": {"namespace": "index_modules.index_settings", "name": "IndexState"}}, "required": false}, {"name": "preview", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "generic", "name": "TTransform"}}}, "required": false, "annotations": {"prop_serializer": "SourceFormatter`1"}}]}, "PutTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.put_transform", "name": "PutTransformRequest"}, "description": "The transform definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the new transform."}], "query": [{"name": "defer_validation", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If validations should be deferred until transform starts, defaults to false."}], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "dest", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformDestination"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "pivot", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform.pivot", "name": "TransformPivot"}}, "required": false}, {"name": "source", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSource"}}, "required": false}, {"name": "sync", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSyncContainer"}}, "required": false}]}, "PutTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.put_transform", "name": "PutTransformResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StartTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.start_transform", "name": "StartTransformRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the transform to start"}], "query": [{"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Controls the time to wait for the transform to start"}]}, "StartTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.start_transform", "name": "StartTransformResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StopTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.stop_transform", "name": "StopTransformRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the transform to stop"}], "query": [{"name": "allow_no_match", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"}, {"name": "force", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to force stop a failed transform or not. Default to false"}, {"name": "timeout", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false, "description": "Controls the time to wait until the transform has stopped. Default to 30 seconds"}, {"name": "wait_for_checkpoint", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to wait for the transform to reach a checkpoint before stopping. Default to false"}, {"name": "wait_for_completion", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Whether to wait for the transform to fully stop before returning or not. Default to false"}]}, "StopTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.stop_transform", "name": "StopTransformResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "UpdateTransformRequest": {"_kind": "request", "name": {"namespace": "x_pack.transform.update_transform", "name": "UpdateTransformRequest"}, "description": "The update transform definition", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "transform_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "The id of the transform."}], "query": [{"name": "defer_validation", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "If validations should be deferred until transform starts, defaults to false."}], "body": [{"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "dest", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformDestination"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "source", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSource"}}, "required": false}, {"name": "sync", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSyncContainer"}}, "required": false}]}, "UpdateTransformResponse": {"_kind": "interface", "name": {"namespace": "x_pack.transform.update_transform", "name": "UpdateTransformResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "create_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "create_time_date_time", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Date"}}, "required": false}, {"name": "description", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "dest", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformDestination"}}, "required": false}, {"name": "frequency", "type": {"_kind": "instance", "type": {"namespace": "common_options.time_unit", "name": "Time"}}, "required": false}, {"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "pivot", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform.pivot", "name": "TransformPivot"}}, "required": false}, {"name": "source", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSource"}}, "required": false}, {"name": "sync", "type": {"_kind": "instance", "type": {"namespace": "x_pack.transform", "name": "TransformSyncContainer"}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}]}, "AcknowledgeWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.acknowledge_watch", "name": "AcknowledgeWatchRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "watch_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Watch ID"}, {"name": "action_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "ActionIds"}}, "required": false, "description": "A comma-separated list of the action ids to be acked"}], "query": []}, "AcknowledgeWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.acknowledge_watch", "name": "AcknowledgeWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "status", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.acknowledge_watch", "name": "WatchStatus"}}, "required": false}]}, "ActivateWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.activate_watch", "name": "ActivateWatchRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "watch_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Watch ID"}], "query": []}, "ActivateWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.activate_watch", "name": "ActivateWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "status", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.activate_watch", "name": "ActivationStatus"}}, "required": false}]}, "DeactivateWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.deactivate_watch", "name": "DeactivateWatchRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "watch_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Watch ID"}], "query": []}, "DeactivateWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.deactivate_watch", "name": "DeactivateWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "status", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.activate_watch", "name": "ActivationStatus"}}, "required": false}]}, "DeleteWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.delete_watch", "name": "DeleteWatchRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Watch ID"}], "query": []}, "DeleteWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.delete_watch", "name": "DeleteWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "ExecuteWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.execute_watch", "name": "ExecuteWatchRequest"}, "description": "Execution control", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": false, "description": "Watch ID"}], "query": [{"name": "debug", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "indicates whether the watch should execute in debug mode"}], "body": [{"name": "action_modes", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.execution", "name": "ActionExecutionMode"}}}, "required": false}, {"name": "alternative_input", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "ignore_condition", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "record_execution", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "simulated_actions", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.execution", "name": "SimulatedActions"}}, "required": false}, {"name": "trigger_data", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.schedule", "name": "ScheduleTriggerEvent"}}, "required": false}, {"name": "watch", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher", "name": "Watch"}}, "required": false}]}, "ExecuteWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.execute_watch", "name": "ExecuteWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "watch_record", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.execute_watch", "name": "WatchRecord"}}, "required": false}]}, "GetWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.get_watch", "name": "GetWatchRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Watch ID"}], "query": []}, "GetWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.get_watch", "name": "GetWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "found", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "status", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.acknowledge_watch", "name": "WatchStatus"}}, "required": false}, {"name": "watch", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher", "name": "Watch"}}, "required": false}]}, "PutWatchRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.put_watch", "name": "PutWatchRequest"}, "description": "The watch", "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Id"}}, "required": true, "description": "Watch ID"}], "query": [{"name": "active", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Specify whether the watch is in/active by default"}, {"name": "if_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "only update the watch if the last operation that has changed the watch has the specified primary term"}, {"name": "if_sequence_number", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false, "description": "Explicit version number for concurrency control"}], "body": [{"name": "actions", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.action", "name": "Action"}}}, "required": false}, {"name": "condition", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.condition", "name": "ConditionContainer"}}, "required": false}, {"name": "input", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.input", "name": "InputContainer"}}, "required": false}, {"name": "metadata", "type": {"_kind": "dictionary", "key": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "value": {"_kind": "instance", "type": {"namespace": "internal", "name": "object"}}}, "required": false}, {"name": "throttle_period", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "transform", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.transform", "name": "TransformContainer"}}, "required": false}, {"name": "trigger", "type": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.trigger", "name": "TriggerContainer"}}, "required": false}]}, "PutWatchResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.put_watch", "name": "PutWatchResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "created", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "_id", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "_primary_term", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "_seq_no", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "long"}}, "required": false}, {"name": "_version", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "integer"}}, "required": false}]}, "StartWatcherRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.start_watcher", "name": "StartWatcherRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "StartWatcherResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.start_watcher", "name": "StartWatcherResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "StopWatcherRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.stop_watcher", "name": "StopWatcherRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [], "query": []}, "StopWatcherResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.stop_watcher", "name": "StopWatcherResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "AcknowledgedResponseBase"}}], "properties": []}, "WatcherStatsRequest": {"_kind": "request", "name": {"namespace": "x_pack.watcher.watcher_stats", "name": "WatcherStatsRequest"}, "inherits": [{"type": {"namespace": "common_abstractions.request", "name": "RequestBase"}}], "path": [{"name": "metric", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "Metrics"}}, "required": false, "description": "Controls what additional stat metrics should be include in the response"}], "query": [{"name": "emit_stacktraces", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false, "description": "Emits stack traces of currently running watches"}]}, "WatcherStatsResponse": {"_kind": "interface", "name": {"namespace": "x_pack.watcher.watcher_stats", "name": "WatcherStatsResponse"}, "inherits": [{"type": {"namespace": "common_abstractions.response", "name": "ResponseBase"}}], "properties": [{"name": "cluster_name", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "string"}}, "required": false}, {"name": "manually_stopped", "type": {"_kind": "instance", "type": {"namespace": "internal", "name": "boolean"}}, "required": false}, {"name": "stats", "type": {"_kind": "array", "value": {"_kind": "instance", "type": {"namespace": "x_pack.watcher.watcher_stats", "name": "WatcherNodeStats"}}}, "required": false}]}}, "paths": {}, "path": {"async_search.delete": {"name": "async_search.delete", "description": "Deletes an async search by ID. If the search is still running, the search request will be cancelled. Otherwise, the saved search results are deleted.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html", "stability": "stable", "request": {"$ref": "#/definitions/AsyncSearchDeleteRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/AsyncSearchDeleteResponse"}, "urls": [{"path": "/_async_search/{id}", "methods": ["DELETE"]}], "tags": ["async_search"]}, "async_search.get": {"name": "async_search.get", "description": "Retrieves the results of a previously submitted async search request given its ID.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html", "stability": "stable", "request": {"$ref": "#/definitions/AsyncSearchGetRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/AsyncSearchGetResponse"}, "urls": [{"path": "/_async_search/{id}", "methods": ["GET"]}], "tags": ["async_search"]}, "async_search.submit": {"name": "async_search.submit", "description": "Executes a search request asynchronously.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html", "stability": "stable", "request": {"$ref": "#/definitions/AsyncSearchSubmitRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/AsyncSearchSubmitResponse"}, "urls": [{"path": "/_async_search", "methods": ["POST"]}, {"path": "/{index}/_async_search", "methods": ["POST"]}], "tags": ["async_search"]}, "bulk": {"name": "bulk", "description": "Allows to perform multiple index/update/delete operations in a single request.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html", "stability": "stable", "request": {"$ref": "#/definitions/BulkRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/BulkResponse"}, "urls": [{"path": "/_bulk", "methods": ["POST", "PUT"]}, {"path": "/{index}/_bulk", "methods": ["POST", "PUT"]}, {"path": "/{index}/{type}/_bulk", "methods": ["POST", "PUT"]}]}, "cat.aliases": {"name": "cat.aliases", "description": "Shows information about currently configured aliases to indices including filter and routing infos.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html", "stability": "stable", "request": {"$ref": "#/definitions/CatAliasesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatAliasesResponse"}, "urls": [{"path": "/_cat/aliases", "methods": ["GET"]}, {"path": "/_cat/aliases/{name}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.allocation": {"name": "cat.allocation", "description": "Provides a snapshot of how many shards are allocated to each data node and how much disk space they are using.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html", "stability": "stable", "request": {"$ref": "#/definitions/CatAllocationRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatAllocationResponse"}, "urls": [{"path": "/_cat/allocation", "methods": ["GET"]}, {"path": "/_cat/allocation/{node_id}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.count": {"name": "cat.count", "description": "Provides quick access to the document count of the entire cluster, or individual indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html", "stability": "stable", "request": {"$ref": "#/definitions/CatCountRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatCountResponse"}, "urls": [{"path": "/_cat/count", "methods": ["GET"]}, {"path": "/_cat/count/{index}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.fielddata": {"name": "cat.fielddata", "description": "Shows how much heap memory is currently being used by fielddata on every data node in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html", "stability": "stable", "request": {"$ref": "#/definitions/CatFielddataRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatFielddataResponse"}, "urls": [{"path": "/_cat/fielddata", "methods": ["GET"]}, {"path": "/_cat/fielddata/{fields}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.health": {"name": "cat.health", "description": "Returns a concise representation of the cluster health.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html", "stability": "stable", "request": {"$ref": "#/definitions/CatHealthRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatHealthResponse"}, "urls": [{"path": "/_cat/health", "methods": ["GET"]}], "tags": ["cat"]}, "cat.help": {"name": "cat.help", "description": "Returns help for the Cat APIs.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html", "stability": "stable", "request": {"$ref": "#/definitions/CatHelpRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatHelpResponse"}, "urls": [{"path": "/_cat", "methods": ["GET"]}], "tags": ["cat"]}, "cat.indices": {"name": "cat.indices", "description": "Returns information about indices: number of primaries and replicas, document counts, disk size, ...", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html", "stability": "stable", "request": {"$ref": "#/definitions/CatIndicesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatIndicesResponse"}, "urls": [{"path": "/_cat/indices", "methods": ["GET"]}, {"path": "/_cat/indices/{index}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.master": {"name": "cat.master", "description": "Returns information about the master node.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html", "stability": "stable", "request": {"$ref": "#/definitions/CatMasterRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatMasterResponse"}, "urls": [{"path": "/_cat/master", "methods": ["GET"]}], "tags": ["cat"]}, "cat.ml_data_frame_analytics": {"name": "cat.ml_data_frame_analytics", "description": "Gets configuration and usage information about data frame analytics jobs.", "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/cat-dfanalytics.html", "stability": "stable", "request": {"$ref": "#/definitions/CatDataFrameAnalyticsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatDataFrameAnalyticsResponse"}, "urls": [{"path": "/_cat/ml/data_frame/analytics", "methods": ["GET"]}, {"path": "/_cat/ml/data_frame/analytics/{id}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.ml_datafeeds": {"name": "cat.ml_datafeeds", "description": "Gets configuration and usage information about datafeeds.", "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/cat-datafeeds.html", "stability": "stable", "request": {"$ref": "#/definitions/CatDatafeedsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatDatafeedsResponse"}, "urls": [{"path": "/_cat/ml/datafeeds", "methods": ["GET"]}, {"path": "/_cat/ml/datafeeds/{datafeed_id}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.ml_jobs": {"name": "cat.ml_jobs", "description": "Gets configuration and usage information about anomaly detection jobs.", "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/cat-anomaly-detectors.html", "stability": "stable", "request": {"$ref": "#/definitions/CatJobsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatJobsResponse"}, "urls": [{"path": "/_cat/ml/anomaly_detectors", "methods": ["GET"]}, {"path": "/_cat/ml/anomaly_detectors/{job_id}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.ml_trained_models": {"name": "cat.ml_trained_models", "description": "Gets configuration and usage information about inference trained models.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-trained-model.html", "stability": "stable", "request": {"$ref": "#/definitions/CatTrainedModelsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatTrainedModelsResponse"}, "urls": [{"path": "/_cat/ml/trained_models", "methods": ["GET"]}, {"path": "/_cat/ml/trained_models/{model_id}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.nodeattrs": {"name": "cat.nodeattrs", "description": "Returns information about custom node attributes.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html", "stability": "stable", "request": {"$ref": "#/definitions/CatNodeAttributesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatNodeAttributesResponse"}, "urls": [{"path": "/_cat/nodeattrs", "methods": ["GET"]}], "tags": ["cat"]}, "cat.nodes": {"name": "cat.nodes", "description": "Returns basic statistics about performance of cluster nodes.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html", "stability": "stable", "request": {"$ref": "#/definitions/CatNodesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatNodesResponse"}, "urls": [{"path": "/_cat/nodes", "methods": ["GET"]}], "tags": ["cat"]}, "cat.pending_tasks": {"name": "cat.pending_tasks", "description": "Returns a concise representation of the cluster pending tasks.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html", "stability": "stable", "request": {"$ref": "#/definitions/CatPendingTasksRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatPendingTasksResponse"}, "urls": [{"path": "/_cat/pending_tasks", "methods": ["GET"]}], "tags": ["cat"]}, "cat.plugins": {"name": "cat.plugins", "description": "Returns information about installed plugins across nodes node.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html", "stability": "stable", "request": {"$ref": "#/definitions/CatPluginsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatPluginsResponse"}, "urls": [{"path": "/_cat/plugins", "methods": ["GET"]}], "tags": ["cat"]}, "cat.recovery": {"name": "cat.recovery", "description": "Returns information about index shard recoveries, both on-going completed.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html", "stability": "stable", "request": {"$ref": "#/definitions/CatRecoveryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatRecoveryResponse"}, "urls": [{"path": "/_cat/recovery", "methods": ["GET"]}, {"path": "/_cat/recovery/{index}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.repositories": {"name": "cat.repositories", "description": "Returns information about snapshot repositories registered in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html", "stability": "stable", "request": {"$ref": "#/definitions/CatRepositoriesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatRepositoriesResponse"}, "urls": [{"path": "/_cat/repositories", "methods": ["GET"]}], "tags": ["cat"]}, "cat.segments": {"name": "cat.segments", "description": "Provides low-level information about the segments in the shards of an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html", "stability": "stable", "request": {"$ref": "#/definitions/CatSegmentsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatSegmentsResponse"}, "urls": [{"path": "/_cat/segments", "methods": ["GET"]}, {"path": "/_cat/segments/{index}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.shards": {"name": "cat.shards", "description": "Provides a detailed view of shard allocation on nodes.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html", "stability": "stable", "request": {"$ref": "#/definitions/CatShardsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatShardsResponse"}, "urls": [{"path": "/_cat/shards", "methods": ["GET"]}, {"path": "/_cat/shards/{index}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.snapshots": {"name": "cat.snapshots", "description": "Returns all snapshots in a specific repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/CatSnapshotsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatSnapshotsResponse"}, "urls": [{"path": "/_cat/snapshots", "methods": ["GET"]}, {"path": "/_cat/snapshots/{repository}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.tasks": {"name": "cat.tasks", "description": "Returns information about the tasks currently executing on one or more nodes in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html", "stability": "stable", "request": {"$ref": "#/definitions/CatTasksRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatTasksResponse"}, "urls": [{"path": "/_cat/tasks", "methods": ["GET"]}], "tags": ["cat"]}, "cat.templates": {"name": "cat.templates", "description": "Returns information about existing templates.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html", "stability": "stable", "request": {"$ref": "#/definitions/CatTemplatesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatTemplatesResponse"}, "urls": [{"path": "/_cat/templates", "methods": ["GET"]}, {"path": "/_cat/templates/{name}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.thread_pool": {"name": "cat.thread_pool", "description": "Returns cluster-wide thread pool statistics per node.\nBy default the active, queue and rejected statistics are returned for all thread pools.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html", "stability": "stable", "request": {"$ref": "#/definitions/CatThreadPoolRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatThreadPoolResponse"}, "urls": [{"path": "/_cat/thread_pool", "methods": ["GET"]}, {"path": "/_cat/thread_pool/{thread_pool_patterns}", "methods": ["GET"]}], "tags": ["cat"]}, "cat.transforms": {"name": "cat.transforms", "description": "Gets configuration and usage information about transforms.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-transforms.html", "stability": "stable", "request": {"$ref": "#/definitions/CatTransformsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CatTransformsResponse"}, "urls": [{"path": "/_cat/transforms", "methods": ["GET"]}, {"path": "/_cat/transforms/{transform_id}", "methods": ["GET"]}], "tags": ["cat"]}, "ccr.delete_auto_follow_pattern": {"name": "ccr.delete_auto_follow_pattern", "description": "Deletes auto-follow patterns.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteAutoFollowPatternRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteAutoFollowPatternResponse"}, "urls": [{"path": "/_ccr/auto_follow/{name}", "methods": ["DELETE"]}], "tags": ["ccr"]}, "ccr.follow": {"name": "ccr.follow", "description": "Creates a new follower index configured to follow the referenced leader index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateFollowIndexRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/CreateFollowIndexResponse"}, "urls": [{"path": "/{index}/_ccr/follow", "methods": ["PUT"]}], "tags": ["ccr"]}, "ccr.follow_info": {"name": "ccr.follow_info", "description": "Retrieves information about all follower indices, including parameters and status for each follower index", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html", "stability": "stable", "request": {"$ref": "#/definitions/FollowInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/FollowInfoResponse"}, "urls": [{"path": "/{index}/_ccr/info", "methods": ["GET"]}], "tags": ["ccr"]}, "ccr.follow_stats": {"name": "ccr.follow_stats", "description": "Retrieves follower stats. return shard-level stats about the following tasks associated with each shard for the specified indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/FollowIndexStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/FollowIndexStatsResponse"}, "urls": [{"path": "/{index}/_ccr/stats", "methods": ["GET"]}], "tags": ["ccr"]}, "ccr.forget_follower": {"name": "ccr.forget_follower", "description": "Removes the follower retention leases from the leader.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-forget-follower.html", "stability": "stable", "request": {"$ref": "#/definitions/ForgetFollowerIndexRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ForgetFollowerIndexResponse"}, "urls": [{"path": "/{index}/_ccr/forget_follower", "methods": ["POST"]}], "tags": ["ccr"]}, "ccr.get_auto_follow_pattern": {"name": "ccr.get_auto_follow_pattern", "description": "Gets configured auto-follow patterns. Returns the specified auto-follow pattern collection.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html", "stability": "stable", "request": {"$ref": "#/definitions/GetAutoFollowPatternRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetAutoFollowPatternResponse"}, "urls": [{"path": "/_ccr/auto_follow", "methods": ["GET"]}, {"path": "/_ccr/auto_follow/{name}", "methods": ["GET"]}], "tags": ["ccr"]}, "ccr.pause_auto_follow_pattern": {"name": "ccr.pause_auto_follow_pattern", "description": "Pauses an auto-follow pattern", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-auto-follow-pattern.html", "stability": "stable", "request": {"$ref": "#/definitions/PauseAutoFollowPatternRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PauseAutoFollowPatternResponse"}, "urls": [{"path": "/_ccr/auto_follow/{name}/pause", "methods": ["POST"]}], "tags": ["ccr"]}, "ccr.pause_follow": {"name": "ccr.pause_follow", "description": "Pauses a follower index. The follower index will not fetch any additional operations from the leader index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html", "stability": "stable", "request": {"$ref": "#/definitions/PauseFollowIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PauseFollowIndexResponse"}, "urls": [{"path": "/{index}/_ccr/pause_follow", "methods": ["POST"]}], "tags": ["ccr"]}, "ccr.put_auto_follow_pattern": {"name": "ccr.put_auto_follow_pattern", "description": "Creates a new named collection of auto-follow patterns against a specified remote cluster. Newly created indices on the remote cluster matching any of the specified patterns will be automatically configured as follower indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateAutoFollowPatternRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/CreateAutoFollowPatternResponse"}, "urls": [{"path": "/_ccr/auto_follow/{name}", "methods": ["PUT"]}], "tags": ["ccr"]}, "ccr.resume_auto_follow_pattern": {"name": "ccr.resume_auto_follow_pattern", "description": "Resumes an auto-follow pattern that has been paused", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-auto-follow-pattern.html", "stability": "stable", "request": {"$ref": "#/definitions/ResumeAutoFollowPatternRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ResumeAutoFollowPatternResponse"}, "urls": [{"path": "/_ccr/auto_follow/{name}/resume", "methods": ["POST"]}], "tags": ["ccr"]}, "ccr.resume_follow": {"name": "ccr.resume_follow", "description": "Resumes a follower index that has been paused", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html", "stability": "stable", "request": {"$ref": "#/definitions/ResumeFollowIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ResumeFollowIndexResponse"}, "urls": [{"path": "/{index}/_ccr/resume_follow", "methods": ["POST"]}], "tags": ["ccr"]}, "ccr.stats": {"name": "ccr.stats", "description": "Gets all stats related to cross-cluster replication.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/CcrStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CcrStatsResponse"}, "urls": [{"path": "/_ccr/stats", "methods": ["GET"]}], "tags": ["ccr"]}, "ccr.unfollow": {"name": "ccr.unfollow", "description": "Stops the following task associated with a follower index and removes index metadata and settings associated with cross-cluster replication.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-unfollow.html", "stability": "stable", "request": {"$ref": "#/definitions/UnfollowIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/UnfollowIndexResponse"}, "urls": [{"path": "/{index}/_ccr/unfollow", "methods": ["POST"]}], "tags": ["ccr"]}, "clear_scroll": {"name": "clear_scroll", "description": "Explicitly clears the search context for a scroll.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#_clear_scroll_api", "stability": "stable", "request": {"$ref": "#/definitions/ClearScrollRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClearScrollResponse"}, "urls": [{"path": "/_search/scroll", "methods": ["DELETE"]}, {"path": "/_search/scroll/{scroll_id}", "methods": ["DELETE"], "deprecation": {"version": "7.0.0", "description": "A scroll id can be quite large and should be specified as part of the body"}}]}, "cluster.allocation_explain": {"name": "cluster.allocation_explain", "description": "Provides explanations for shard allocations in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterAllocationExplainRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterAllocationExplainResponse"}, "urls": [{"path": "/_cluster/allocation/explain", "methods": ["GET", "POST"]}], "tags": ["cluster"]}, "cluster.get_settings": {"name": "cluster.get_settings", "description": "Returns cluster settings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterGetSettingsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterGetSettingsResponse"}, "urls": [{"path": "/_cluster/settings", "methods": ["GET"]}], "tags": ["cluster"]}, "cluster.health": {"name": "cluster.health", "description": "Returns basic information about the health of the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterHealthRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterHealthResponse"}, "urls": [{"path": "/_cluster/health", "methods": ["GET"]}, {"path": "/_cluster/health/{index}", "methods": ["GET"]}], "tags": ["cluster"]}, "cluster.pending_tasks": {"name": "cluster.pending_tasks", "description": "Returns a list of any cluster-level changes (e.g. create index, update mapping,\nallocate or fail shard) which have not yet been executed.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterPendingTasksRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterPendingTasksResponse"}, "urls": [{"path": "/_cluster/pending_tasks", "methods": ["GET"]}], "tags": ["cluster"]}, "cluster.put_settings": {"name": "cluster.put_settings", "description": "Updates the cluster settings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterPutSettingsRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ClusterPutSettingsResponse"}, "urls": [{"path": "/_cluster/settings", "methods": ["PUT"]}], "tags": ["cluster"]}, "cluster.remote_info": {"name": "cluster.remote_info", "description": "Returns the information about configured remote clusters.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html", "stability": "stable", "request": {"$ref": "#/definitions/RemoteInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RemoteInfoResponse"}, "urls": [{"path": "/_remote/info", "methods": ["GET"]}], "tags": ["cluster"]}, "cluster.reroute": {"name": "cluster.reroute", "description": "Allows to manually change the allocation of individual shards in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterRerouteRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterRerouteResponse"}, "urls": [{"path": "/_cluster/reroute", "methods": ["POST"]}], "tags": ["cluster"]}, "cluster.state": {"name": "cluster.state", "description": "Returns a comprehensive information about the state of the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterStateRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterStateResponse"}, "urls": [{"path": "/_cluster/state", "methods": ["GET"]}, {"path": "/_cluster/state/{metric}", "methods": ["GET"]}, {"path": "/_cluster/state/{metric}/{index}", "methods": ["GET"]}], "tags": ["cluster"]}, "cluster.stats": {"name": "cluster.stats", "description": "Returns high-level overview of cluster statistics.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/ClusterStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClusterStatsResponse"}, "urls": [{"path": "/_cluster/stats", "methods": ["GET"]}, {"path": "/_cluster/stats/nodes/{node_id}", "methods": ["GET"]}], "tags": ["cluster"]}, "count": {"name": "count", "description": "Returns number of documents matching a query.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html", "stability": "stable", "request": {"$ref": "#/definitions/CountRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CountResponse"}, "urls": [{"path": "/_count", "methods": ["POST", "GET"]}, {"path": "/{index}/_count", "methods": ["POST", "GET"]}, {"path": "/{index}/{type}/_count", "methods": ["POST", "GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "create": {"name": "create", "description": "Creates a new document in the index.\n\nReturns a 409 response when a document with a same ID already exists in the index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/CreateResponse"}, "urls": [{"path": "/{index}/_create/{id}", "methods": ["PUT", "POST"]}, {"path": "/{index}/{type}/{id}/_create", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "delete": {"name": "delete", "description": "Removes a document from the index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteResponse"}, "urls": [{"path": "/{index}/_doc/{id}", "methods": ["DELETE"]}, {"path": "/{index}/{type}/{id}", "methods": ["DELETE"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "delete_by_query": {"name": "delete_by_query", "description": "Deletes documents matching the provided query.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteByQueryRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/DeleteByQueryResponse"}, "urls": [{"path": "/{index}/_delete_by_query", "methods": ["POST"]}, {"path": "/{index}/{type}/_delete_by_query", "methods": ["POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "delete_by_query_rethrottle": {"name": "delete_by_query_rethrottle", "description": "Changes the number of requests per second for a particular Delete By Query operation.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteByQueryRethrottleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteByQueryRethrottleResponse"}, "urls": [{"path": "/_delete_by_query/{task_id}/_rethrottle", "methods": ["POST"]}]}, "delete_script": {"name": "delete_script", "description": "Deletes a script.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteScriptRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteScriptResponse"}, "urls": [{"path": "/_scripts/{id}", "methods": ["DELETE"]}]}, "enrich.delete_policy": {"name": "enrich.delete_policy", "description": "Deletes an existing enrich policy and its enrich index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-enrich-policy-api.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteEnrichPolicyRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteEnrichPolicyResponse"}, "urls": [{"path": "/_enrich/policy/{name}", "methods": ["DELETE"]}], "tags": ["enrich"]}, "enrich.execute_policy": {"name": "enrich.execute_policy", "description": "Creates the enrich index for an existing enrich policy.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/execute-enrich-policy-api.html", "stability": "stable", "request": {"$ref": "#/definitions/ExecuteEnrichPolicyRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExecuteEnrichPolicyResponse"}, "urls": [{"path": "/_enrich/policy/{name}/_execute", "methods": ["PUT"]}], "tags": ["enrich"]}, "enrich.get_policy": {"name": "enrich.get_policy", "description": "Gets information about an enrich policy.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-enrich-policy-api.html", "stability": "stable", "request": {"$ref": "#/definitions/GetEnrichPolicyRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetEnrichPolicyResponse"}, "urls": [{"path": "/_enrich/policy/{name}", "methods": ["GET"]}, {"path": "/_enrich/policy/", "methods": ["GET"]}], "tags": ["enrich"]}, "enrich.put_policy": {"name": "enrich.put_policy", "description": "Creates a new enrich policy.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-enrich-policy-api.html", "stability": "stable", "request": {"$ref": "#/definitions/PutEnrichPolicyRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutEnrichPolicyResponse"}, "urls": [{"path": "/_enrich/policy/{name}", "methods": ["PUT"]}], "tags": ["enrich"]}, "enrich.stats": {"name": "enrich.stats", "description": "Gets enrich coordinator statistics and information about enrich policies that are currently executing.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/enrich-stats-api.html", "stability": "stable", "request": {"$ref": "#/definitions/EnrichStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/EnrichStatsResponse"}, "urls": [{"path": "/_enrich/_stats", "methods": ["GET"]}], "tags": ["enrich"]}, "exists": {"name": "exists", "description": "Returns information about whether a document exists in an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html", "stability": "stable", "request": {"$ref": "#/definitions/DocumentExistsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExistsResponse"}, "urls": [{"path": "/{index}/_doc/{id}", "methods": ["HEAD"]}, {"path": "/{index}/{type}/{id}", "methods": ["HEAD"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "exists_source": {"name": "exists_source", "description": "Returns information about whether a document source exists in an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html", "stability": "stable", "request": {"$ref": "#/definitions/SourceExistsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExistsResponse"}, "urls": [{"path": "/{index}/_source/{id}", "methods": ["HEAD"]}, {"path": "/{index}/{type}/{id}/_source", "methods": ["HEAD"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "explain": {"name": "explain", "description": "Returns information about why a specific matches (or doesn't match) a query.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html", "stability": "stable", "request": {"$ref": "#/definitions/ExplainRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExplainResponse"}, "urls": [{"path": "/{index}/_explain/{id}", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/{id}/_explain", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "field_caps": {"name": "field_caps", "description": "Returns the information about the capabilities of fields among multiple indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html", "stability": "stable", "request": {"$ref": "#/definitions/FieldCapabilitiesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/FieldCapabilitiesResponse"}, "urls": [{"path": "/_field_caps", "methods": ["GET", "POST"]}, {"path": "/{index}/_field_caps", "methods": ["GET", "POST"]}]}, "get": {"name": "get", "description": "Returns a document.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetResponse"}, "urls": [{"path": "/{index}/_doc/{id}", "methods": ["GET"]}, {"path": "/{index}/{type}/{id}", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "get_script": {"name": "get_script", "description": "Returns a script.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html", "stability": "stable", "request": {"$ref": "#/definitions/GetScriptRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetScriptResponse"}, "urls": [{"path": "/_scripts/{id}", "methods": ["GET"]}]}, "get_source": {"name": "get_source", "description": "Returns the source of a document.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html", "stability": "stable", "request": {"$ref": "#/definitions/SourceRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SourceResponse"}, "urls": [{"path": "/{index}/_source/{id}", "methods": ["GET"]}, {"path": "/{index}/{type}/{id}/_source", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "graph.explore": {"name": "graph.explore", "description": "Explore extracted and summarized information about the documents and terms in an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html", "stability": "stable", "request": {"$ref": "#/definitions/GraphExploreRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GraphExploreResponse"}, "urls": [{"path": "/{index}/_graph/explore", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_graph/explore", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}], "tags": ["graph"]}, "ilm.delete_lifecycle": {"name": "ilm.delete_lifecycle", "description": "Deletes the specified lifecycle policy definition. A currently used policy cannot be deleted.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteLifecycleResponse"}, "urls": [{"path": "/_ilm/policy/{policy}", "methods": ["DELETE"]}], "tags": ["ilm"]}, "ilm.explain_lifecycle": {"name": "ilm.explain_lifecycle", "description": "Retrieves information about the index's current lifecycle state, such as the currently executing phase, action, and step.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html", "stability": "stable", "request": {"$ref": "#/definitions/ExplainLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExplainLifecycleResponse"}, "urls": [{"path": "/{index}/_ilm/explain", "methods": ["GET"]}], "tags": ["ilm"]}, "ilm.get_lifecycle": {"name": "ilm.get_lifecycle", "description": "Returns the specified policy definition. Includes the policy version and last modified date.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html", "stability": "stable", "request": {"$ref": "#/definitions/GetLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetLifecycleResponse"}, "urls": [{"path": "/_ilm/policy/{policy}", "methods": ["GET"]}, {"path": "/_ilm/policy", "methods": ["GET"]}], "tags": ["ilm"]}, "ilm.get_status": {"name": "ilm.get_status", "description": "Retrieves the current index lifecycle management (ILM) status.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html", "stability": "stable", "request": {"$ref": "#/definitions/GetIlmStatusRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetIlmStatusResponse"}, "urls": [{"path": "/_ilm/status", "methods": ["GET"]}], "tags": ["ilm"]}, "ilm.move_to_step": {"name": "ilm.move_to_step", "description": "Manually moves an index into the specified step and executes that step.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html", "stability": "stable", "request": {"$ref": "#/definitions/MoveToStepRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/MoveToStepResponse"}, "urls": [{"path": "/_ilm/move/{index}", "methods": ["POST"]}], "tags": ["ilm"]}, "ilm.put_lifecycle": {"name": "ilm.put_lifecycle", "description": "Creates a lifecycle policy", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html", "stability": "stable", "request": {"$ref": "#/definitions/PutLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PutLifecycleResponse"}, "urls": [{"path": "/_ilm/policy/{policy}", "methods": ["PUT"]}], "tags": ["ilm"]}, "ilm.remove_policy": {"name": "ilm.remove_policy", "description": "Removes the assigned lifecycle policy and stops managing the specified index", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html", "stability": "stable", "request": {"$ref": "#/definitions/RemovePolicyRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RemovePolicyResponse"}, "urls": [{"path": "/{index}/_ilm/remove", "methods": ["POST"]}], "tags": ["ilm"]}, "ilm.retry": {"name": "ilm.retry", "description": "Retries executing the policy for an index that is in the ERROR step.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html", "stability": "stable", "request": {"$ref": "#/definitions/RetryIlmRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RetryIlmResponse"}, "urls": [{"path": "/{index}/_ilm/retry", "methods": ["POST"]}], "tags": ["ilm"]}, "ilm.start": {"name": "ilm.start", "description": "Start the index lifecycle management (ILM) plugin.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html", "stability": "stable", "request": {"$ref": "#/definitions/StartIlmRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartIlmResponse"}, "urls": [{"path": "/_ilm/start", "methods": ["POST"]}], "tags": ["ilm"]}, "ilm.stop": {"name": "ilm.stop", "description": "Halts all lifecycle management operations and stops the index lifecycle management (ILM) plugin", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html", "stability": "stable", "request": {"$ref": "#/definitions/StopIlmRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StopIlmResponse"}, "urls": [{"path": "/_ilm/stop", "methods": ["POST"]}], "tags": ["ilm"]}, "index": {"name": "index", "description": "Creates or updates a document in an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html", "stability": "stable", "request": {"$ref": "#/definitions/IndexRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/IndexResponse"}, "urls": [{"path": "/{index}/_doc/{id}", "methods": ["PUT", "POST"]}, {"path": "/{index}/_doc", "methods": ["POST"]}, {"path": "/{index}/{type}", "methods": ["POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/{type}/{id}", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "indices.analyze": {"name": "indices.analyze", "description": "Performs the analysis process on a text and return the tokens breakdown of the text.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html", "stability": "stable", "request": {"$ref": "#/definitions/AnalyzeRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/AnalyzeResponse"}, "urls": [{"path": "/_analyze", "methods": ["GET", "POST"]}, {"path": "/{index}/_analyze", "methods": ["GET", "POST"]}], "tags": ["indices"]}, "indices.clear_cache": {"name": "indices.clear_cache", "description": "Clears all or specific caches for one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html", "stability": "stable", "request": {"$ref": "#/definitions/ClearCacheRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClearCacheResponse"}, "urls": [{"path": "/_cache/clear", "methods": ["POST"]}, {"path": "/{index}/_cache/clear", "methods": ["POST"]}], "tags": ["indices"]}, "indices.clone": {"name": "indices.clone", "description": "Clones an index", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clone-index.html", "stability": "stable", "request": {"$ref": "#/definitions/CloneIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CloneIndexResponse"}, "urls": [{"path": "/{index}/_clone/{target}", "methods": ["PUT", "POST"]}], "tags": ["indices"]}, "indices.close": {"name": "indices.close", "description": "Closes an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html", "stability": "stable", "request": {"$ref": "#/definitions/CloseIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CloseIndexResponse"}, "urls": [{"path": "/{index}/_close", "methods": ["POST"]}], "tags": ["indices"]}, "indices.create": {"name": "indices.create", "description": "Creates an index with optional settings and mappings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CreateIndexResponse"}, "urls": [{"path": "/{index}", "methods": ["PUT"]}], "tags": ["indices"]}, "indices.delete": {"name": "indices.delete", "description": "Deletes an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteIndexResponse"}, "urls": [{"path": "/{index}", "methods": ["DELETE"]}], "tags": ["indices"]}, "indices.delete_alias": {"name": "indices.delete_alias", "description": "Deletes an alias.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteAliasRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteAliasResponse"}, "urls": [{"path": "/{index}/_alias/{name}", "methods": ["DELETE"]}, {"path": "/{index}/_aliases/{name}", "methods": ["DELETE"]}], "tags": ["indices"]}, "indices.delete_template": {"name": "indices.delete_template", "description": "Deletes an index template.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteIndexTemplateRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteIndexTemplateResponse"}, "urls": [{"path": "/_template/{name}", "methods": ["DELETE"]}], "tags": ["indices"]}, "indices.exists": {"name": "indices.exists", "description": "Returns information about whether a particular index exists.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html", "stability": "stable", "request": {"$ref": "#/definitions/IndexExistsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExistsResponse"}, "urls": [{"path": "/{index}", "methods": ["HEAD"]}], "tags": ["indices"]}, "indices.exists_alias": {"name": "indices.exists_alias", "description": "Returns information about whether a particular alias exists.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html", "stability": "stable", "request": {"$ref": "#/definitions/AliasExistsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExistsResponse"}, "urls": [{"path": "/_alias/{name}", "methods": ["HEAD"]}, {"path": "/{index}/_alias/{name}", "methods": ["HEAD"]}], "tags": ["indices"]}, "indices.exists_template": {"name": "indices.exists_template", "description": "Returns information about whether a particular index template exists.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html", "stability": "stable", "request": {"$ref": "#/definitions/IndexTemplateExistsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExistsResponse"}, "urls": [{"path": "/_template/{name}", "methods": ["HEAD"]}], "tags": ["indices"]}, "indices.exists_type": {"name": "indices.exists_type", "description": "Returns information about whether a particular document type exists. (DEPRECATED)", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html", "stability": "stable", "request": {"$ref": "#/definitions/TypeExistsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExistsResponse"}, "urls": [{"path": "/{index}/_mapping/{type}", "methods": ["HEAD"]}], "tags": ["indices"]}, "indices.flush": {"name": "indices.flush", "description": "Performs the flush operation on one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html", "stability": "stable", "request": {"$ref": "#/definitions/FlushRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/FlushResponse"}, "urls": [{"path": "/_flush", "methods": ["POST", "GET"]}, {"path": "/{index}/_flush", "methods": ["POST", "GET"]}], "tags": ["indices"]}, "indices.flush_synced": {"name": "indices.flush_synced", "description": "Performs a synced flush operation on one or more indices. Synced flush is deprecated and will be removed in 8.0. Use flush instead", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush-api.html", "stability": "stable", "request": {"$ref": "#/definitions/SyncedFlushRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SyncedFlushResponse"}, "urls": [{"path": "/_flush/synced", "methods": ["POST", "GET"]}, {"path": "/{index}/_flush/synced", "methods": ["POST", "GET"]}], "tags": ["indices"]}, "indices.forcemerge": {"name": "indices.forcemerge", "description": "Performs the force merge operation on one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html", "stability": "stable", "request": {"$ref": "#/definitions/ForceMergeRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ForceMergeResponse"}, "urls": [{"path": "/_forcemerge", "methods": ["POST"]}, {"path": "/{index}/_forcemerge", "methods": ["POST"]}], "tags": ["indices"]}, "indices.freeze": {"name": "indices.freeze", "description": "Freezes an index. A frozen index has almost no overhead on the cluster (except for maintaining its metadata in memory) and is read-only.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/freeze-index-api.html", "stability": "stable", "request": {"$ref": "#/definitions/FreezeIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/FreezeIndexResponse"}, "urls": [{"path": "/{index}/_freeze", "methods": ["POST"]}], "tags": ["indices"]}, "indices.get": {"name": "indices.get", "description": "Returns information about one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html", "stability": "stable", "request": {"$ref": "#/definitions/GetIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetIndexResponse"}, "urls": [{"path": "/{index}", "methods": ["GET"]}], "tags": ["indices"]}, "indices.get_alias": {"name": "indices.get_alias", "description": "Returns an alias.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html", "stability": "stable", "request": {"$ref": "#/definitions/GetAliasRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetAliasResponse"}, "urls": [{"path": "/_alias", "methods": ["GET"]}, {"path": "/_alias/{name}", "methods": ["GET"]}, {"path": "/{index}/_alias/{name}", "methods": ["GET"]}, {"path": "/{index}/_alias", "methods": ["GET"]}], "tags": ["indices"]}, "indices.get_field_mapping": {"name": "indices.get_field_mapping", "description": "Returns mapping for one or more fields.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html", "stability": "stable", "request": {"$ref": "#/definitions/GetFieldMappingRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetFieldMappingResponse"}, "urls": [{"path": "/_mapping/field/{fields}", "methods": ["GET"]}, {"path": "/{index}/_mapping/field/{fields}", "methods": ["GET"]}, {"path": "/_mapping/{type}/field/{fields}", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/_mapping/{type}/field/{fields}", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}], "tags": ["indices"]}, "indices.get_mapping": {"name": "indices.get_mapping", "description": "Returns mappings for one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html", "stability": "stable", "request": {"$ref": "#/definitions/GetMappingRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetMappingResponse"}, "urls": [{"path": "/_mapping", "methods": ["GET"]}, {"path": "/{index}/_mapping", "methods": ["GET"]}, {"path": "/_mapping/{type}", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/_mapping/{type}", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}], "tags": ["indices"]}, "indices.get_settings": {"name": "indices.get_settings", "description": "Returns settings for one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html", "stability": "stable", "request": {"$ref": "#/definitions/GetIndexSettingsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetIndexSettingsResponse"}, "urls": [{"path": "/_settings", "methods": ["GET"]}, {"path": "/{index}/_settings", "methods": ["GET"]}, {"path": "/{index}/_settings/{name}", "methods": ["GET"]}, {"path": "/_settings/{name}", "methods": ["GET"]}], "tags": ["indices"]}, "indices.get_template": {"name": "indices.get_template", "description": "Returns an index template.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html", "stability": "stable", "request": {"$ref": "#/definitions/GetIndexTemplateRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetIndexTemplateResponse"}, "urls": [{"path": "/_template", "methods": ["GET"]}, {"path": "/_template/{name}", "methods": ["GET"]}], "tags": ["indices"]}, "indices.open": {"name": "indices.open", "description": "Opens an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html", "stability": "stable", "request": {"$ref": "#/definitions/OpenIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/OpenIndexResponse"}, "urls": [{"path": "/{index}/_open", "methods": ["POST"]}], "tags": ["indices"]}, "indices.put_alias": {"name": "indices.put_alias", "description": "Creates or updates an alias.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html", "stability": "stable", "request": {"$ref": "#/definitions/PutAliasRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PutAliasResponse"}, "urls": [{"path": "/{index}/_alias/{name}", "methods": ["PUT", "POST"]}, {"path": "/{index}/_aliases/{name}", "methods": ["PUT", "POST"]}], "tags": ["indices"]}, "indices.put_mapping": {"name": "indices.put_mapping", "description": "Updates the index mappings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html", "stability": "stable", "request": {"$ref": "#/definitions/PutMappingRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutMappingResponse"}, "urls": [{"path": "/{index}/_mapping", "methods": ["PUT", "POST"]}, {"path": "/{index}/{type}/_mapping", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/_mapping/{type}", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/{type}/_mappings", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/_mappings/{type}", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/_mappings/{type}", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/_mappings", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "The plural mappings is accepted but only /_mapping is documented"}}, {"path": "/_mapping/{type}", "methods": ["PUT", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}], "tags": ["indices"]}, "indices.put_settings": {"name": "indices.put_settings", "description": "Updates the index settings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateIndexSettingsRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateIndexSettingsResponse"}, "urls": [{"path": "/_settings", "methods": ["PUT"]}, {"path": "/{index}/_settings", "methods": ["PUT"]}], "tags": ["indices"]}, "indices.put_template": {"name": "indices.put_template", "description": "Creates or updates an index template.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html", "stability": "stable", "request": {"$ref": "#/definitions/PutIndexTemplateRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutIndexTemplateResponse"}, "urls": [{"path": "/_template/{name}", "methods": ["PUT", "POST"]}], "tags": ["indices"]}, "indices.recovery": {"name": "indices.recovery", "description": "Returns information about ongoing index shard recoveries.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html", "stability": "stable", "request": {"$ref": "#/definitions/RecoveryStatusRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RecoveryStatusResponse"}, "urls": [{"path": "/_recovery", "methods": ["GET"]}, {"path": "/{index}/_recovery", "methods": ["GET"]}], "tags": ["indices"]}, "indices.refresh": {"name": "indices.refresh", "description": "Performs the refresh operation in one or more indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html", "stability": "stable", "request": {"$ref": "#/definitions/RefreshRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RefreshResponse"}, "urls": [{"path": "/_refresh", "methods": ["POST", "GET"]}, {"path": "/{index}/_refresh", "methods": ["POST", "GET"]}], "tags": ["indices"]}, "indices.reload_search_analyzers": {"name": "indices.reload_search_analyzers", "description": "Reloads an index's search analyzers and their resources.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-reload-analyzers.html", "stability": "stable", "request": {"$ref": "#/definitions/ReloadSearchAnalyzersRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ReloadSearchAnalyzersResponse"}, "urls": [{"path": "/{index}/_reload_search_analyzers", "methods": ["GET", "POST"]}], "tags": ["indices"]}, "indices.rollover": {"name": "indices.rollover", "description": "Updates an alias to point to a new index when the existing index\nis considered to be too large or too old.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html", "stability": "stable", "request": {"$ref": "#/definitions/RolloverIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RolloverIndexResponse"}, "urls": [{"path": "/{alias}/_rollover", "methods": ["POST"]}, {"path": "/{alias}/_rollover/{new_index}", "methods": ["POST"]}], "tags": ["indices"]}, "indices.segments": {"name": "indices.segments", "description": "Provides low-level information about segments in a Lucene index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html", "stability": "stable", "request": {"$ref": "#/definitions/SegmentsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SegmentsResponse"}, "urls": [{"path": "/_segments", "methods": ["GET"]}, {"path": "/{index}/_segments", "methods": ["GET"]}], "tags": ["indices"]}, "indices.shard_stores": {"name": "indices.shard_stores", "description": "Provides store information for shard copies of indices.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html", "stability": "stable", "request": {"$ref": "#/definitions/IndicesShardStoresRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/IndicesShardStoresResponse"}, "urls": [{"path": "/_shard_stores", "methods": ["GET"]}, {"path": "/{index}/_shard_stores", "methods": ["GET"]}], "tags": ["indices"]}, "indices.shrink": {"name": "indices.shrink", "description": "Allow to shrink an existing index into a new index with fewer primary shards.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html", "stability": "stable", "request": {"$ref": "#/definitions/ShrinkIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ShrinkIndexResponse"}, "urls": [{"path": "/{index}/_shrink/{target}", "methods": ["PUT", "POST"]}], "tags": ["indices"]}, "indices.split": {"name": "indices.split", "description": "Allows you to split an existing index into a new index with more primary shards.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html", "stability": "stable", "request": {"$ref": "#/definitions/SplitIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SplitIndexResponse"}, "urls": [{"path": "/{index}/_split/{target}", "methods": ["PUT", "POST"]}], "tags": ["indices"]}, "indices.stats": {"name": "indices.stats", "description": "Provides statistics on operations happening in an index.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/IndicesStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/IndicesStatsResponse"}, "urls": [{"path": "/_stats", "methods": ["GET"]}, {"path": "/_stats/{metric}", "methods": ["GET"]}, {"path": "/{index}/_stats", "methods": ["GET"]}, {"path": "/{index}/_stats/{metric}", "methods": ["GET"]}], "tags": ["indices"]}, "indices.unfreeze": {"name": "indices.unfreeze", "description": "Unfreezes an index. When a frozen index is unfrozen, the index goes through the normal recovery process and becomes writeable again.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/unfreeze-index-api.html", "stability": "stable", "request": {"$ref": "#/definitions/UnfreezeIndexRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/UnfreezeIndexResponse"}, "urls": [{"path": "/{index}/_unfreeze", "methods": ["POST"]}], "tags": ["indices"]}, "indices.update_aliases": {"name": "indices.update_aliases", "description": "Updates index aliases.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html", "stability": "stable", "request": {"$ref": "#/definitions/BulkAliasRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/BulkAliasResponse"}, "urls": [{"path": "/_aliases", "methods": ["POST"]}], "tags": ["indices"]}, "indices.validate_query": {"name": "indices.validate_query", "description": "Allows a user to validate a potentially expensive query without executing it.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html", "stability": "stable", "request": {"$ref": "#/definitions/ValidateQueryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ValidateQueryResponse"}, "urls": [{"path": "/_validate/query", "methods": ["GET", "POST"]}, {"path": "/{index}/_validate/query", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_validate/query", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}], "tags": ["indices"]}, "info": {"name": "info", "description": "Returns basic information about the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html", "stability": "stable", "request": {"$ref": "#/definitions/RootNodeInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RootNodeInfoResponse"}, "urls": [{"path": "/", "methods": ["GET"]}]}, "ingest.delete_pipeline": {"name": "ingest.delete_pipeline", "description": "Deletes a pipeline.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html", "stability": "stable", "request": {"$ref": "#/definitions/DeletePipelineRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeletePipelineResponse"}, "urls": [{"path": "/_ingest/pipeline/{id}", "methods": ["DELETE"]}], "tags": ["ingest"]}, "ingest.get_pipeline": {"name": "ingest.get_pipeline", "description": "Returns a pipeline.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html", "stability": "stable", "request": {"$ref": "#/definitions/GetPipelineRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetPipelineResponse"}, "urls": [{"path": "/_ingest/pipeline", "methods": ["GET"]}, {"path": "/_ingest/pipeline/{id}", "methods": ["GET"]}], "tags": ["ingest"]}, "ingest.processor_grok": {"name": "ingest.processor_grok", "description": "Returns a list of the built-in patterns.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get", "stability": "stable", "request": {"$ref": "#/definitions/GrokProcessorPatternsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GrokProcessorPatternsResponse"}, "urls": [{"path": "/_ingest/processor/grok", "methods": ["GET"]}], "tags": ["ingest"]}, "ingest.put_pipeline": {"name": "ingest.put_pipeline", "description": "Creates or updates a pipeline.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html", "stability": "stable", "request": {"$ref": "#/definitions/PutPipelineRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutPipelineResponse"}, "urls": [{"path": "/_ingest/pipeline/{id}", "methods": ["PUT"]}], "tags": ["ingest"]}, "ingest.simulate": {"name": "ingest.simulate", "description": "Allows to simulate a pipeline with example documents.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html", "stability": "stable", "request": {"$ref": "#/definitions/SimulatePipelineRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/SimulatePipelineResponse"}, "urls": [{"path": "/_ingest/pipeline/_simulate", "methods": ["GET", "POST"]}, {"path": "/_ingest/pipeline/{id}/_simulate", "methods": ["GET", "POST"]}], "tags": ["ingest"]}, "license.delete": {"name": "license.delete", "description": "Deletes licensing information for the cluster", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteLicenseRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteLicenseResponse"}, "urls": [{"path": "/_license", "methods": ["DELETE"]}], "tags": ["license"]}, "license.get": {"name": "license.get", "description": "Retrieves licensing information for the cluster", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html", "stability": "stable", "request": {"$ref": "#/definitions/GetLicenseRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetLicenseResponse"}, "urls": [{"path": "/_license", "methods": ["GET"]}], "tags": ["license"]}, "license.get_basic_status": {"name": "license.get_basic_status", "description": "Retrieves information about the status of the basic license.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html", "stability": "stable", "request": {"$ref": "#/definitions/GetBasicLicenseStatusRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetBasicLicenseStatusResponse"}, "urls": [{"path": "/_license/basic_status", "methods": ["GET"]}], "tags": ["license"]}, "license.get_trial_status": {"name": "license.get_trial_status", "description": "Retrieves information about the status of the trial license.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html", "stability": "stable", "request": {"$ref": "#/definitions/GetTrialLicenseStatusRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetTrialLicenseStatusResponse"}, "urls": [{"path": "/_license/trial_status", "methods": ["GET"]}], "tags": ["license"]}, "license.post": {"name": "license.post", "description": "Updates the license for the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html", "stability": "stable", "request": {"$ref": "#/definitions/PostLicenseRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PostLicenseResponse"}, "urls": [{"path": "/_license", "methods": ["PUT", "POST"]}], "tags": ["license"]}, "license.post_start_basic": {"name": "license.post_start_basic", "description": "Starts an indefinite basic license.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html", "stability": "stable", "request": {"$ref": "#/definitions/StartBasicLicenseRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartBasicLicenseResponse"}, "urls": [{"path": "/_license/start_basic", "methods": ["POST"]}], "tags": ["license"]}, "license.post_start_trial": {"name": "license.post_start_trial", "description": "starts a limited time trial license.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html", "stability": "stable", "request": {"$ref": "#/definitions/StartTrialLicenseRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartTrialLicenseResponse"}, "urls": [{"path": "/_license/start_trial", "methods": ["POST"]}], "tags": ["license"]}, "mget": {"name": "mget", "description": "Allows to get multiple documents in one request.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html", "stability": "stable", "request": {"$ref": "#/definitions/MultiGetRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/MultiGetResponse"}, "urls": [{"path": "/_mget", "methods": ["GET", "POST"]}, {"path": "/{index}/_mget", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_mget", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "migration.deprecations": {"name": "migration.deprecations", "description": "Retrieves information about different cluster, node, and index level settings that use deprecated features that will be removed or changed in the next major version.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html", "stability": "stable", "request": {"$ref": "#/definitions/DeprecationInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeprecationInfoResponse"}, "urls": [{"path": "/_migration/deprecations", "methods": ["GET"]}, {"path": "/{index}/_migration/deprecations", "methods": ["GET"]}], "tags": ["migration"]}, "ml.close_job": {"name": "ml.close_job", "description": "Closes one or more anomaly detection jobs. A job can be opened and closed multiple times throughout its lifecycle.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html", "stability": "stable", "request": {"$ref": "#/definitions/CloseJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CloseJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_close", "methods": ["POST"]}], "tags": ["ml"]}, "ml.delete_calendar": {"name": "ml.delete_calendar", "description": "Deletes a calendar.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-calendar.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteCalendarRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteCalendarResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_calendar_event": {"name": "ml.delete_calendar_event", "description": "Deletes scheduled events from a calendar.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-calendar-event.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteCalendarEventRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteCalendarEventResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}/events/{event_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_calendar_job": {"name": "ml.delete_calendar_job", "description": "Deletes anomaly detection jobs from a calendar.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-calendar-job.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteCalendarJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteCalendarJobResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}/jobs/{job_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_datafeed": {"name": "ml.delete_datafeed", "description": "Deletes an existing datafeed.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteDatafeedRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteDatafeedResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_expired_data": {"name": "ml.delete_expired_data", "description": "Deletes expired and unused machine learning data.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-expired-data.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteExpiredDataRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteExpiredDataResponse"}, "urls": [{"path": "/_ml/_delete_expired_data", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_filter": {"name": "ml.delete_filter", "description": "Deletes a filter.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-filter.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteFilterRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteFilterResponse"}, "urls": [{"path": "/_ml/filters/{filter_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_forecast": {"name": "ml.delete_forecast", "description": "Deletes forecasts from a machine learning job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteForecastRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteForecastResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_forecast", "methods": ["DELETE"]}, {"path": "/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_job": {"name": "ml.delete_job", "description": "Deletes an existing anomaly detection job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.delete_model_snapshot": {"name": "ml.delete_model_snapshot", "description": "Deletes an existing model snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteModelSnapshotRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteModelSnapshotResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}", "methods": ["DELETE"]}], "tags": ["ml"]}, "ml.estimate_model_memory": {"name": "ml.estimate_model_memory", "description": "Estimates the model memory", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-apis.html", "stability": "stable", "request": {"$ref": "#/definitions/EstimateModelMemoryRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/EstimateModelMemoryResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/_estimate_model_memory", "methods": ["POST"]}], "tags": ["ml"]}, "ml.flush_job": {"name": "ml.flush_job", "description": "Forces any buffered data to be processed by the job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html", "stability": "stable", "request": {"$ref": "#/definitions/FlushJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/FlushJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_flush", "methods": ["POST"]}], "tags": ["ml"]}, "ml.forecast": {"name": "ml.forecast", "description": "Predicts the future behavior of a time series by using its historical behavior.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-forecast.html", "stability": "stable", "request": {"$ref": "#/definitions/ForecastJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ForecastJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_forecast", "methods": ["POST"]}], "tags": ["ml"]}, "ml.get_buckets": {"name": "ml.get_buckets", "description": "Retrieves anomaly detection job results for one or more buckets.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html", "stability": "stable", "request": {"$ref": "#/definitions/GetBucketsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetBucketsResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}", "methods": ["GET", "POST"]}, {"path": "/_ml/anomaly_detectors/{job_id}/results/buckets", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.get_calendar_events": {"name": "ml.get_calendar_events", "description": "Retrieves information about the scheduled events in calendars.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-calendar-event.html", "stability": "stable", "request": {"$ref": "#/definitions/GetCalendarEventsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetCalendarEventsResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}/events", "methods": ["GET"]}], "tags": ["ml"]}, "ml.get_calendars": {"name": "ml.get_calendars", "description": "Retrieves configuration information for calendars.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-calendar.html", "stability": "stable", "request": {"$ref": "#/definitions/GetCalendarsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetCalendarsResponse"}, "urls": [{"path": "/_ml/calendars", "methods": ["GET", "POST"]}, {"path": "/_ml/calendars/{calendar_id}", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.get_categories": {"name": "ml.get_categories", "description": "Retrieves anomaly detection job results for one or more categories.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html", "stability": "stable", "request": {"$ref": "#/definitions/GetCategoriesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetCategoriesResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}", "methods": ["GET", "POST"]}, {"path": "/_ml/anomaly_detectors/{job_id}/results/categories/", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.get_datafeed_stats": {"name": "ml.get_datafeed_stats", "description": "Retrieves usage information for datafeeds.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/GetDatafeedStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetDatafeedStatsResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}/_stats", "methods": ["GET"]}, {"path": "/_ml/datafeeds/_stats", "methods": ["GET"]}], "tags": ["ml"]}, "ml.get_datafeeds": {"name": "ml.get_datafeeds", "description": "Retrieves configuration information for datafeeds.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/GetDatafeedsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetDatafeedsResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}", "methods": ["GET"]}, {"path": "/_ml/datafeeds", "methods": ["GET"]}], "tags": ["ml"]}, "ml.get_filters": {"name": "ml.get_filters", "description": "Retrieves filters.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-filter.html", "stability": "stable", "request": {"$ref": "#/definitions/GetFiltersRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetFiltersResponse"}, "urls": [{"path": "/_ml/filters", "methods": ["GET"]}, {"path": "/_ml/filters/{filter_id}", "methods": ["GET"]}], "tags": ["ml"]}, "ml.get_influencers": {"name": "ml.get_influencers", "description": "Retrieves anomaly detection job results for one or more influencers.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html", "stability": "stable", "request": {"$ref": "#/definitions/GetInfluencersRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetInfluencersResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/results/influencers", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.get_job_stats": {"name": "ml.get_job_stats", "description": "Retrieves usage information for anomaly detection jobs.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/GetJobStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetJobStatsResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/_stats", "methods": ["GET"]}, {"path": "/_ml/anomaly_detectors/{job_id}/_stats", "methods": ["GET"]}], "tags": ["ml"]}, "ml.get_jobs": {"name": "ml.get_jobs", "description": "Retrieves configuration information for anomaly detection jobs.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html", "stability": "stable", "request": {"$ref": "#/definitions/GetJobsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetJobsResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}", "methods": ["GET"]}, {"path": "/_ml/anomaly_detectors", "methods": ["GET"]}], "tags": ["ml"]}, "ml.get_model_snapshots": {"name": "ml.get_model_snapshots", "description": "Retrieves information about model snapshots.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html", "stability": "stable", "request": {"$ref": "#/definitions/GetModelSnapshotsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetModelSnapshotsResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}", "methods": ["GET", "POST"]}, {"path": "/_ml/anomaly_detectors/{job_id}/model_snapshots", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.get_overall_buckets": {"name": "ml.get_overall_buckets", "description": "Retrieves overall bucket results that summarize the bucket results of multiple anomaly detection jobs.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html", "stability": "stable", "request": {"$ref": "#/definitions/GetOverallBucketsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetOverallBucketsResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/results/overall_buckets", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.get_records": {"name": "ml.get_records", "description": "Retrieves anomaly records for an anomaly detection job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html", "stability": "stable", "request": {"$ref": "#/definitions/GetAnomalyRecordsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetAnomalyRecordsResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/results/records", "methods": ["GET", "POST"]}], "tags": ["ml"]}, "ml.info": {"name": "ml.info", "description": "Returns defaults and limits used by machine learning.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-ml-info.html", "stability": "stable", "request": {"$ref": "#/definitions/MachineLearningInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/MachineLearningInfoResponse"}, "urls": [{"path": "/_ml/info", "methods": ["GET"]}], "tags": ["ml"]}, "ml.open_job": {"name": "ml.open_job", "description": "Opens one or more anomaly detection jobs.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html", "stability": "stable", "request": {"$ref": "#/definitions/OpenJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/OpenJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_open", "methods": ["POST"]}], "tags": ["ml"]}, "ml.post_calendar_events": {"name": "ml.post_calendar_events", "description": "Posts scheduled events in a calendar.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-calendar-event.html", "stability": "stable", "request": {"$ref": "#/definitions/PostCalendarEventsRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PostCalendarEventsResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}/events", "methods": ["POST"]}], "tags": ["ml"]}, "ml.post_data": {"name": "ml.post_data", "description": "Sends data to an anomaly detection job for analysis.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html", "stability": "stable", "request": {"$ref": "#/definitions/PostJobDataRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PostJobDataResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_data", "methods": ["POST"]}], "tags": ["ml"]}, "ml.preview_datafeed": {"name": "ml.preview_datafeed", "description": "Previews a datafeed.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/PreviewDatafeedRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PreviewDatafeedResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}/_preview", "methods": ["GET"]}], "tags": ["ml"]}, "ml.put_calendar": {"name": "ml.put_calendar", "description": "Instantiates a calendar.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-calendar.html", "stability": "stable", "request": {"$ref": "#/definitions/PutCalendarRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PutCalendarResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}", "methods": ["PUT"]}], "tags": ["ml"]}, "ml.put_calendar_job": {"name": "ml.put_calendar_job", "description": "Adds an anomaly detection job to a calendar.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-calendar-job.html", "stability": "stable", "request": {"$ref": "#/definitions/PutCalendarJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PutCalendarJobResponse"}, "urls": [{"path": "/_ml/calendars/{calendar_id}/jobs/{job_id}", "methods": ["PUT"]}], "tags": ["ml"]}, "ml.put_datafeed": {"name": "ml.put_datafeed", "description": "Instantiates a datafeed.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/PutDatafeedRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutDatafeedResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}", "methods": ["PUT"]}], "tags": ["ml"]}, "ml.put_filter": {"name": "ml.put_filter", "description": "Instantiates a filter.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-filter.html", "stability": "stable", "request": {"$ref": "#/definitions/PutFilterRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutFilterResponse"}, "urls": [{"path": "/_ml/filters/{filter_id}", "methods": ["PUT"]}], "tags": ["ml"]}, "ml.put_job": {"name": "ml.put_job", "description": "Instantiates an anomaly detection job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html", "stability": "stable", "request": {"$ref": "#/definitions/PutJobRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}", "methods": ["PUT"]}], "tags": ["ml"]}, "ml.revert_model_snapshot": {"name": "ml.revert_model_snapshot", "description": "Reverts to a specific snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html", "stability": "stable", "request": {"$ref": "#/definitions/RevertModelSnapshotRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RevertModelSnapshotResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert", "methods": ["POST"]}], "tags": ["ml"]}, "ml.set_upgrade_mode": {"name": "ml.set_upgrade_mode", "description": "Sets a cluster wide upgrade_mode setting that prepares machine learning indices for an upgrade.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-set-upgrade-mode.html", "stability": "stable", "request": {"$ref": "#/definitions/SetUpgradeModeRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SetUpgradeModeResponse"}, "urls": [{"path": "/_ml/set_upgrade_mode", "methods": ["POST"]}], "tags": ["ml"]}, "ml.start_datafeed": {"name": "ml.start_datafeed", "description": "Starts one or more datafeeds.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/StartDatafeedRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartDatafeedResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}/_start", "methods": ["POST"]}], "tags": ["ml"]}, "ml.stop_datafeed": {"name": "ml.stop_datafeed", "description": "Stops one or more datafeeds.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/StopDatafeedRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StopDatafeedResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}/_stop", "methods": ["POST"]}], "tags": ["ml"]}, "ml.update_datafeed": {"name": "ml.update_datafeed", "description": "Updates certain properties of a datafeed.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateDatafeedRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateDatafeedResponse"}, "urls": [{"path": "/_ml/datafeeds/{datafeed_id}/_update", "methods": ["POST"]}], "tags": ["ml"]}, "ml.update_filter": {"name": "ml.update_filter", "description": "Updates the description of a filter, adds items, or removes items.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-filter.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateFilterRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateFilterResponse"}, "urls": [{"path": "/_ml/filters/{filter_id}/_update", "methods": ["POST"]}], "tags": ["ml"]}, "ml.update_job": {"name": "ml.update_job", "description": "Updates certain properties of an anomaly detection job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateJobRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/_update", "methods": ["POST"]}], "tags": ["ml"]}, "ml.update_model_snapshot": {"name": "ml.update_model_snapshot", "description": "Updates certain properties of a snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateModelSnapshotRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateModelSnapshotResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update", "methods": ["POST"]}], "tags": ["ml"]}, "ml.validate": {"name": "ml.validate", "description": "Validates an anomaly detection job.", "docUrl": "https://www.elastic.co/guide/en/machine-learning/current/ml-jobs.html", "stability": "stable", "request": {"$ref": "#/definitions/ValidateJobRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ValidateJobResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/_validate", "methods": ["POST"]}], "tags": ["ml"]}, "ml.validate_detector": {"name": "ml.validate_detector", "description": "Validates an anomaly detection detector.", "docUrl": "https://www.elastic.co/guide/en/machine-learning/current/ml-jobs.html", "stability": "stable", "request": {"$ref": "#/definitions/ValidateDetectorRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ValidateDetectorResponse"}, "urls": [{"path": "/_ml/anomaly_detectors/_validate/detector", "methods": ["POST"]}], "tags": ["ml"]}, "msearch": {"name": "msearch", "description": "Allows to execute several search operations in one request.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html", "stability": "stable", "request": {"$ref": "#/definitions/MultiSearchRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/MultiSearchResponse"}, "urls": [{"path": "/_msearch", "methods": ["GET", "POST"]}, {"path": "/{index}/_msearch", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_msearch", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "mtermvectors": {"name": "mtermvectors", "description": "Returns multiple termvectors in one request.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html", "stability": "stable", "request": {"$ref": "#/definitions/MultiTermVectorsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/MultiTermVectorsResponse"}, "urls": [{"path": "/_mtermvectors", "methods": ["GET", "POST"]}, {"path": "/{index}/_mtermvectors", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_mtermvectors", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "nodes.hot_threads": {"name": "nodes.hot_threads", "description": "Returns information about hot threads on each node in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html", "stability": "stable", "request": {"$ref": "#/definitions/NodesHotThreadsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/NodesHotThreadsResponse"}, "urls": [{"path": "/_nodes/hot_threads", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/hot_threads", "methods": ["GET"]}, {"path": "/_cluster/nodes/hotthreads", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"}}, {"path": "/_cluster/nodes/{node_id}/hotthreads", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"}}, {"path": "/_nodes/hotthreads", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"}}, {"path": "/_nodes/{node_id}/hotthreads", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"}}, {"path": "/_cluster/nodes/hot_threads", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "The hot accepts /_cluster/nodes as prefix for backwards compatibility reasons"}}, {"path": "/_cluster/nodes/{node_id}/hot_threads", "methods": ["GET"], "deprecation": {"version": "7.0.0", "description": "The hot accepts /_cluster/nodes as prefix for backwards compatibility reasons"}}], "tags": ["nodes"]}, "nodes.info": {"name": "nodes.info", "description": "Returns information about nodes in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html", "stability": "stable", "request": {"$ref": "#/definitions/NodesInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/NodesInfoResponse"}, "urls": [{"path": "/_nodes", "methods": ["GET"]}, {"path": "/_nodes/{node_id}", "methods": ["GET"]}, {"path": "/_nodes/{metric}", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/{metric}", "methods": ["GET"]}], "tags": ["nodes"]}, "nodes.reload_secure_settings": {"name": "nodes.reload_secure_settings", "description": "Reloads secure settings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings", "stability": "stable", "request": {"$ref": "#/definitions/ReloadSecureSettingsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ReloadSecureSettingsResponse"}, "urls": [{"path": "/_nodes/reload_secure_settings", "methods": ["POST"]}, {"path": "/_nodes/{node_id}/reload_secure_settings", "methods": ["POST"]}], "tags": ["nodes"]}, "nodes.stats": {"name": "nodes.stats", "description": "Returns statistical information about nodes in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/NodesStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/NodesStatsResponse"}, "urls": [{"path": "/_nodes/stats", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/stats", "methods": ["GET"]}, {"path": "/_nodes/stats/{metric}", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/stats/{metric}", "methods": ["GET"]}, {"path": "/_nodes/stats/{metric}/{index_metric}", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/stats/{metric}/{index_metric}", "methods": ["GET"]}], "tags": ["nodes"]}, "nodes.usage": {"name": "nodes.usage", "description": "Returns low-level information about REST actions usage on nodes.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html", "stability": "stable", "request": {"$ref": "#/definitions/NodesUsageRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/NodesUsageResponse"}, "urls": [{"path": "/_nodes/usage", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/usage", "methods": ["GET"]}, {"path": "/_nodes/usage/{metric}", "methods": ["GET"]}, {"path": "/_nodes/{node_id}/usage/{metric}", "methods": ["GET"]}], "tags": ["nodes"]}, "ping": {"name": "ping", "description": "Returns whether the cluster is running.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html", "stability": "stable", "request": {"$ref": "#/definitions/PingRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PingResponse"}, "urls": [{"path": "/", "methods": ["HEAD"]}]}, "put_script": {"name": "put_script", "description": "Creates or updates a script.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html", "stability": "stable", "request": {"$ref": "#/definitions/PutScriptRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutScriptResponse"}, "urls": [{"path": "/_scripts/{id}", "methods": ["PUT", "POST"]}, {"path": "/_scripts/{id}/{context}", "methods": ["PUT", "POST"]}]}, "reindex": {"name": "reindex", "description": "Allows to copy documents from one index to another, optionally filtering the source\ndocuments by a query, changing the destination index settings, or fetching the\ndocuments from a remote cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html", "stability": "stable", "request": {"$ref": "#/definitions/ReindexOnServerRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ReindexOnServerResponse"}, "urls": [{"path": "/_reindex", "methods": ["POST"]}]}, "reindex_rethrottle": {"name": "reindex_rethrottle", "description": "Changes the number of requests per second for a particular Reindex operation.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html", "stability": "stable", "request": {"$ref": "#/definitions/ReindexRethrottleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ReindexRethrottleResponse"}, "urls": [{"path": "/_reindex/{task_id}/_rethrottle", "methods": ["POST"]}]}, "render_search_template": {"name": "render_search_template", "description": "Allows to use the Mustache language to pre-render a search definition.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html#_validating_templates", "stability": "stable", "request": {"$ref": "#/definitions/RenderSearchTemplateRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RenderSearchTemplateResponse"}, "urls": [{"path": "/_render/template", "methods": ["GET", "POST"]}, {"path": "/_render/template/{id}", "methods": ["GET", "POST"]}]}, "rollup.delete_job": {"name": "rollup.delete_job", "description": "Deletes an existing rollup job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-delete-job.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteRollupJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteRollupJobResponse"}, "urls": [{"path": "/_rollup/job/{id}", "methods": ["DELETE"]}], "tags": ["rollup"]}, "rollup.get_jobs": {"name": "rollup.get_jobs", "description": "Retrieves the configuration, stats, and status of rollup jobs.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-job.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRollupJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetRollupJobResponse"}, "urls": [{"path": "/_rollup/job/{id}", "methods": ["GET"]}, {"path": "/_rollup/job/", "methods": ["GET"]}], "tags": ["rollup"]}, "rollup.get_rollup_caps": {"name": "rollup.get_rollup_caps", "description": "Returns the capabilities of any rollup jobs that have been configured for a specific index or index pattern.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-caps.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRollupCapabilitiesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetRollupCapabilitiesResponse"}, "urls": [{"path": "/_rollup/data/{id}", "methods": ["GET"]}, {"path": "/_rollup/data/", "methods": ["GET"]}], "tags": ["rollup"]}, "rollup.get_rollup_index_caps": {"name": "rollup.get_rollup_index_caps", "description": "Returns the rollup capabilities of all jobs inside of a rollup index (e.g. the index where rollup data is stored).", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-index-caps.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRollupIndexCapabilitiesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetRollupIndexCapabilitiesResponse"}, "urls": [{"path": "/{index}/_rollup/data", "methods": ["GET"]}], "tags": ["rollup"]}, "rollup.put_job": {"name": "rollup.put_job", "description": "Creates a rollup job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-put-job.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateRollupJobRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/CreateRollupJobResponse"}, "urls": [{"path": "/_rollup/job/{id}", "methods": ["PUT"]}], "tags": ["rollup"]}, "rollup.rollup_search": {"name": "rollup.rollup_search", "description": "Enables searching rolled-up data using the standard query DSL.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-search.html", "stability": "stable", "request": {"$ref": "#/definitions/RollupSearchRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/RollupSearchResponse"}, "urls": [{"path": "/{index}/_rollup_search", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_rollup_search", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}], "tags": ["rollup"]}, "rollup.start_job": {"name": "rollup.start_job", "description": "Starts an existing, stopped rollup job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-start-job.html", "stability": "stable", "request": {"$ref": "#/definitions/StartRollupJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartRollupJobResponse"}, "urls": [{"path": "/_rollup/job/{id}/_start", "methods": ["POST"]}], "tags": ["rollup"]}, "rollup.stop_job": {"name": "rollup.stop_job", "description": "Stops an existing, started rollup job.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-stop-job.html", "stability": "stable", "request": {"$ref": "#/definitions/StopRollupJobRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StopRollupJobResponse"}, "urls": [{"path": "/_rollup/job/{id}/_stop", "methods": ["POST"]}], "tags": ["rollup"]}, "scripts_painless_execute": {"name": "scripts_painless_execute", "description": "Allows an arbitrary script to be executed and a result to be returned", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html", "stability": "stable", "request": {"$ref": "#/definitions/ExecutePainlessScriptRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExecutePainlessScriptResponse"}, "urls": [{"path": "/_scripts/painless/_execute", "methods": ["GET", "POST"]}]}, "search": {"name": "search", "description": "Returns results matching a query.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html", "stability": "stable", "request": {"$ref": "#/definitions/SearchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SearchResponse"}, "urls": [{"path": "/_search", "methods": ["GET", "POST"]}, {"path": "/{index}/_search", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/_search", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "search_shards": {"name": "search_shards", "description": "Returns information about the indices and shards that a search request would be executed against.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html", "stability": "stable", "request": {"$ref": "#/definitions/SearchShardsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SearchShardsResponse"}, "urls": [{"path": "/_search_shards", "methods": ["GET", "POST"]}, {"path": "/{index}/_search_shards", "methods": ["GET", "POST"]}]}, "security.authenticate": {"name": "security.authenticate", "description": "Enables authentication as a user and retrieve information about the authenticated user.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html", "stability": "stable", "request": {"$ref": "#/definitions/AuthenticateRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/AuthenticateResponse"}, "urls": [{"path": "/_security/_authenticate", "methods": ["GET"]}], "tags": ["security"]}, "security.change_password": {"name": "security.change_password", "description": "Changes the passwords of users in the native realm and built-in users.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html", "stability": "stable", "request": {"$ref": "#/definitions/ChangePasswordRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ChangePasswordResponse"}, "urls": [{"path": "/_security/user/{username}/_password", "methods": ["PUT", "POST"]}, {"path": "/_security/user/_password", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.clear_cached_realms": {"name": "security.clear_cached_realms", "description": "Evicts users from the user cache. Can completely clear the cache or evict specific users.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html", "stability": "stable", "request": {"$ref": "#/definitions/ClearCachedRealmsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClearCachedRealmsResponse"}, "urls": [{"path": "/_security/realm/{realms}/_clear_cache", "methods": ["POST"]}], "tags": ["security"]}, "security.clear_cached_roles": {"name": "security.clear_cached_roles", "description": "Evicts roles from the native role cache.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html", "stability": "stable", "request": {"$ref": "#/definitions/ClearCachedRolesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ClearCachedRolesResponse"}, "urls": [{"path": "/_security/role/{name}/_clear_cache", "methods": ["POST"]}], "tags": ["security"]}, "security.create_api_key": {"name": "security.create_api_key", "description": "Creates an API key for access without requiring basic authentication.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateApiKeyRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/CreateApiKeyResponse"}, "urls": [{"path": "/_security/api_key", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.delete_privileges": {"name": "security.delete_privileges", "description": "Removes application privileges.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-privilege.html", "stability": "stable", "request": {"$ref": "#/definitions/DeletePrivilegesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeletePrivilegesResponse"}, "urls": [{"path": "/_security/privilege/{application}/{name}", "methods": ["DELETE"]}], "tags": ["security"]}, "security.delete_role": {"name": "security.delete_role", "description": "Removes roles in the native realm.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteRoleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteRoleResponse"}, "urls": [{"path": "/_security/role/{name}", "methods": ["DELETE"]}], "tags": ["security"]}, "security.delete_role_mapping": {"name": "security.delete_role_mapping", "description": "Removes role mappings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteRoleMappingRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteRoleMappingResponse"}, "urls": [{"path": "/_security/role_mapping/{name}", "methods": ["DELETE"]}], "tags": ["security"]}, "security.delete_user": {"name": "security.delete_user", "description": "Deletes users from the native realm.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteUserRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteUserResponse"}, "urls": [{"path": "/_security/user/{username}", "methods": ["DELETE"]}], "tags": ["security"]}, "security.disable_user": {"name": "security.disable_user", "description": "Disables users in the native realm.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html", "stability": "stable", "request": {"$ref": "#/definitions/DisableUserRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DisableUserResponse"}, "urls": [{"path": "/_security/user/{username}/_disable", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.enable_user": {"name": "security.enable_user", "description": "Enables users in the native realm.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html", "stability": "stable", "request": {"$ref": "#/definitions/EnableUserRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/EnableUserResponse"}, "urls": [{"path": "/_security/user/{username}/_enable", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.get_api_key": {"name": "security.get_api_key", "description": "Retrieves information for one or more API keys.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html", "stability": "stable", "request": {"$ref": "#/definitions/GetApiKeyRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetApiKeyResponse"}, "urls": [{"path": "/_security/api_key", "methods": ["GET"]}], "tags": ["security"]}, "security.get_builtin_privileges": {"name": "security.get_builtin_privileges", "description": "Retrieves the list of cluster privileges and index privileges that are available in this version of Elasticsearch.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-builtin-privileges.html", "stability": "stable", "request": {"$ref": "#/definitions/GetBuiltinPrivilegesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetBuiltinPrivilegesResponse"}, "urls": [{"path": "/_security/privilege/_builtin", "methods": ["GET"]}], "tags": ["security"]}, "security.get_privileges": {"name": "security.get_privileges", "description": "Retrieves application privileges.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html", "stability": "stable", "request": {"$ref": "#/definitions/GetPrivilegesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetPrivilegesResponse"}, "urls": [{"path": "/_security/privilege", "methods": ["GET"]}, {"path": "/_security/privilege/{application}", "methods": ["GET"]}, {"path": "/_security/privilege/{application}/{name}", "methods": ["GET"]}], "tags": ["security"]}, "security.get_role": {"name": "security.get_role", "description": "Retrieves roles in the native realm.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRoleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetRoleResponse"}, "urls": [{"path": "/_security/role/{name}", "methods": ["GET"]}, {"path": "/_security/role", "methods": ["GET"]}], "tags": ["security"]}, "security.get_role_mapping": {"name": "security.get_role_mapping", "description": "Retrieves role mappings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRoleMappingRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetRoleMappingResponse"}, "urls": [{"path": "/_security/role_mapping/{name}", "methods": ["GET"]}, {"path": "/_security/role_mapping", "methods": ["GET"]}], "tags": ["security"]}, "security.get_token": {"name": "security.get_token", "description": "Creates a bearer token for access without requiring basic authentication.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html", "stability": "stable", "request": {"$ref": "#/definitions/GetUserAccessTokenRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/GetUserAccessTokenResponse"}, "urls": [{"path": "/_security/oauth2/token", "methods": ["POST"]}], "tags": ["security"]}, "security.get_user": {"name": "security.get_user", "description": "Retrieves information about users in the native realm and built-in users.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html", "stability": "stable", "request": {"$ref": "#/definitions/GetUserRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetUserResponse"}, "urls": [{"path": "/_security/user/{username}", "methods": ["GET"]}, {"path": "/_security/user", "methods": ["GET"]}], "tags": ["security"]}, "security.get_user_privileges": {"name": "security.get_user_privileges", "description": "Retrieves application privileges.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html", "stability": "stable", "request": {"$ref": "#/definitions/GetUserPrivilegesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetUserPrivilegesResponse"}, "urls": [{"path": "/_security/user/_privileges", "methods": ["GET"]}], "tags": ["security"]}, "security.has_privileges": {"name": "security.has_privileges", "description": "Determines whether the specified user has a specified list of privileges.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html", "stability": "stable", "request": {"$ref": "#/definitions/HasPrivilegesRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/HasPrivilegesResponse"}, "urls": [{"path": "/_security/user/_has_privileges", "methods": ["GET", "POST"]}, {"path": "/_security/user/{user}/_has_privileges", "methods": ["GET", "POST"]}], "tags": ["security"]}, "security.invalidate_api_key": {"name": "security.invalidate_api_key", "description": "Invalidates one or more API keys.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html", "stability": "stable", "request": {"$ref": "#/definitions/InvalidateApiKeyRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/InvalidateApiKeyResponse"}, "urls": [{"path": "/_security/api_key", "methods": ["DELETE"]}], "tags": ["security"]}, "security.invalidate_token": {"name": "security.invalidate_token", "description": "Invalidates one or more access tokens or refresh tokens.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html", "stability": "stable", "request": {"$ref": "#/definitions/InvalidateUserAccessTokenRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/InvalidateUserAccessTokenResponse"}, "urls": [{"path": "/_security/oauth2/token", "methods": ["DELETE"]}], "tags": ["security"]}, "security.put_privileges": {"name": "security.put_privileges", "description": "Adds or updates application privileges.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html", "stability": "stable", "request": {"$ref": "#/definitions/PutPrivilegesRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutPrivilegesResponse"}, "urls": [{"path": "/_security/privilege/", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.put_role": {"name": "security.put_role", "description": "Adds and updates roles in the native realm.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html", "stability": "stable", "request": {"$ref": "#/definitions/PutRoleRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutRoleResponse"}, "urls": [{"path": "/_security/role/{name}", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.put_role_mapping": {"name": "security.put_role_mapping", "description": "Creates and updates role mappings.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html", "stability": "stable", "request": {"$ref": "#/definitions/PutRoleMappingRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutRoleMappingResponse"}, "urls": [{"path": "/_security/role_mapping/{name}", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "security.put_user": {"name": "security.put_user", "description": "Adds and updates users in the native realm. These users are commonly referred to as native users.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html", "stability": "stable", "request": {"$ref": "#/definitions/PutUserRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutUserResponse"}, "urls": [{"path": "/_security/user/{username}", "methods": ["PUT", "POST"]}], "tags": ["security"]}, "slm.delete_lifecycle": {"name": "slm.delete_lifecycle", "description": "Deletes an existing snapshot lifecycle policy.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-delete-policy.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteSnapshotLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteSnapshotLifecycleResponse"}, "urls": [{"path": "/_slm/policy/{policy_id}", "methods": ["DELETE"]}], "tags": ["slm"]}, "slm.execute_lifecycle": {"name": "slm.execute_lifecycle", "description": "Immediately creates a snapshot according to the lifecycle policy, without waiting for the scheduled time.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-execute-lifecycle.html", "stability": "stable", "request": {"$ref": "#/definitions/ExecuteSnapshotLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExecuteSnapshotLifecycleResponse"}, "urls": [{"path": "/_slm/policy/{policy_id}/_execute", "methods": ["PUT"]}], "tags": ["slm"]}, "slm.execute_retention": {"name": "slm.execute_retention", "description": "Deletes any snapshots that are expired according to the policy's retention rules.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-execute-retention.html", "stability": "stable", "request": {"$ref": "#/definitions/ExecuteRetentionRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExecuteRetentionResponse"}, "urls": [{"path": "/_slm/_execute_retention", "methods": ["POST"]}], "tags": ["slm"]}, "slm.get_lifecycle": {"name": "slm.get_lifecycle", "description": "Retrieves one or more snapshot lifecycle policy definitions and information about the latest snapshot attempts.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-get-policy.html", "stability": "stable", "request": {"$ref": "#/definitions/GetSnapshotLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetSnapshotLifecycleResponse"}, "urls": [{"path": "/_slm/policy/{policy_id}", "methods": ["GET"]}, {"path": "/_slm/policy", "methods": ["GET"]}], "tags": ["slm"]}, "slm.get_stats": {"name": "slm.get_stats", "description": "Returns global and policy-level statistics about actions taken by snapshot lifecycle management.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/slm-api-get-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/GetSnapshotLifecycleStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetSnapshotLifecycleStatsResponse"}, "urls": [{"path": "/_slm/stats", "methods": ["GET"]}], "tags": ["slm"]}, "slm.get_status": {"name": "slm.get_status", "description": "Retrieves the status of snapshot lifecycle management (SLM).", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-get-status.html", "stability": "stable", "request": {"$ref": "#/definitions/GetSnapshotLifecycleManagementStatusRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetSnapshotLifecycleManagementStatusResponse"}, "urls": [{"path": "/_slm/status", "methods": ["GET"]}], "tags": ["slm"]}, "slm.put_lifecycle": {"name": "slm.put_lifecycle", "description": "Creates or updates a snapshot lifecycle policy.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-put-policy.html", "stability": "stable", "request": {"$ref": "#/definitions/PutSnapshotLifecycleRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PutSnapshotLifecycleResponse"}, "urls": [{"path": "/_slm/policy/{policy_id}", "methods": ["PUT"]}], "tags": ["slm"]}, "slm.start": {"name": "slm.start", "description": "Turns on snapshot lifecycle management (SLM).", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-start.html", "stability": "stable", "request": {"$ref": "#/definitions/StartSnapshotLifecycleManagementRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartSnapshotLifecycleManagementResponse"}, "urls": [{"path": "/_slm/start", "methods": ["POST"]}], "tags": ["slm"]}, "slm.stop": {"name": "slm.stop", "description": "Turns off snapshot lifecycle management (SLM).", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-stop.html", "stability": "stable", "request": {"$ref": "#/definitions/StopSnapshotLifecycleManagementRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StopSnapshotLifecycleManagementResponse"}, "urls": [{"path": "/_slm/stop", "methods": ["POST"]}], "tags": ["slm"]}, "snapshot.cleanup_repository": {"name": "snapshot.cleanup_repository", "description": "Removes stale data from repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/clean-up-snapshot-repo-api.html", "stability": "stable", "request": {"$ref": "#/definitions/CleanupRepositoryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CleanupRepositoryResponse"}, "urls": [{"path": "/_snapshot/{repository}/_cleanup", "methods": ["POST"]}], "tags": ["snapshot"]}, "snapshot.create": {"name": "snapshot.create", "description": "Creates a snapshot in a repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/SnapshotRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SnapshotResponse"}, "urls": [{"path": "/_snapshot/{repository}/{snapshot}", "methods": ["PUT", "POST"]}], "tags": ["snapshot"]}, "snapshot.create_repository": {"name": "snapshot.create_repository", "description": "Creates a repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/CreateRepositoryRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/CreateRepositoryResponse"}, "urls": [{"path": "/_snapshot/{repository}", "methods": ["PUT", "POST"]}], "tags": ["snapshot"]}, "snapshot.delete": {"name": "snapshot.delete", "description": "Deletes a snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteSnapshotRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteSnapshotResponse"}, "urls": [{"path": "/_snapshot/{repository}/{snapshot}", "methods": ["DELETE"]}], "tags": ["snapshot"]}, "snapshot.delete_repository": {"name": "snapshot.delete_repository", "description": "Deletes a repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteRepositoryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteRepositoryResponse"}, "urls": [{"path": "/_snapshot/{repository}", "methods": ["DELETE"]}], "tags": ["snapshot"]}, "snapshot.get": {"name": "snapshot.get", "description": "Returns information about a snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/GetSnapshotRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetSnapshotResponse"}, "urls": [{"path": "/_snapshot/{repository}/{snapshot}", "methods": ["GET"]}], "tags": ["snapshot"]}, "snapshot.get_repository": {"name": "snapshot.get_repository", "description": "Returns information about a repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/GetRepositoryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetRepositoryResponse"}, "urls": [{"path": "/_snapshot", "methods": ["GET"]}, {"path": "/_snapshot/{repository}", "methods": ["GET"]}], "tags": ["snapshot"]}, "snapshot.restore": {"name": "snapshot.restore", "description": "Restores a snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/RestoreRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/RestoreResponse"}, "urls": [{"path": "/_snapshot/{repository}/{snapshot}/_restore", "methods": ["POST"]}], "tags": ["snapshot"]}, "snapshot.status": {"name": "snapshot.status", "description": "Returns information about the status of a snapshot.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/SnapshotStatusRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/SnapshotStatusResponse"}, "urls": [{"path": "/_snapshot/_status", "methods": ["GET"]}, {"path": "/_snapshot/{repository}/_status", "methods": ["GET"]}, {"path": "/_snapshot/{repository}/{snapshot}/_status", "methods": ["GET"]}], "tags": ["snapshot"]}, "snapshot.verify_repository": {"name": "snapshot.verify_repository", "description": "Verifies a repository.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html", "stability": "stable", "request": {"$ref": "#/definitions/VerifyRepositoryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/VerifyRepositoryResponse"}, "urls": [{"path": "/_snapshot/{repository}/_verify", "methods": ["POST"]}], "tags": ["snapshot"]}, "sql.clear_cursor": {"name": "sql.clear_cursor", "description": "Clears the SQL cursor", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-pagination.html", "stability": "stable", "request": {"$ref": "#/definitions/ClearSqlCursorRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/ClearSqlCursorResponse"}, "urls": [{"path": "/_sql/close", "methods": ["POST"]}], "tags": ["sql"]}, "sql.query": {"name": "sql.query", "description": "Executes a SQL request", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-rest-overview.html", "stability": "stable", "request": {"$ref": "#/definitions/QuerySqlRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/QuerySqlResponse"}, "urls": [{"path": "/_sql", "methods": ["POST", "GET"]}], "tags": ["sql"]}, "sql.translate": {"name": "sql.translate", "description": "Translates SQL into Elasticsearch queries", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-translate.html", "stability": "stable", "request": {"$ref": "#/definitions/TranslateSqlRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/TranslateSqlResponse"}, "urls": [{"path": "/_sql/translate", "methods": ["POST", "GET"]}], "tags": ["sql"]}, "ssl.certificates": {"name": "ssl.certificates", "description": "Retrieves information about the X.509 certificates used to encrypt communications in the cluster.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html", "stability": "stable", "request": {"$ref": "#/definitions/GetCertificatesRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetCertificatesResponse"}, "urls": [{"path": "/_ssl/certificates", "methods": ["GET"]}], "tags": ["ssl"]}, "tasks.cancel": {"name": "tasks.cancel", "description": "Cancels a task, if it can be cancelled through an API.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html", "stability": "stable", "request": {"$ref": "#/definitions/CancelTasksRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/CancelTasksResponse"}, "urls": [{"path": "/_tasks/_cancel", "methods": ["POST"]}, {"path": "/_tasks/{task_id}/_cancel", "methods": ["POST"]}], "tags": ["tasks"]}, "tasks.get": {"name": "tasks.get", "description": "Returns information about a task.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html", "stability": "stable", "request": {"$ref": "#/definitions/GetTaskRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetTaskResponse"}, "urls": [{"path": "/_tasks/{task_id}", "methods": ["GET"]}], "tags": ["tasks"]}, "tasks.list": {"name": "tasks.list", "description": "Returns a list of tasks.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html", "stability": "stable", "request": {"$ref": "#/definitions/ListTasksRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ListTasksResponse"}, "urls": [{"path": "/_tasks", "methods": ["GET"]}], "tags": ["tasks"]}, "termvectors": {"name": "termvectors", "description": "Returns information and statistics about terms in the fields of a particular document.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html", "stability": "stable", "request": {"$ref": "#/definitions/TermVectorsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/TermVectorsResponse"}, "urls": [{"path": "/{index}/_termvectors/{id}", "methods": ["GET", "POST"]}, {"path": "/{index}/_termvectors", "methods": ["GET", "POST"]}, {"path": "/{index}/{type}/{id}/_termvectors", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}, {"path": "/{index}/{type}/_termvectors", "methods": ["GET", "POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "transform.delete_transform": {"name": "transform.delete_transform", "description": "Deletes an existing transform.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteTransformRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteTransformResponse"}, "urls": [{"path": "/_transform/{transform_id}", "methods": ["DELETE"]}], "tags": ["transform"]}, "transform.get_transform": {"name": "transform.get_transform", "description": "Retrieves configuration information for transforms.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/GetTransformRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetTransformResponse"}, "urls": [{"path": "/_transform/{transform_id}", "methods": ["GET"]}, {"path": "/_transform", "methods": ["GET"]}], "tags": ["transform"]}, "transform.get_transform_stats": {"name": "transform.get_transform_stats", "description": "Retrieves usage information for transforms.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/GetTransformStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetTransformStatsResponse"}, "urls": [{"path": "/_transform/{transform_id}/_stats", "methods": ["GET"]}], "tags": ["transform"]}, "transform.preview_transform": {"name": "transform.preview_transform", "description": "Previews a transform.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/preview-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/PreviewTransformRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PreviewTransformResponse"}, "urls": [{"path": "/_transform/_preview", "methods": ["POST"]}], "tags": ["transform"]}, "transform.put_transform": {"name": "transform.put_transform", "description": "Instantiates a transform.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/PutTransformRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/PutTransformResponse"}, "urls": [{"path": "/_transform/{transform_id}", "methods": ["PUT"]}], "tags": ["transform"]}, "transform.start_transform": {"name": "transform.start_transform", "description": "Starts one or more transforms.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/StartTransformRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartTransformResponse"}, "urls": [{"path": "/_transform/{transform_id}/_start", "methods": ["POST"]}], "tags": ["transform"]}, "transform.stop_transform": {"name": "transform.stop_transform", "description": "Stops one or more transforms.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/StopTransformRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StopTransformResponse"}, "urls": [{"path": "/_transform/{transform_id}/_stop", "methods": ["POST"]}], "tags": ["transform"]}, "transform.update_transform": {"name": "transform.update_transform", "description": "Updates certain properties of a transform.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-transform.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateTransformRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateTransformResponse"}, "urls": [{"path": "/_transform/{transform_id}/_update", "methods": ["POST"]}], "tags": ["transform"]}, "update": {"name": "update", "description": "Updates a document with a script or partial document.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateRequest"}, "requestBodyRequired": true, "response": {"$ref": "#/definitions/UpdateResponse"}, "urls": [{"path": "/{index}/_update/{id}", "methods": ["POST"]}, {"path": "/{index}/{type}/{id}/_update", "methods": ["POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "update_by_query": {"name": "update_by_query", "description": "Performs an update on every document in the index without changing the source,\nfor example to pick up a mapping change.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html", "stability": "stable", "request": {"$ref": "#/definitions/UpdateByQueryRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/UpdateByQueryResponse"}, "urls": [{"path": "/{index}/_update_by_query", "methods": ["POST"]}, {"path": "/{index}/{type}/_update_by_query", "methods": ["POST"], "deprecation": {"version": "7.0.0", "description": "Specifying types in urls has been deprecated"}}]}, "watcher.ack_watch": {"name": "watcher.ack_watch", "description": "Acknowledges a watch, manually throttling the execution of the watch's actions.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/AcknowledgeWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/AcknowledgeWatchResponse"}, "urls": [{"path": "/_watcher/watch/{watch_id}/_ack", "methods": ["PUT", "POST"]}, {"path": "/_watcher/watch/{watch_id}/_ack/{action_id}", "methods": ["PUT", "POST"]}], "tags": ["watcher"]}, "watcher.activate_watch": {"name": "watcher.activate_watch", "description": "Activates a currently inactive watch.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/ActivateWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ActivateWatchResponse"}, "urls": [{"path": "/_watcher/watch/{watch_id}/_activate", "methods": ["PUT", "POST"]}], "tags": ["watcher"]}, "watcher.deactivate_watch": {"name": "watcher.deactivate_watch", "description": "Deactivates a currently active watch.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/DeactivateWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeactivateWatchResponse"}, "urls": [{"path": "/_watcher/watch/{watch_id}/_deactivate", "methods": ["PUT", "POST"]}], "tags": ["watcher"]}, "watcher.delete_watch": {"name": "watcher.delete_watch", "description": "Removes a watch from Watcher.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/DeleteWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/DeleteWatchResponse"}, "urls": [{"path": "/_watcher/watch/{id}", "methods": ["DELETE"]}], "tags": ["watcher"]}, "watcher.execute_watch": {"name": "watcher.execute_watch", "description": "Forces the execution of a stored watch.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/ExecuteWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/ExecuteWatchResponse"}, "urls": [{"path": "/_watcher/watch/{id}/_execute", "methods": ["PUT", "POST"]}, {"path": "/_watcher/watch/_execute", "methods": ["PUT", "POST"]}], "tags": ["watcher"]}, "watcher.get_watch": {"name": "watcher.get_watch", "description": "Retrieves a watch by its ID.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/GetWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/GetWatchResponse"}, "urls": [{"path": "/_watcher/watch/{id}", "methods": ["GET"]}], "tags": ["watcher"]}, "watcher.put_watch": {"name": "watcher.put_watch", "description": "Creates a new watch, or updates an existing one.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html", "stability": "stable", "request": {"$ref": "#/definitions/PutWatchRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/PutWatchResponse"}, "urls": [{"path": "/_watcher/watch/{id}", "methods": ["PUT", "POST"]}], "tags": ["watcher"]}, "watcher.start": {"name": "watcher.start", "description": "Starts Watcher if it is not already running.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html", "stability": "stable", "request": {"$ref": "#/definitions/StartWatcherRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StartWatcherResponse"}, "urls": [{"path": "/_watcher/_start", "methods": ["POST"]}], "tags": ["watcher"]}, "watcher.stats": {"name": "watcher.stats", "description": "Retrieves the current Watcher metrics.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html", "stability": "stable", "request": {"$ref": "#/definitions/WatcherStatsRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/WatcherStatsResponse"}, "urls": [{"path": "/_watcher/stats", "methods": ["GET"]}, {"path": "/_watcher/stats/{metric}", "methods": ["GET"]}], "tags": ["watcher"]}, "watcher.stop": {"name": "watcher.stop", "description": "Stops Watcher if it is running.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html", "stability": "stable", "request": {"$ref": "#/definitions/StopWatcherRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/StopWatcherResponse"}, "urls": [{"path": "/_watcher/_stop", "methods": ["POST"]}], "tags": ["watcher"]}, "xpack.info": {"name": "xpack.info", "description": "Retrieves information about the installed X-Pack features.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html", "stability": "stable", "request": {"$ref": "#/definitions/XPackInfoRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/XPackInfoResponse"}, "urls": [{"path": "/_xpack", "methods": ["GET"]}], "tags": ["xpack"]}, "xpack.usage": {"name": "xpack.usage", "description": "Retrieves usage information about the installed X-Pack features.", "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/usage-api.html", "stability": "stable", "request": {"$ref": "#/definitions/XPackUsageRequest"}, "requestBodyRequired": false, "response": {"$ref": "#/definitions/XPackUsageResponse"}, "urls": [{"path": "/_xpack/usage", "methods": ["GET"]}], "tags": ["xpack"]}}}